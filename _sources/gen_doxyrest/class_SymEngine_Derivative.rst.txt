.. index:: pair: class; SymEngine::Derivative
.. _doxid-class_sym_engine_1_1_derivative:

class SymEngine::Derivative
===========================

.. toctree::
	:hidden:

Overview
~~~~~~~~

:ref:`Derivative <doxid-class_sym_engine_1_1_derivative>` operator Derivative(f, [x, y, ...]) represents a derivative of ``f`` with respect to ``x``, ``y``, and so on. :ref:`More...<details-class_sym_engine_1_1_derivative>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <functions.h>
	
	class Derivative: public :ref:`SymEngine::Basic<doxid-class_sym_engine_1_1_basic>` {
	public:
		// construction
	
		:ref:`Derivative<doxid-class_sym_engine_1_1_derivative_1afdbbd4911cdf8bceb1d2feb4875f60e2>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg, const :ref:`multiset_basic<doxid-namespace_sym_engine_1a1faa34199db7ea427cbe7ed1cea81f84>`& x);

		// methods
	
		virtual :ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` :ref:`__hash__<doxid-class_sym_engine_1_1_derivative_1ac01762af5eaf754fdc558f9757b78ef2>`() const;
		virtual bool :ref:`__eq__<doxid-class_sym_engine_1_1_derivative_1ad8bdc0e2a20d43a31ed48de4aae3496c>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		virtual int :ref:`compare<doxid-class_sym_engine_1_1_derivative_1a65c03eafa3c1940f4287e0c2e2a1b3da>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`get_arg<doxid-class_sym_engine_1_1_derivative_1a529b8218767ef75480f5c63174d508b9>`() const;
		const :ref:`multiset_basic<doxid-namespace_sym_engine_1a1faa34199db7ea427cbe7ed1cea81f84>`& :target:`get_symbols<doxid-class_sym_engine_1_1_derivative_1ae317a10c077663cf0dd17c98d7ecd3bb>`() const;
		virtual :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :ref:`get_args<doxid-class_sym_engine_1_1_derivative_1a0df24f3ea762035c6914d1efc1386a09>`() const;
		bool :target:`is_canonical<doxid-class_sym_engine_1_1_derivative_1a1af3dd353cd6f6c36fdc0392326d3df4>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg, const :ref:`multiset_basic<doxid-namespace_sym_engine_1a1faa34199db7ea427cbe7ed1cea81f84>`& x) const;
		static RCP<const Derivative> :target:`create<doxid-class_sym_engine_1_1_derivative_1a45791d7761244d574bbc98accdcc245a>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg, const :ref:`multiset_basic<doxid-namespace_sym_engine_1a1faa34199db7ea427cbe7ed1cea81f84>`& x);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// fields
	
		:ref:`TypeID<doxid-namespace_sym_engine_1a976db42c9dfad76ad2c95a6038cbc093>` :ref:`type_code_<doxid-class_sym_engine_1_1_basic_1afc3cac9dbdf56974a961c8b2cdb4dfea>`;

		// methods
	
		RCP<T> :ref:`rcp_from_this<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1aed6b2bd25fd3fd124a5e97427f8372f2>`();
		RCP<const T> :ref:`rcp_from_this<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1aefdd4958f591ee705b60ea92d661a775>`() const;
	
		template <class T2>
		RCP<const T2> :ref:`rcp_from_this_cast<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1a122635053dc63f074487aa3ba0df13a1>`() const;
	
		unsigned int :ref:`use_count<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1acbea1ba6881779f17a5b81c0fd0eb2d2>`() const;
		:ref:`TypeID<doxid-namespace_sym_engine_1a976db42c9dfad76ad2c95a6038cbc093>` :ref:`get_type_code<doxid-class_sym_engine_1_1_basic_1a3837186572bf82a499cf81259d945804>`() const;
		:ref:`Basic<doxid-class_sym_engine_1_1_basic>`& :ref:`operator=<doxid-class_sym_engine_1_1_basic_1a8ddc236758a9cdd0fafadad57bfa4b09>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`&);
		:ref:`Basic<doxid-class_sym_engine_1_1_basic>`& :ref:`operator=<doxid-class_sym_engine_1_1_basic_1af04d269a2434302330e05a94238527a2>`(:ref:`Basic<doxid-class_sym_engine_1_1_basic>`&&);
		virtual :ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` :ref:`__hash__<doxid-class_sym_engine_1_1_basic_1ac950eca7e8403248252115bcba2e3ab1>`() const = 0;
		:ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` :ref:`hash<doxid-class_sym_engine_1_1_basic_1af71e629c952b7390d72f2d4b24694b62>`() const;
		virtual bool :ref:`__eq__<doxid-class_sym_engine_1_1_basic_1ac6a957e2006026f74c08ae6795f5ff7f>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const = 0;
		bool :ref:`__neq__<doxid-class_sym_engine_1_1_basic_1a3a3e923c9078ac82e01e453e80fa2134>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		int :ref:`__cmp__<doxid-class_sym_engine_1_1_basic_1adb2def25bca4104f085ae99c57af5ab3>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		virtual int :ref:`compare<doxid-class_sym_engine_1_1_basic_1af03cfca16a93aaa0aff2382cc2b5087f>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const = 0;
		std::string :ref:`__str__<doxid-class_sym_engine_1_1_basic_1a905153d35107acc23b37e04e1b430420>`() const;
		RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`subs<doxid-class_sym_engine_1_1_basic_1a7a502ee14598f873fefff54fac433d48>`(const :ref:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& subs_dict) const;
		RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`xreplace<doxid-class_sym_engine_1_1_basic_1a2a7d7c5de904a663634679523c9a5348>`(const :ref:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& subs_dict) const;
		virtual RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`expand_as_exp<doxid-class_sym_engine_1_1_basic_1a6423cc8431a87cbb88e010887904b274>`() const;
		virtual :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :ref:`get_args<doxid-class_sym_engine_1_1_basic_1a6544293931047d6d9097e81f7d306cae>`() const = 0;
		RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`diff<doxid-class_sym_engine_1_1_basic_1ad4e255f317caaaf57acabff9f6161b65>`(const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& x, bool cache = true) const;

.. _details-class_sym_engine_1_1_derivative:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

:ref:`Derivative <doxid-class_sym_engine_1_1_derivative>` operator Derivative(f, [x, y, ...]) represents a derivative of ``f`` with respect to ``x``, ``y``, and so on.

Construction
------------

.. index:: pair: function; Derivative
.. _doxid-class_sym_engine_1_1_derivative_1afdbbd4911cdf8bceb1d2feb4875f60e2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Derivative(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg, const :ref:`multiset_basic<doxid-namespace_sym_engine_1a1faa34199db7ea427cbe7ed1cea81f84>`& x)

x, y, ...

Methods
-------

.. index:: pair: function; __hash__
.. _doxid-class_sym_engine_1_1_derivative_1ac01762af5eaf754fdc558f9757b78ef2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual :ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` __hash__() const

Calculates the hash of the given :ref:`SymEngine <doxid-namespace_sym_engine>` class. Use :ref:`Basic.hash() <doxid-class_sym_engine_1_1_basic_1af71e629c952b7390d72f2d4b24694b62>` which gives a cached version of the hash.



.. rubric:: Returns:

64-bit integer value for the hash

.. index:: pair: function; __eq__
.. _doxid-class_sym_engine_1_1_derivative_1ad8bdc0e2a20d43a31ed48de4aae3496c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool __eq__(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const

true if ``this`` is equal to ``o``. Deprecated: Use :ref:`eq(const Basic &a, const Basic &b) <doxid-namespace_sym_engine_1a2861dd1747fa1416cd6ef023ef08fca5>` non-member method

.. index:: pair: function; compare
.. _doxid-class_sym_engine_1_1_derivative_1a65c03eafa3c1940f4287e0c2e2a1b3da:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual int compare(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const

Returns -1, 0, 1 for ``this < o, this == o, this > o``. This method is used when you want to sort things like ``x+y+z`` into canonical order. This function assumes that ``o`` is the same type as ``this``. Use ``__cmp__`` if you want general comparison.

.. index:: pair: function; get_args
.. _doxid-class_sym_engine_1_1_derivative_1a0df24f3ea762035c6914d1efc1386a09:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` get_args() const

Returns the list of arguments.

