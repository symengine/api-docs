.. index:: pair: class; SymEngine::Infty
.. _doxid-class_sym_engine_1_1_infty:

class SymEngine::Infty
======================

.. toctree::
	:hidden:

Overview
~~~~~~~~

This class holds "infinity" It includes a direction (like -infinity). :ref:`More...<details-class_sym_engine_1_1_infty>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <infinity.h>
	
	class Infty: public :ref:`SymEngine::Number<doxid-class_sym_engine_1_1_number>` {
	public:
		// construction
	
		:ref:`Infty<doxid-class_sym_engine_1_1_infty_1ab366c52010b29d631278bfa513458c2b>`(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& direction);
		:ref:`Infty<doxid-class_sym_engine_1_1_infty_1ad47fc5484f24822c842365728644eb80>`(const Infty& inf);

		// methods
	
		bool :ref:`is_canonical<doxid-class_sym_engine_1_1_infty_1a1bd62a155f1fd828bee6f249785dc779>`(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& num) const;
		virtual :ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` :ref:`__hash__<doxid-class_sym_engine_1_1_infty_1ad282bbef0c76f2f20b1d0b01061a4d97>`() const;
		virtual bool :ref:`__eq__<doxid-class_sym_engine_1_1_infty_1a2597eeb29b13fb888ad0a9d4280ca82f>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		virtual int :ref:`compare<doxid-class_sym_engine_1_1_infty_1ad69fb0888a99a1cf0f19af67bbb75886>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		virtual :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :ref:`get_args<doxid-class_sym_engine_1_1_infty_1a05eedd6c7b61f07506d4d1065bdaf0da>`() const;
		virtual bool :ref:`is_zero<doxid-class_sym_engine_1_1_infty_1ad7c1bbc8d0163f2c07e2e923d51e3c38>`() const;
		virtual bool :ref:`is_one<doxid-class_sym_engine_1_1_infty_1af189bed64134d6a8f99d575107d5686e>`() const;
		virtual bool :ref:`is_minus_one<doxid-class_sym_engine_1_1_infty_1a44141b7af3d95cb1c5a8d5be8519bbfb>`() const;
		virtual bool :ref:`is_exact<doxid-class_sym_engine_1_1_infty_1a44a2e8f314bfab0073dd1839f9ad2873>`() const;
		virtual :ref:`Evaluate<doxid-class_sym_engine_1_1_evaluate>`& :ref:`get_eval<doxid-class_sym_engine_1_1_infty_1ae05a2aed4137335c550d9f3323c617ab>`() const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :target:`get_direction<doxid-class_sym_engine_1_1_infty_1aa40cb62cec8dd0df1716080afed2ce5d>`() const;
		bool :target:`is_unsigned_infinity<doxid-class_sym_engine_1_1_infty_1a82e0708b2f0e5c9be8b4f4cc65c52ff9>`() const;
		bool :target:`is_positive_infinity<doxid-class_sym_engine_1_1_infty_1a3cade49f4c7e4920e6f041930f7f971f>`() const;
		bool :target:`is_negative_infinity<doxid-class_sym_engine_1_1_infty_1a2714e1b9525c0ef3cf29d0da4feb734c>`() const;
		virtual bool :ref:`is_positive<doxid-class_sym_engine_1_1_infty_1aad1bb38c040425571d5a755fd8163289>`() const;
		virtual bool :ref:`is_negative<doxid-class_sym_engine_1_1_infty_1a33e031b3faaa1524a98509b271890533>`() const;
		virtual bool :ref:`is_complex<doxid-class_sym_engine_1_1_infty_1af7031a830053470c80c414a19c26d2fb>`() const;
		virtual RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`conjugate<doxid-class_sym_engine_1_1_infty_1a301e6baeed480dc9bb93e5bd73c702ae>`() const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`add<doxid-class_sym_engine_1_1_infty_1acefccca0d9620d77228cd40ddd5372c2>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`mul<doxid-class_sym_engine_1_1_infty_1af6ef043ab191c035a70cde90a7a0dd6b>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`div<doxid-class_sym_engine_1_1_infty_1a1af335d3ca98f6b579a2394bc6b4c0f6>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`pow<doxid-class_sym_engine_1_1_infty_1aa150df0b9fb2e4f5423a894ade6f4ef4>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :target:`rpow<doxid-class_sym_engine_1_1_infty_1ab3062ad11318199ae3f953492ff23238>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		static RCP<const Infty> :target:`from_direction<doxid-class_sym_engine_1_1_infty_1abefc9efe8c516881fe46f465a59cf906>`(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& direction);
		static RCP<const Infty> :ref:`from_int<doxid-class_sym_engine_1_1_infty_1a87a854f1c0bd8fc945dcf59c42f6fd46>`(const int val);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// fields
	
		:ref:`TypeID<doxid-namespace_sym_engine_1a976db42c9dfad76ad2c95a6038cbc093>` :ref:`type_code_<doxid-class_sym_engine_1_1_basic_1afc3cac9dbdf56974a961c8b2cdb4dfea>`;

		// methods
	
		RCP<T> :ref:`rcp_from_this<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1aed6b2bd25fd3fd124a5e97427f8372f2>`();
		RCP<const T> :ref:`rcp_from_this<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1aefdd4958f591ee705b60ea92d661a775>`() const;
	
		template <class T2>
		RCP<const T2> :ref:`rcp_from_this_cast<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1a122635053dc63f074487aa3ba0df13a1>`() const;
	
		unsigned int :ref:`use_count<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1acbea1ba6881779f17a5b81c0fd0eb2d2>`() const;
		:ref:`TypeID<doxid-namespace_sym_engine_1a976db42c9dfad76ad2c95a6038cbc093>` :ref:`get_type_code<doxid-class_sym_engine_1_1_basic_1a3837186572bf82a499cf81259d945804>`() const;
		:ref:`Basic<doxid-class_sym_engine_1_1_basic>`& :ref:`operator=<doxid-class_sym_engine_1_1_basic_1a8ddc236758a9cdd0fafadad57bfa4b09>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`&);
		:ref:`Basic<doxid-class_sym_engine_1_1_basic>`& :ref:`operator=<doxid-class_sym_engine_1_1_basic_1af04d269a2434302330e05a94238527a2>`(:ref:`Basic<doxid-class_sym_engine_1_1_basic>`&&);
		virtual :ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` :ref:`__hash__<doxid-class_sym_engine_1_1_basic_1ac950eca7e8403248252115bcba2e3ab1>`() const = 0;
		:ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` :ref:`hash<doxid-class_sym_engine_1_1_basic_1af71e629c952b7390d72f2d4b24694b62>`() const;
		virtual bool :ref:`__eq__<doxid-class_sym_engine_1_1_basic_1ac6a957e2006026f74c08ae6795f5ff7f>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const = 0;
		bool :ref:`__neq__<doxid-class_sym_engine_1_1_basic_1a3a3e923c9078ac82e01e453e80fa2134>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		int :ref:`__cmp__<doxid-class_sym_engine_1_1_basic_1adb2def25bca4104f085ae99c57af5ab3>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		virtual int :ref:`compare<doxid-class_sym_engine_1_1_basic_1af03cfca16a93aaa0aff2382cc2b5087f>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const = 0;
		std::string :ref:`__str__<doxid-class_sym_engine_1_1_basic_1a905153d35107acc23b37e04e1b430420>`() const;
		RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`subs<doxid-class_sym_engine_1_1_basic_1a7a502ee14598f873fefff54fac433d48>`(const :ref:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& subs_dict) const;
		RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`xreplace<doxid-class_sym_engine_1_1_basic_1a2a7d7c5de904a663634679523c9a5348>`(const :ref:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& subs_dict) const;
		virtual RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`expand_as_exp<doxid-class_sym_engine_1_1_basic_1a6423cc8431a87cbb88e010887904b274>`() const;
		virtual :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :ref:`get_args<doxid-class_sym_engine_1_1_basic_1a6544293931047d6d9097e81f7d306cae>`() const = 0;
		RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`diff<doxid-class_sym_engine_1_1_basic_1ad4e255f317caaaf57acabff9f6161b65>`(const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& x, bool cache = true) const;
		virtual bool :ref:`is_zero<doxid-class_sym_engine_1_1_number_1ae917a11d6a9c078a779a86c2e5a1b547>`() const = 0;
		virtual bool :ref:`is_one<doxid-class_sym_engine_1_1_number_1a2b793da7385a260ce4007e2af44d3de3>`() const = 0;
		virtual bool :ref:`is_minus_one<doxid-class_sym_engine_1_1_number_1aeaf95ae61754c341cac4467f1d7011a7>`() const = 0;
		virtual bool :ref:`is_negative<doxid-class_sym_engine_1_1_number_1a648c569350bce74ac1b8f6efc344971f>`() const = 0;
		virtual bool :ref:`is_positive<doxid-class_sym_engine_1_1_number_1abdc51eafcb71b60bcad71eb89a8f79d0>`() const = 0;
		virtual bool :ref:`is_complex<doxid-class_sym_engine_1_1_number_1a30f5893257d8f91fbe92d821dc4094f8>`() const = 0;
		virtual RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`conjugate<doxid-class_sym_engine_1_1_number_1aa63348fe91ef4ca5e1cd66e7947dd553>`() const;
		virtual bool :ref:`is_exact<doxid-class_sym_engine_1_1_number_1a3aafc16ff2afe30f9c21d551248ec0c0>`() const;
		bool :ref:`is_exact_zero<doxid-class_sym_engine_1_1_number_1a8001d70a87176a33b92861fbd46dce51>`() const;
		virtual :ref:`Evaluate<doxid-class_sym_engine_1_1_evaluate>`& :ref:`get_eval<doxid-class_sym_engine_1_1_number_1a1109902b92095c26562a6a53e367ec6e>`() const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`add<doxid-class_sym_engine_1_1_number_1a557e5884de4dabb96f68c20b97abbbe7>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const = 0;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`sub<doxid-class_sym_engine_1_1_number_1add7faf85931fc31190cb5434f7efb9a0>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rsub<doxid-class_sym_engine_1_1_number_1a715f82af951f17db954f3eaa2f69984b>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`mul<doxid-class_sym_engine_1_1_number_1a12380b3f77995ca02d6712906b0ffdf4>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const = 0;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`div<doxid-class_sym_engine_1_1_number_1ac953b8fa68f5ecbb5f7f43ceccf50c15>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rdiv<doxid-class_sym_engine_1_1_number_1a9c17bed6eaf7698c91a640c186e7f867>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`pow<doxid-class_sym_engine_1_1_number_1a58bdc90b6e70916fe90bcad312670623>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const = 0;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rpow<doxid-class_sym_engine_1_1_number_1aff0deb08b64a4710ebf11793132b72ae>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const = 0;
		virtual :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :ref:`get_args<doxid-class_sym_engine_1_1_number_1ae7bd5cd19b89ff042088c1ecec21460b>`() const;
		virtual bool :ref:`is_perfect_power<doxid-class_sym_engine_1_1_number_1a5e9609f3bcb7297c3c6f22abe3a1e128>`(bool is_expected = false) const;
		virtual bool :ref:`nth_root<doxid-class_sym_engine_1_1_number_1ac0b9ee179d987ac976282202b0024f3e>`(const Ptr<RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>>&, unsigned long n) const;

.. _details-class_sym_engine_1_1_infty:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This class holds "infinity" It includes a direction (like -infinity).

Construction
------------

.. index:: pair: function; Infty
.. _doxid-class_sym_engine_1_1_infty_1ab366c52010b29d631278bfa513458c2b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Infty(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& direction)

Constructs :ref:`Infty <doxid-class_sym_engine_1_1_infty>` using the sign of ``_direction``

.. index:: pair: function; Infty
.. _doxid-class_sym_engine_1_1_infty_1ad47fc5484f24822c842365728644eb80:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Infty(const Infty& inf)

Copy Constructor.

Methods
-------

.. index:: pair: function; is_canonical
.. _doxid-class_sym_engine_1_1_infty_1a1bd62a155f1fd828bee6f249785dc779:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool is_canonical(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& num) const

Canonical when the direction is -1, 0 or 1.



.. rubric:: Returns:

true if canonical

.. index:: pair: function; __hash__
.. _doxid-class_sym_engine_1_1_infty_1ad282bbef0c76f2f20b1d0b01061a4d97:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual :ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` __hash__() const



.. rubric:: Returns:

size of the hash

.. index:: pair: function; __eq__
.. _doxid-class_sym_engine_1_1_infty_1a2597eeb29b13fb888ad0a9d4280ca82f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool __eq__(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const

:ref:`Equality <doxid-class_sym_engine_1_1_equality>` comparator



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- o

		- - Object to be compared with



.. rubric:: Returns:

whether the 2 objects are equal

.. index:: pair: function; compare
.. _doxid-class_sym_engine_1_1_infty_1ad69fb0888a99a1cf0f19af67bbb75886:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual int compare(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const

Returns -1, 0, 1 for ``this < o, this == o, this > o``. This method is used when you want to sort things like ``x+y+z`` into canonical order. This function assumes that ``o`` is the same type as ``this``. Use ``__cmp__`` if you want general comparison.

.. index:: pair: function; get_args
.. _doxid-class_sym_engine_1_1_infty_1a05eedd6c7b61f07506d4d1065bdaf0da:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` get_args() const

Returns the list of arguments.

.. index:: pair: function; is_zero
.. _doxid-class_sym_engine_1_1_infty_1ad7c1bbc8d0163f2c07e2e923d51e3c38:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool is_zero() const



.. rubric:: Returns:

``true`` if ``0``

.. index:: pair: function; is_one
.. _doxid-class_sym_engine_1_1_infty_1af189bed64134d6a8f99d575107d5686e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool is_one() const



.. rubric:: Returns:

``true`` if ``1``

.. index:: pair: function; is_minus_one
.. _doxid-class_sym_engine_1_1_infty_1a44141b7af3d95cb1c5a8d5be8519bbfb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool is_minus_one() const



.. rubric:: Returns:

``true`` if ``-1``

.. index:: pair: function; is_exact
.. _doxid-class_sym_engine_1_1_infty_1a44a2e8f314bfab0073dd1839f9ad2873:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool is_exact() const



.. rubric:: Returns:

``true`` if this number is an exact number

.. index:: pair: function; get_eval
.. _doxid-class_sym_engine_1_1_infty_1ae05a2aed4137335c550d9f3323c617ab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual :ref:`Evaluate<doxid-class_sym_engine_1_1_evaluate>`& get_eval() const

Get ``:ref:`Evaluate <doxid-class_sym_engine_1_1_evaluate>``` singleton to evaluate numerically.

.. index:: pair: function; is_positive
.. _doxid-class_sym_engine_1_1_infty_1aad1bb38c040425571d5a755fd8163289:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool is_positive() const



.. rubric:: Returns:

true if positive

.. index:: pair: function; is_negative
.. _doxid-class_sym_engine_1_1_infty_1a33e031b3faaa1524a98509b271890533:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool is_negative() const



.. rubric:: Returns:

true if negative

.. index:: pair: function; is_complex
.. _doxid-class_sym_engine_1_1_infty_1af7031a830053470c80c414a19c26d2fb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool is_complex() const



.. rubric:: Returns:

true if a complex number

.. index:: pair: function; conjugate
.. _doxid-class_sym_engine_1_1_infty_1a301e6baeed480dc9bb93e5bd73c702ae:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> conjugate() const



.. rubric:: Returns:

the conjugate if the class is complex

.. index:: pair: function; add
.. _doxid-class_sym_engine_1_1_infty_1acefccca0d9620d77228cd40ddd5372c2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> add(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const

Addition.

.. index:: pair: function; mul
.. _doxid-class_sym_engine_1_1_infty_1af6ef043ab191c035a70cde90a7a0dd6b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> mul(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const

Multiplication.

.. index:: pair: function; div
.. _doxid-class_sym_engine_1_1_infty_1a1af335d3ca98f6b579a2394bc6b4c0f6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> div(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const

Division.

.. index:: pair: function; pow
.. _doxid-class_sym_engine_1_1_infty_1aa150df0b9fb2e4f5423a894ade6f4ef4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> pow(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const

Power.

.. index:: pair: function; from_int
.. _doxid-class_sym_engine_1_1_infty_1a87a854f1c0bd8fc945dcf59c42f6fd46:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static RCP<const Infty> from_int(const int val)

Constructs :ref:`Infty <doxid-class_sym_engine_1_1_infty>` using sign of ``val``

