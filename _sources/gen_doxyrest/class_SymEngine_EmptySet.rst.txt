.. index:: pair: class; SymEngine::EmptySet
.. _doxid-class_sym_engine_1_1_empty_set:

class SymEngine::EmptySet
=========================

.. toctree::
	:hidden:

Overview
~~~~~~~~




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <sets.h>
	
	class EmptySet: public :ref:`SymEngine::Set<doxid-class_sym_engine_1_1_set>` {
	public:
		// construction
	
		:target:`EmptySet<doxid-class_sym_engine_1_1_empty_set_1a9e18badf2f1c8f3eb79ef16817c9f8c9>`();

		// methods
	
		void :target:`operator=<doxid-class_sym_engine_1_1_empty_set_1a645cb1423a4aba94de2fdfef0c1632c5>`(EmptySet const&);
		virtual :ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` :ref:`__hash__<doxid-class_sym_engine_1_1_empty_set_1abebaf54f70c0caba61f60b064cfb11c0>`() const;
		virtual bool :ref:`__eq__<doxid-class_sym_engine_1_1_empty_set_1abe62c9d7aecc2ee035c30da02cff3ec5>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		virtual int :ref:`compare<doxid-class_sym_engine_1_1_empty_set_1a3a8b7299cd73d570667467aa446b70d0>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		virtual :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :ref:`get_args<doxid-class_sym_engine_1_1_empty_set_1a38734da90cf411b91cb30751507ffff8>`() const;
		virtual RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`set_intersection<doxid-class_sym_engine_1_1_empty_set_1a02081dd0893a1dee4c114af3fb94872a>`(const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& o) const;
		virtual RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`set_union<doxid-class_sym_engine_1_1_empty_set_1a25c16ee37a362011d93e29dfaa7c2c05>`(const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& o) const;
		virtual RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`set_complement<doxid-class_sym_engine_1_1_empty_set_1ae4e78ad485d8874cc77a97a3d159b8ff>`(const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& o) const;
		virtual RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :target:`contains<doxid-class_sym_engine_1_1_empty_set_1ad9f71f236cc15c9f561e83bf60c31c13>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a) const;
		static const RCP<const EmptySet>& :target:`getInstance<doxid-class_sym_engine_1_1_empty_set_1a011da093f16e95308f00e7028d52e2bb>`();
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// fields
	
		:ref:`TypeID<doxid-namespace_sym_engine_1a976db42c9dfad76ad2c95a6038cbc093>` :ref:`type_code_<doxid-class_sym_engine_1_1_basic_1afc3cac9dbdf56974a961c8b2cdb4dfea>`;

		// methods
	
		RCP<T> :ref:`rcp_from_this<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1aed6b2bd25fd3fd124a5e97427f8372f2>`();
		RCP<const T> :ref:`rcp_from_this<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1aefdd4958f591ee705b60ea92d661a775>`() const;
	
		template <class T2>
		RCP<const T2> :ref:`rcp_from_this_cast<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1a122635053dc63f074487aa3ba0df13a1>`() const;
	
		unsigned int :ref:`use_count<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1acbea1ba6881779f17a5b81c0fd0eb2d2>`() const;
		:ref:`TypeID<doxid-namespace_sym_engine_1a976db42c9dfad76ad2c95a6038cbc093>` :ref:`get_type_code<doxid-class_sym_engine_1_1_basic_1a3837186572bf82a499cf81259d945804>`() const;
		:ref:`Basic<doxid-class_sym_engine_1_1_basic>`& :ref:`operator=<doxid-class_sym_engine_1_1_basic_1a8ddc236758a9cdd0fafadad57bfa4b09>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`&);
		:ref:`Basic<doxid-class_sym_engine_1_1_basic>`& :ref:`operator=<doxid-class_sym_engine_1_1_basic_1af04d269a2434302330e05a94238527a2>`(:ref:`Basic<doxid-class_sym_engine_1_1_basic>`&&);
		virtual :ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` :ref:`__hash__<doxid-class_sym_engine_1_1_basic_1ac950eca7e8403248252115bcba2e3ab1>`() const = 0;
		:ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` :ref:`hash<doxid-class_sym_engine_1_1_basic_1af71e629c952b7390d72f2d4b24694b62>`() const;
		virtual bool :ref:`__eq__<doxid-class_sym_engine_1_1_basic_1ac6a957e2006026f74c08ae6795f5ff7f>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const = 0;
		bool :ref:`__neq__<doxid-class_sym_engine_1_1_basic_1a3a3e923c9078ac82e01e453e80fa2134>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		int :ref:`__cmp__<doxid-class_sym_engine_1_1_basic_1adb2def25bca4104f085ae99c57af5ab3>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		virtual int :ref:`compare<doxid-class_sym_engine_1_1_basic_1af03cfca16a93aaa0aff2382cc2b5087f>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const = 0;
		std::string :ref:`__str__<doxid-class_sym_engine_1_1_basic_1a905153d35107acc23b37e04e1b430420>`() const;
		RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`subs<doxid-class_sym_engine_1_1_basic_1a7a502ee14598f873fefff54fac433d48>`(const :ref:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& subs_dict) const;
		RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`xreplace<doxid-class_sym_engine_1_1_basic_1a2a7d7c5de904a663634679523c9a5348>`(const :ref:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& subs_dict) const;
		virtual RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`expand_as_exp<doxid-class_sym_engine_1_1_basic_1a6423cc8431a87cbb88e010887904b274>`() const;
		virtual :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :ref:`get_args<doxid-class_sym_engine_1_1_basic_1a6544293931047d6d9097e81f7d306cae>`() const = 0;
		RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`diff<doxid-class_sym_engine_1_1_basic_1ad4e255f317caaaf57acabff9f6161b65>`(const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& x, bool cache = true) const;
		virtual :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :ref:`get_args<doxid-class_sym_engine_1_1_set_1a6c37911feafff49dc48582f5076c8b3f>`() const = 0;
		virtual RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :ref:`set_intersection<doxid-class_sym_engine_1_1_set_1a81378f71d58e668bedc763804251e7c4>`(const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& o) const = 0;
		virtual RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :ref:`set_union<doxid-class_sym_engine_1_1_set_1abf36241a9dc8a73f8fa51c7bdd61ac20>`(const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& o) const = 0;
		virtual RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :ref:`set_complement<doxid-class_sym_engine_1_1_set_1abf6d9c8fc47ea56db028895932051a83>`(const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& o) const = 0;
		virtual RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :ref:`contains<doxid-class_sym_engine_1_1_set_1a8abf0e11084a55a0b19ff0f4fc180118>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a) const = 0;
		bool :ref:`is_subset<doxid-class_sym_engine_1_1_set_1a4911e3624ca917c5431c10f6f30932de>`(const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& o) const;
		bool :ref:`is_proper_subset<doxid-class_sym_engine_1_1_set_1a30470742694d14f206778d8dd942ced6>`(const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& o) const;
		bool :ref:`is_superset<doxid-class_sym_engine_1_1_set_1a8c3e1bc2514ac807252964a91b0060b6>`(const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& o) const;
		bool :ref:`is_proper_superset<doxid-class_sym_engine_1_1_set_1a6afafc0253b5172c6b2c0fb7b0bcbb6c>`(const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& o) const;

.. _details-class_sym_engine_1_1_empty_set:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Methods
-------

.. index:: pair: function; __hash__
.. _doxid-class_sym_engine_1_1_empty_set_1abebaf54f70c0caba61f60b064cfb11c0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual :ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` __hash__() const

Calculates the hash of the given :ref:`SymEngine <doxid-namespace_sym_engine>` class. Use :ref:`Basic.hash() <doxid-class_sym_engine_1_1_basic_1af71e629c952b7390d72f2d4b24694b62>` which gives a cached version of the hash.



.. rubric:: Returns:

64-bit integer value for the hash

.. index:: pair: function; __eq__
.. _doxid-class_sym_engine_1_1_empty_set_1abe62c9d7aecc2ee035c30da02cff3ec5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool __eq__(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const

true if ``this`` is equal to ``o``. Deprecated: Use :ref:`eq(const Basic &a, const Basic &b) <doxid-namespace_sym_engine_1a2861dd1747fa1416cd6ef023ef08fca5>` non-member method

.. index:: pair: function; compare
.. _doxid-class_sym_engine_1_1_empty_set_1a3a8b7299cd73d570667467aa446b70d0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual int compare(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const

Returns -1, 0, 1 for ``this < o, this == o, this > o``. This method is used when you want to sort things like ``x+y+z`` into canonical order. This function assumes that ``o`` is the same type as ``this``. Use ``__cmp__`` if you want general comparison.

.. index:: pair: function; get_args
.. _doxid-class_sym_engine_1_1_empty_set_1a38734da90cf411b91cb30751507ffff8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` get_args() const

Returns the list of arguments.

