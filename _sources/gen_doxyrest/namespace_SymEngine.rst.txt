.. index:: pair: namespace; SymEngine
.. _doxid-namespace_sym_engine:

namespace SymEngine
===================

.. toctree::
	:hidden:

	namespace_SymEngine_detail.rst
	namespace_SymEngine_literals.rst
	enum_SymEngine_EvalfDomain.rst
	enum_SymEngine_TypeID.rst
	enum_SymEngine_tribool.rst
	struct_SymEngine_RCPBasicHash.rst
	struct_SymEngine_RCPBasicKeyEq.rst
	struct_SymEngine_RCPBasicKeyLess.rst
	struct_SymEngine_RCPIntegerKeyLess.rst
	struct_SymEngine_is_base_of_multiple.rst
	struct_SymEngine_is_base_of_multiple-2.rst
	struct_SymEngine_remove_reference.rst
	struct_SymEngine_remove_reference-2.rst
	struct_SymEngine_two_by_two_matrix.rst
	struct_SymEngine_vec_hash.rst
	class_SymEngine_ACos.rst
	class_SymEngine_ACosh.rst
	class_SymEngine_ACot.rst
	class_SymEngine_ACoth.rst
	class_SymEngine_ACsc.rst
	class_SymEngine_ACsch.rst
	class_SymEngine_ASec.rst
	class_SymEngine_ASech.rst
	class_SymEngine_ASin.rst
	class_SymEngine_ASinh.rst
	class_SymEngine_ATan.rst
	class_SymEngine_ATan2.rst
	class_SymEngine_ATanh.rst
	class_SymEngine_Abs.rst
	class_SymEngine_Add.rst
	class_SymEngine_And.rst
	class_SymEngine_AtomsVisitor.rst
	class_SymEngine_BaseVisitor.rst
	class_SymEngine_Basic.rst
	class_SymEngine_Beta.rst
	class_SymEngine_Boolean.rst
	class_SymEngine_BooleanAtom.rst
	class_SymEngine_CSRMatrix.rst
	class_SymEngine_Ceiling.rst
	class_SymEngine_CoeffVisitor.rst
	class_SymEngine_Complement.rst
	class_SymEngine_Complex.rst
	class_SymEngine_ComplexBase.rst
	class_SymEngine_ComplexDouble.rst
	class_SymEngine_ComplexMPC.rst
	class_SymEngine_ConditionSet.rst
	class_SymEngine_Conjugate.rst
	class_SymEngine_Constant.rst
	class_SymEngine_Contains.rst
	class_SymEngine_Cos.rst
	class_SymEngine_Cosh.rst
	class_SymEngine_Cot.rst
	class_SymEngine_Coth.rst
	class_SymEngine_CountOpsVisitor.rst
	class_SymEngine_Csc.rst
	class_SymEngine_Csch.rst
	class_SymEngine_DenseMatrix.rst
	class_SymEngine_Derivative.rst
	class_SymEngine_DiffVisitor.rst
	class_SymEngine_Dirichlet_eta.rst
	class_SymEngine_Dummy.rst
	class_SymEngine_EmptySet.rst
	class_SymEngine_EnableRCPFromThis.rst
	class_SymEngine_Equality.rst
	class_SymEngine_Erf.rst
	class_SymEngine_Erfc.rst
	class_SymEngine_EvalComplexDoubleVisitor.rst
	class_SymEngine_EvalDoubleVisitor.rst
	class_SymEngine_EvalRealDoubleVisitor.rst
	class_SymEngine_EvalRealDoubleVisitorFinal.rst
	class_SymEngine_EvalRealDoubleVisitorPattern.rst
	class_SymEngine_EvalVisitor.rst
	class_SymEngine_Evaluate.rst
	class_SymEngine_EvaluateComplexDouble.rst
	class_SymEngine_EvaluateDouble.rst
	class_SymEngine_EvaluateInfty.rst
	class_SymEngine_EvaluateNaN.rst
	class_SymEngine_EvaluateRealDouble.rst
	class_SymEngine_ExpandVisitor.rst
	class_SymEngine_Expression.rst
	class_SymEngine_FiniteSet.rst
	class_SymEngine_Floor.rst
	class_SymEngine_FreeSymbolsVisitor.rst
	class_SymEngine_FuncArgTracker.rst
	class_SymEngine_Function.rst
	class_SymEngine_FunctionSymbol.rst
	class_SymEngine_FunctionWrapper.rst
	class_SymEngine_GaloisField.rst
	class_SymEngine_GaloisFieldDict.rst
	class_SymEngine_Gamma.rst
	class_SymEngine_HasSymbolVisitor.rst
	class_SymEngine_HyperbolicBase.rst
	class_SymEngine_HyperbolicFunction.rst
	class_SymEngine_IRBuilder.rst
	class_SymEngine_ImageSet.rst
	class_SymEngine_Infty.rst
	class_SymEngine_Integer.rst
	class_SymEngine_Integers.rst
	class_SymEngine_Interval.rst
	class_SymEngine_InverseHyperbolicFunction.rst
	class_SymEngine_InverseTrigFunction.rst
	class_SymEngine_InvertComplexVisitor.rst
	class_SymEngine_IsALinearArgTrigVisitor.rst
	class_SymEngine_KroneckerDelta.rst
	class_SymEngine_LambdaComplexDoubleVisitor.rst
	class_SymEngine_LambdaDoubleVisitor.rst
	class_SymEngine_LambdaRealDoubleVisitor.rst
	class_SymEngine_LambertW.rst
	class_SymEngine_LessThan.rst
	class_SymEngine_LeviCivita.rst
	class_SymEngine_LocalStopVisitor.rst
	class_SymEngine_Log.rst
	class_SymEngine_LogGamma.rst
	class_SymEngine_LowerGamma.rst
	class_SymEngine_MSubsVisitor.rst
	class_SymEngine_MatrixBase.rst
	class_SymEngine_Max.rst
	class_SymEngine_Min.rst
	class_SymEngine_Mul.rst
	class_SymEngine_MultiArgFunction.rst
	class_SymEngine_NaN.rst
	class_SymEngine_NeedsSymbolicExpansionVisitor.rst
	class_SymEngine_Not.rst
	class_SymEngine_Number.rst
	class_SymEngine_NumberWrapper.rst
	class_SymEngine_NumerDenomVisitor.rst
	class_SymEngine_OneArgFunction.rst
	class_SymEngine_OptsCSEVisitor.rst
	class_SymEngine_Or.rst
	class_SymEngine_Piecewise.rst
	class_SymEngine_PolyGamma.rst
	class_SymEngine_Pow.rst
	class_SymEngine_Rational.rst
	class_SymEngine_RealDouble.rst
	class_SymEngine_RealImagVisitor.rst
	class_SymEngine_RealMPFR.rst
	class_SymEngine_Reals.rst
	class_SymEngine_RebuildVisitor.rst
	class_SymEngine_Relational.rst
	class_SymEngine_RewriteAsExp.rst
	class_SymEngine_SSubsVisitor.rst
	class_SymEngine_Sec.rst
	class_SymEngine_Sech.rst
	class_SymEngine_SeriesBase.rst
	class_SymEngine_SeriesCoeffInterface.rst
	class_SymEngine_SeriesVisitor.rst
	class_SymEngine_Set.rst
	class_SymEngine_Sieve.rst
	class_SymEngine_Sign.rst
	class_SymEngine_Sin.rst
	class_SymEngine_Sinh.rst
	class_SymEngine_StopVisitor.rst
	class_SymEngine_StrictLessThan.rst
	class_SymEngine_Subs.rst
	class_SymEngine_SubsVisitor.rst
	class_SymEngine_Symbol.rst
	class_SymEngine_Tan.rst
	class_SymEngine_Tanh.rst
	class_SymEngine_TransformVisitor.rst
	class_SymEngine_TrigBase.rst
	class_SymEngine_TrigFunction.rst
	class_SymEngine_Truncate.rst
	class_SymEngine_TwoArgBasic.rst
	class_SymEngine_Unequality.rst
	class_SymEngine_UnevaluatedExpr.rst
	class_SymEngine_Union.rst
	class_SymEngine_UnivariateSeries.rst
	class_SymEngine_UniversalSet.rst
	class_SymEngine_UpperGamma.rst
	class_SymEngine_Visitor.rst
	class_SymEngine_XReplaceVisitor.rst
	class_SymEngine_Xor.rst
	class_SymEngine_ZeroVisitor.rst
	class_SymEngine_Zeta.rst
	class_SymEngine_fmpq_poly_wrapper.rst
	class_SymEngine_fmpq_wrapper.rst
	class_SymEngine_fmpz_poly_factor_wrapper.rst
	class_SymEngine_fmpz_poly_wrapper.rst
	class_SymEngine_fmpz_wrapper.rst
	class_SymEngine_mp_randstate.rst
	class_SymEngine_mpq_view_flint.rst
	class_SymEngine_mpz_view_flint.rst

Overview
~~~~~~~~

Main namespace for :ref:`SymEngine <doxid-namespace_sym_engine>` package. :ref:`More...<details-namespace_sym_engine>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	namespace SymEngine {

	// namespaces

	namespace :ref:`SymEngine::detail<doxid-namespace_sym_engine_1_1detail>`;
	namespace :ref:`SymEngine::literals<doxid-namespace_sym_engine_1_1literals>`;

	// typedefs

	typedef uint64_t :target:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>`;
	typedef std::unordered_map<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>, RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>, :ref:`RCPBasicHash<doxid-struct_sym_engine_1_1_r_c_p_basic_hash>`, :ref:`RCPBasicKeyEq<doxid-struct_sym_engine_1_1_r_c_p_basic_key_eq>`> :target:`umap_basic_num<doxid-namespace_sym_engine_1ab37a0fc09c189e2d50880c64ebc5137e>`;
	typedef std::unordered_map<short, RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>> :target:`umap_short_basic<doxid-namespace_sym_engine_1ab6f548c18f7b65f9b9d6ce0b30c65e1c>`;
	typedef std::unordered_map<int, RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>> :target:`umap_int_basic<doxid-namespace_sym_engine_1a946f9005aa0ba2e414b184734c18e859>`;
	typedef std::unordered_map<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>, RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>, :ref:`RCPBasicHash<doxid-struct_sym_engine_1_1_r_c_p_basic_hash>`, :ref:`RCPBasicKeyEq<doxid-struct_sym_engine_1_1_r_c_p_basic_key_eq>`> :target:`umap_basic_basic<doxid-namespace_sym_engine_1a0c689777bfdf46ba18b4faae696f5fb7>`;
	typedef std::unordered_set<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>, :ref:`RCPBasicHash<doxid-struct_sym_engine_1_1_r_c_p_basic_hash>`, :ref:`RCPBasicKeyEq<doxid-struct_sym_engine_1_1_r_c_p_basic_key_eq>`> :target:`uset_basic<doxid-namespace_sym_engine_1aa8c4cc3cd3757f451a526b35110e149c>`;
	typedef std::vector<int> :target:`vec_int<doxid-namespace_sym_engine_1a92041f53e44e3e095d1eb2a8300a69b3>`;
	typedef std::vector<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>> :target:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`;
	typedef std::vector<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>> :target:`vec_integer<doxid-namespace_sym_engine_1a2b8592efaed2eb42a9f9295c0a14afca>`;
	typedef std::vector<unsigned int> :target:`vec_uint<doxid-namespace_sym_engine_1aecd7425c31e3e29f207040601e0a7276>`;
	typedef std::vector<:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`> :target:`vec_integer_class<doxid-namespace_sym_engine_1a6a6944aaf971949e22591955f8aae621>`;
	typedef std::vector<RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>> :target:`vec_sym<doxid-namespace_sym_engine_1a9fdbd1736332521ea806566039581542>`;
	typedef std::set<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>, :ref:`RCPBasicKeyLess<doxid-struct_sym_engine_1_1_r_c_p_basic_key_less>`> :target:`set_basic<doxid-namespace_sym_engine_1a1fa620e6bcd71963ab13f25687d23b63>`;
	typedef std::multiset<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>, :ref:`RCPBasicKeyLess<doxid-struct_sym_engine_1_1_r_c_p_basic_key_less>`> :target:`multiset_basic<doxid-namespace_sym_engine_1a1faa34199db7ea427cbe7ed1cea81f84>`;
	typedef std::map<:ref:`vec_uint<doxid-namespace_sym_engine_1aecd7425c31e3e29f207040601e0a7276>`, unsigned long long int> :target:`map_vec_uint<doxid-namespace_sym_engine_1a85a908dfe650be16110572e621f132b1>`;
	typedef std::map<:ref:`vec_uint<doxid-namespace_sym_engine_1aecd7425c31e3e29f207040601e0a7276>`, :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`> :target:`map_vec_mpz<doxid-namespace_sym_engine_1ad7fe7c0dcf09d4e9d3b6dde0f82b3729>`;
	typedef std::map<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>, RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>, :ref:`RCPBasicKeyLess<doxid-struct_sym_engine_1_1_r_c_p_basic_key_less>`> :target:`map_basic_num<doxid-namespace_sym_engine_1aa61db61a45aaacd69af9e1640302a708>`;
	typedef std::map<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>, RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>, :ref:`RCPBasicKeyLess<doxid-struct_sym_engine_1_1_r_c_p_basic_key_less>`> :target:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`;
	typedef std::map<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>, unsigned, :ref:`RCPIntegerKeyLess<doxid-struct_sym_engine_1_1_r_c_p_integer_key_less>`> :target:`map_integer_uint<doxid-namespace_sym_engine_1a868df5e79aca902b778195ed23dc2dc1>`;
	typedef std::map<unsigned, :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`> :target:`map_uint_mpz<doxid-namespace_sym_engine_1ad8114dbc1c3064b4439ee6c7dbe32384>`;
	typedef std::map<unsigned, :ref:`rational_class<doxid-namespace_sym_engine_1adf9ea33194708619514d4a54d5fb1614>`> :target:`map_uint_mpq<doxid-namespace_sym_engine_1ad1eb4e0b5662ba1c427b318c6c6c3b44>`;
	typedef std::map<int, :ref:`Expression<doxid-class_sym_engine_1_1_expression>`> :target:`map_int_Expr<doxid-namespace_sym_engine_1a98adbe9bf3af4a2affdfcfd387bcff4e>`;
	typedef std::unordered_map<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>, unsigned int, :ref:`RCPBasicHash<doxid-struct_sym_engine_1_1_r_c_p_basic_hash>`, :ref:`RCPBasicKeyEq<doxid-struct_sym_engine_1_1_r_c_p_basic_key_eq>`> :target:`umap_basic_uint<doxid-namespace_sym_engine_1a3c2a57b1936a50f0896243aa830b9f11>`;
	typedef std::vector<std::pair<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>, RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>> :target:`vec_pair<doxid-namespace_sym_engine_1a8c28ada5624c06c11e387e41755a1d8a>`;
	typedef std::unordered_map<:ref:`vec_uint<doxid-namespace_sym_engine_1aecd7425c31e3e29f207040601e0a7276>`, :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`, :ref:`vec_hash<doxid-struct_sym_engine_1_1vec__hash>`<:ref:`vec_uint<doxid-namespace_sym_engine_1aecd7425c31e3e29f207040601e0a7276>`>> :target:`umap_uvec_mpz<doxid-namespace_sym_engine_1a025ccb774694e2ef8e953a4d817eafca>`;
	typedef std::unordered_map<:ref:`vec_int<doxid-namespace_sym_engine_1a92041f53e44e3e095d1eb2a8300a69b3>`, :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`, :ref:`vec_hash<doxid-struct_sym_engine_1_1vec__hash>`<:ref:`vec_int<doxid-namespace_sym_engine_1a92041f53e44e3e095d1eb2a8300a69b3>`>> :target:`umap_vec_mpz<doxid-namespace_sym_engine_1a549095f0b878adfa84e66b581bd4e4ef>`;
	typedef std::unordered_map<:ref:`vec_int<doxid-namespace_sym_engine_1a92041f53e44e3e095d1eb2a8300a69b3>`, :ref:`Expression<doxid-class_sym_engine_1_1_expression>`, :ref:`vec_hash<doxid-struct_sym_engine_1_1vec__hash>`<:ref:`vec_int<doxid-namespace_sym_engine_1a92041f53e44e3e095d1eb2a8300a69b3>`>> :target:`umap_vec_expr<doxid-namespace_sym_engine_1aa08681bdb939a7fa5ab4d075e8fa5737>`;
	typedef typename std::enable_if<B, T>::type :target:`enable_if_t<doxid-namespace_sym_engine_1ad98cc31f9c98da201743811a65157f57>`;
	typedef std::function<double(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`&)> :target:`fn<doxid-namespace_sym_engine_1a2a27754ceb93ff4b0dc088e24c6ec491>`;
	typedef :ref:`TwoArgBasic<doxid-class_sym_engine_1_1_two_arg_basic>`<:ref:`Function<doxid-class_sym_engine_1_1_function>`> :target:`TwoArgFunction<doxid-namespace_sym_engine_1a310ed4e8df3b90bfba5863cb67bdb16d>`;
	typedef std::set<RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`>, :ref:`RCPBasicKeyLess<doxid-struct_sym_engine_1_1_r_c_p_basic_key_less>`> :target:`set_boolean<doxid-namespace_sym_engine_1ae8adf96ee1bd77aca141a31b6ce51d8b>`;
	typedef std::vector<RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`>> :target:`vec_boolean<doxid-namespace_sym_engine_1a2352b06d8a2ae9af96ca37d6d149127b>`;
	typedef std::vector<std::pair<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>, RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`>>> :target:`PiecewiseVec<doxid-namespace_sym_engine_1acef49c25a12c491e784c727c6d2a9e62>`;
	typedef std::vector<std::pair<int, int>> :target:`permutelist<doxid-namespace_sym_engine_1a545265fb9636fec22762f1b6dbecc90f>`;
	typedef boost::multiprecision::number<boost::multiprecision::cpp_int_backend<>, boost::multiprecision::et_off> :target:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`;
	typedef boost::multiprecision::number<boost::multiprecision::cpp_rational_backend, boost::multiprecision::et_off> :target:`rational_class<doxid-namespace_sym_engine_1adf9ea33194708619514d4a54d5fb1614>`;
	typedef std::set<RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>, :ref:`RCPBasicKeyLess<doxid-struct_sym_engine_1_1_r_c_p_basic_key_less>`> :target:`set_set<doxid-namespace_sym_engine_1aa92a7ab2593ea4f2188d882b5b854e0c>`;

	// enums

	enum :ref:`EvalfDomain<doxid-namespace_sym_engine_1a04157cdfeef154e7bc8690bfd7a22160>`;
	enum :ref:`TypeID<doxid-namespace_sym_engine_1a976db42c9dfad76ad2c95a6038cbc093>`;
	enum :ref:`tribool<doxid-namespace_sym_engine_1aa859e1ef481111b06c165d334b1b2e5e>`;

	// structs

	struct :ref:`RCPBasicHash<doxid-struct_sym_engine_1_1_r_c_p_basic_hash>`;
	struct :ref:`RCPBasicKeyEq<doxid-struct_sym_engine_1_1_r_c_p_basic_key_eq>`;
	struct :ref:`RCPBasicKeyLess<doxid-struct_sym_engine_1_1_r_c_p_basic_key_less>`;
	struct :ref:`RCPIntegerKeyLess<doxid-struct_sym_engine_1_1_r_c_p_integer_key_less>`;

	template <typename Derived, typename First, typename... Rest>
	struct :ref:`is_base_of_multiple<doxid-struct_sym_engine_1_1is__base__of__multiple>`;

	template <typename Derived, typename First>
	struct :ref:`is_base_of_multiple<Derived, First><doxid-struct_sym_engine_1_1is__base__of__multiple_3_01_derived_00_01_first_01_4>`;

	template <typename T>
	struct :ref:`remove_reference<doxid-struct_sym_engine_1_1remove__reference>`;

	template <typename T>
	struct :ref:`remove_reference<T&><doxid-struct_sym_engine_1_1remove__reference_3_01_t_01_6_01_4>`;

	struct :ref:`two_by_two_matrix<doxid-struct_sym_engine_1_1two__by__two__matrix>`;

	template <typename T>
	struct :ref:`vec_hash<doxid-struct_sym_engine_1_1vec__hash>`;

	// classes

	class :ref:`ACos<doxid-class_sym_engine_1_1_a_cos>`;
	class :ref:`ACosh<doxid-class_sym_engine_1_1_a_cosh>`;
	class :ref:`ACot<doxid-class_sym_engine_1_1_a_cot>`;
	class :ref:`ACoth<doxid-class_sym_engine_1_1_a_coth>`;
	class :ref:`ACsc<doxid-class_sym_engine_1_1_a_csc>`;
	class :ref:`ACsch<doxid-class_sym_engine_1_1_a_csch>`;
	class :ref:`ASec<doxid-class_sym_engine_1_1_a_sec>`;
	class :ref:`ASech<doxid-class_sym_engine_1_1_a_sech>`;
	class :ref:`ASin<doxid-class_sym_engine_1_1_a_sin>`;
	class :ref:`ASinh<doxid-class_sym_engine_1_1_a_sinh>`;
	class :ref:`ATan<doxid-class_sym_engine_1_1_a_tan>`;
	class :ref:`ATan2<doxid-class_sym_engine_1_1_a_tan2>`;
	class :ref:`ATanh<doxid-class_sym_engine_1_1_a_tanh>`;
	class :ref:`Abs<doxid-class_sym_engine_1_1_abs>`;
	class :ref:`Add<doxid-class_sym_engine_1_1_add>`;
	class :ref:`And<doxid-class_sym_engine_1_1_and>`;

	template <typename... Args>
	class :ref:`AtomsVisitor<doxid-class_sym_engine_1_1_atoms_visitor>`;

	template <class Derived, class Base = Visitor>
	class :ref:`BaseVisitor<doxid-class_sym_engine_1_1_base_visitor>`;

	class :ref:`Basic<doxid-class_sym_engine_1_1_basic>`;
	class :ref:`Beta<doxid-class_sym_engine_1_1_beta>`;
	class :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`;
	class :ref:`BooleanAtom<doxid-class_sym_engine_1_1_boolean_atom>`;
	class :ref:`CSRMatrix<doxid-class_sym_engine_1_1_c_s_r_matrix>`;
	class :ref:`Ceiling<doxid-class_sym_engine_1_1_ceiling>`;
	class :ref:`CoeffVisitor<doxid-class_sym_engine_1_1_coeff_visitor>`;
	class :ref:`Complement<doxid-class_sym_engine_1_1_complement>`;
	class :ref:`Complex<doxid-class_sym_engine_1_1_complex>`;
	class :ref:`ComplexBase<doxid-class_sym_engine_1_1_complex_base>`;
	class :ref:`ComplexDouble<doxid-class_sym_engine_1_1_complex_double>`;
	class :ref:`ComplexMPC<doxid-class_sym_engine_1_1_complex_m_p_c>`;
	class :ref:`ConditionSet<doxid-class_sym_engine_1_1_condition_set>`;
	class :ref:`Conjugate<doxid-class_sym_engine_1_1_conjugate>`;
	class :ref:`Constant<doxid-class_sym_engine_1_1_constant>`;
	class :ref:`Contains<doxid-class_sym_engine_1_1_contains>`;
	class :ref:`Cos<doxid-class_sym_engine_1_1_cos>`;
	class :ref:`Cosh<doxid-class_sym_engine_1_1_cosh>`;
	class :ref:`Cot<doxid-class_sym_engine_1_1_cot>`;
	class :ref:`Coth<doxid-class_sym_engine_1_1_coth>`;
	class :ref:`CountOpsVisitor<doxid-class_sym_engine_1_1_count_ops_visitor>`;
	class :ref:`Csc<doxid-class_sym_engine_1_1_csc>`;
	class :ref:`Csch<doxid-class_sym_engine_1_1_csch>`;
	class :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`;
	class :ref:`Derivative<doxid-class_sym_engine_1_1_derivative>`;
	class :ref:`DiffVisitor<doxid-class_sym_engine_1_1_diff_visitor>`;
	class :ref:`Dirichlet_eta<doxid-class_sym_engine_1_1_dirichlet__eta>`;
	class :ref:`Dummy<doxid-class_sym_engine_1_1_dummy>`;
	class :ref:`EmptySet<doxid-class_sym_engine_1_1_empty_set>`;

	template <class T>
	class :ref:`EnableRCPFromThis<doxid-class_sym_engine_1_1_enable_r_c_p_from_this>`;

	class :ref:`Equality<doxid-class_sym_engine_1_1_equality>`;
	class :ref:`Erf<doxid-class_sym_engine_1_1_erf>`;
	class :ref:`Erfc<doxid-class_sym_engine_1_1_erfc>`;
	class :ref:`EvalComplexDoubleVisitor<doxid-class_sym_engine_1_1_eval_complex_double_visitor>`;

	template <typename T, typename C>
	class :ref:`EvalDoubleVisitor<doxid-class_sym_engine_1_1_eval_double_visitor>`;

	template <typename C>
	class :ref:`EvalRealDoubleVisitor<doxid-class_sym_engine_1_1_eval_real_double_visitor>`;

	class :ref:`EvalRealDoubleVisitorFinal<doxid-class_sym_engine_1_1_eval_real_double_visitor_final>`;
	class :ref:`EvalRealDoubleVisitorPattern<doxid-class_sym_engine_1_1_eval_real_double_visitor_pattern>`;
	class :ref:`EvalVisitor<doxid-class_sym_engine_1_1_eval_visitor>`;
	class :ref:`Evaluate<doxid-class_sym_engine_1_1_evaluate>`;
	class :ref:`EvaluateComplexDouble<doxid-class_sym_engine_1_1_evaluate_complex_double>`;

	template <class T>
	class :ref:`EvaluateDouble<doxid-class_sym_engine_1_1_evaluate_double>`;

	class :ref:`EvaluateInfty<doxid-class_sym_engine_1_1_evaluate_infty>`;
	class :ref:`EvaluateNaN<doxid-class_sym_engine_1_1_evaluate_na_n>`;
	class :ref:`EvaluateRealDouble<doxid-class_sym_engine_1_1_evaluate_real_double>`;
	class :ref:`ExpandVisitor<doxid-class_sym_engine_1_1_expand_visitor>`;
	class :ref:`Expression<doxid-class_sym_engine_1_1_expression>`;
	class :ref:`FiniteSet<doxid-class_sym_engine_1_1_finite_set>`;
	class :ref:`Floor<doxid-class_sym_engine_1_1_floor>`;
	class :ref:`FreeSymbolsVisitor<doxid-class_sym_engine_1_1_free_symbols_visitor>`;
	class :ref:`FuncArgTracker<doxid-class_sym_engine_1_1_func_arg_tracker>`;
	class :ref:`Function<doxid-class_sym_engine_1_1_function>`;
	class :ref:`FunctionSymbol<doxid-class_sym_engine_1_1_function_symbol>`;
	class :ref:`FunctionWrapper<doxid-class_sym_engine_1_1_function_wrapper>`;
	class :ref:`GaloisField<doxid-class_sym_engine_1_1_galois_field>`;
	class :ref:`GaloisFieldDict<doxid-class_sym_engine_1_1_galois_field_dict>`;
	class :ref:`Gamma<doxid-class_sym_engine_1_1_gamma>`;
	class :ref:`HasSymbolVisitor<doxid-class_sym_engine_1_1_has_symbol_visitor>`;
	class :ref:`HyperbolicBase<doxid-class_sym_engine_1_1_hyperbolic_base>`;
	class :ref:`HyperbolicFunction<doxid-class_sym_engine_1_1_hyperbolic_function>`;
	class :ref:`IRBuilder<doxid-class_sym_engine_1_1_i_r_builder>`;
	class :ref:`ImageSet<doxid-class_sym_engine_1_1_image_set>`;
	class :ref:`Infty<doxid-class_sym_engine_1_1_infty>`;
	class :ref:`Integer<doxid-class_sym_engine_1_1_integer>`;
	class :ref:`Integers<doxid-class_sym_engine_1_1_integers>`;
	class :ref:`Interval<doxid-class_sym_engine_1_1_interval>`;
	class :ref:`InverseHyperbolicFunction<doxid-class_sym_engine_1_1_inverse_hyperbolic_function>`;
	class :ref:`InverseTrigFunction<doxid-class_sym_engine_1_1_inverse_trig_function>`;
	class :ref:`InvertComplexVisitor<doxid-class_sym_engine_1_1_invert_complex_visitor>`;
	class :ref:`IsALinearArgTrigVisitor<doxid-class_sym_engine_1_1_is_a_linear_arg_trig_visitor>`;
	class :ref:`KroneckerDelta<doxid-class_sym_engine_1_1_kronecker_delta>`;
	class :ref:`LambdaComplexDoubleVisitor<doxid-class_sym_engine_1_1_lambda_complex_double_visitor>`;

	template <typename T>
	class :ref:`LambdaDoubleVisitor<doxid-class_sym_engine_1_1_lambda_double_visitor>`;

	class :ref:`LambdaRealDoubleVisitor<doxid-class_sym_engine_1_1_lambda_real_double_visitor>`;
	class :ref:`LambertW<doxid-class_sym_engine_1_1_lambert_w>`;
	class :ref:`LessThan<doxid-class_sym_engine_1_1_less_than>`;
	class :ref:`LeviCivita<doxid-class_sym_engine_1_1_levi_civita>`;
	class :ref:`LocalStopVisitor<doxid-class_sym_engine_1_1_local_stop_visitor>`;
	class :ref:`Log<doxid-class_sym_engine_1_1_log>`;
	class :ref:`LogGamma<doxid-class_sym_engine_1_1_log_gamma>`;
	class :ref:`LowerGamma<doxid-class_sym_engine_1_1_lower_gamma>`;
	class :ref:`MSubsVisitor<doxid-class_sym_engine_1_1_m_subs_visitor>`;
	class :ref:`MatrixBase<doxid-class_sym_engine_1_1_matrix_base>`;
	class :ref:`Max<doxid-class_sym_engine_1_1_max>`;
	class :ref:`Min<doxid-class_sym_engine_1_1_min>`;
	class :ref:`Mul<doxid-class_sym_engine_1_1_mul>`;
	class :ref:`MultiArgFunction<doxid-class_sym_engine_1_1_multi_arg_function>`;
	class :ref:`NaN<doxid-class_sym_engine_1_1_na_n>`;
	class :ref:`NeedsSymbolicExpansionVisitor<doxid-class_sym_engine_1_1_needs_symbolic_expansion_visitor>`;
	class :ref:`Not<doxid-class_sym_engine_1_1_not>`;
	class :ref:`Number<doxid-class_sym_engine_1_1_number>`;
	class :ref:`NumberWrapper<doxid-class_sym_engine_1_1_number_wrapper>`;
	class :ref:`NumerDenomVisitor<doxid-class_sym_engine_1_1_numer_denom_visitor>`;
	class :ref:`OneArgFunction<doxid-class_sym_engine_1_1_one_arg_function>`;
	class :ref:`OptsCSEVisitor<doxid-class_sym_engine_1_1_opts_c_s_e_visitor>`;
	class :ref:`Or<doxid-class_sym_engine_1_1_or>`;
	class :ref:`Piecewise<doxid-class_sym_engine_1_1_piecewise>`;
	class :ref:`PolyGamma<doxid-class_sym_engine_1_1_poly_gamma>`;
	class :ref:`Pow<doxid-class_sym_engine_1_1_pow>`;
	class :ref:`Rational<doxid-class_sym_engine_1_1_rational>`;
	class :ref:`RealDouble<doxid-class_sym_engine_1_1_real_double>`;
	class :ref:`RealImagVisitor<doxid-class_sym_engine_1_1_real_imag_visitor>`;
	class :ref:`RealMPFR<doxid-class_sym_engine_1_1_real_m_p_f_r>`;
	class :ref:`Reals<doxid-class_sym_engine_1_1_reals>`;
	class :ref:`RebuildVisitor<doxid-class_sym_engine_1_1_rebuild_visitor>`;
	class :ref:`Relational<doxid-class_sym_engine_1_1_relational>`;
	class :ref:`RewriteAsExp<doxid-class_sym_engine_1_1_rewrite_as_exp>`;
	class :ref:`SSubsVisitor<doxid-class_sym_engine_1_1_s_subs_visitor>`;
	class :ref:`Sec<doxid-class_sym_engine_1_1_sec>`;
	class :ref:`Sech<doxid-class_sym_engine_1_1_sech>`;

	template <typename Poly, typename Coeff, typename Series>
	class :ref:`SeriesBase<doxid-class_sym_engine_1_1_series_base>`;

	class :ref:`SeriesCoeffInterface<doxid-class_sym_engine_1_1_series_coeff_interface>`;

	template <typename Poly, typename Coeff, typename Series>
	class :ref:`SeriesVisitor<doxid-class_sym_engine_1_1_series_visitor>`;

	class :ref:`Set<doxid-class_sym_engine_1_1_set>`;
	class :ref:`Sieve<doxid-class_sym_engine_1_1_sieve>`;
	class :ref:`Sign<doxid-class_sym_engine_1_1_sign>`;
	class :ref:`Sin<doxid-class_sym_engine_1_1_sin>`;
	class :ref:`Sinh<doxid-class_sym_engine_1_1_sinh>`;
	class :ref:`StopVisitor<doxid-class_sym_engine_1_1_stop_visitor>`;
	class :ref:`StrictLessThan<doxid-class_sym_engine_1_1_strict_less_than>`;
	class :ref:`Subs<doxid-class_sym_engine_1_1_subs>`;
	class :ref:`SubsVisitor<doxid-class_sym_engine_1_1_subs_visitor>`;
	class :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`;
	class :ref:`Tan<doxid-class_sym_engine_1_1_tan>`;
	class :ref:`Tanh<doxid-class_sym_engine_1_1_tanh>`;
	class :ref:`TransformVisitor<doxid-class_sym_engine_1_1_transform_visitor>`;
	class :ref:`TrigBase<doxid-class_sym_engine_1_1_trig_base>`;
	class :ref:`TrigFunction<doxid-class_sym_engine_1_1_trig_function>`;
	class :ref:`Truncate<doxid-class_sym_engine_1_1_truncate>`;

	template <class BaseClass>
	class :ref:`TwoArgBasic<doxid-class_sym_engine_1_1_two_arg_basic>`;

	class :ref:`Unequality<doxid-class_sym_engine_1_1_unequality>`;
	class :ref:`UnevaluatedExpr<doxid-class_sym_engine_1_1_unevaluated_expr>`;
	class :ref:`Union<doxid-class_sym_engine_1_1_union>`;
	class :ref:`UnivariateSeries<doxid-class_sym_engine_1_1_univariate_series>`;
	class :ref:`UniversalSet<doxid-class_sym_engine_1_1_universal_set>`;
	class :ref:`UpperGamma<doxid-class_sym_engine_1_1_upper_gamma>`;
	class :ref:`Visitor<doxid-class_sym_engine_1_1_visitor>`;
	class :ref:`XReplaceVisitor<doxid-class_sym_engine_1_1_x_replace_visitor>`;
	class :ref:`Xor<doxid-class_sym_engine_1_1_xor>`;
	class :ref:`ZeroVisitor<doxid-class_sym_engine_1_1_zero_visitor>`;
	class :ref:`Zeta<doxid-class_sym_engine_1_1_zeta>`;
	class :ref:`fmpq_poly_wrapper<doxid-class_sym_engine_1_1fmpq__poly__wrapper>`;
	class :ref:`fmpq_wrapper<doxid-class_sym_engine_1_1fmpq__wrapper>`;
	class :ref:`fmpz_poly_factor_wrapper<doxid-class_sym_engine_1_1fmpz__poly__factor__wrapper>`;
	class :ref:`fmpz_poly_wrapper<doxid-class_sym_engine_1_1fmpz__poly__wrapper>`;
	class :ref:`fmpz_wrapper<doxid-class_sym_engine_1_1fmpz__wrapper>`;
	class :ref:`mp_randstate<doxid-class_sym_engine_1_1mp__randstate>`;
	class :ref:`mpq_view_flint<doxid-class_sym_engine_1_1mpq__view__flint>`;
	class :ref:`mpz_view_flint<doxid-class_sym_engine_1_1mpz__view__flint>`;

	// global variables

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :target:`zero<doxid-namespace_sym_engine_1a3daa97435763d1989bbccad4f0e5bb20>` = :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(0);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :target:`one<doxid-namespace_sym_engine_1a44051946ed56f8f4818ab36ee1813b99>` = :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(1);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :target:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>` = :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(-1);
	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :target:`I<doxid-namespace_sym_engine_1a7939c49aba5d9b5a96f1e90575c32dfc>` = :ref:`Complex::from_two_nums<doxid-class_sym_engine_1_1_complex_1adacb67b50059961da56764fe0a9170fa>`(*:ref:`zero<doxid-namespace_sym_engine_1a3daa97435763d1989bbccad4f0e5bb20>`,*:ref:`one<doxid-namespace_sym_engine_1a44051946ed56f8f4818ab36ee1813b99>`);
	RCP<const :ref:`Constant<doxid-class_sym_engine_1_1_constant>`> :target:`pi<doxid-namespace_sym_engine_1a034dc976ed49954deac535b8eeb19cc6>` = :ref:`constant<doxid-namespace_sym_engine_1ab69f9746bea991c3a4e96cd6148c2bc1>`("pi");
	RCP<const :ref:`Constant<doxid-class_sym_engine_1_1_constant>`> :target:`E<doxid-namespace_sym_engine_1a0ae04e22c7f96ec8e593be32a80f7621>` = :ref:`constant<doxid-namespace_sym_engine_1ab69f9746bea991c3a4e96cd6148c2bc1>`("E");
	RCP<const :ref:`Constant<doxid-class_sym_engine_1_1_constant>`> :target:`EulerGamma<doxid-namespace_sym_engine_1a42dbab42055a02c8fbe33c6e3e01ac65>` = :ref:`constant<doxid-namespace_sym_engine_1ab69f9746bea991c3a4e96cd6148c2bc1>`("EulerGamma");
	RCP<const :ref:`Constant<doxid-class_sym_engine_1_1_constant>`> :target:`Catalan<doxid-namespace_sym_engine_1a73c93ade9fb40978456aff6886170513>` = :ref:`constant<doxid-namespace_sym_engine_1ab69f9746bea991c3a4e96cd6148c2bc1>`("Catalan");
	RCP<const :ref:`Constant<doxid-class_sym_engine_1_1_constant>`> :target:`GoldenRatio<doxid-namespace_sym_engine_1a061224c44e11c41da956c210f8547aff>` = :ref:`constant<doxid-namespace_sym_engine_1ab69f9746bea991c3a4e96cd6148c2bc1>`("GoldenRatio");
	RCP<const :ref:`Infty<doxid-class_sym_engine_1_1_infty>`> :target:`Inf<doxid-namespace_sym_engine_1a7c20070b915762ca2704fef7109a5a54>` = :ref:`Infty::from_int<doxid-class_sym_engine_1_1_infty_1a87a854f1c0bd8fc945dcf59c42f6fd46>`(1);
	RCP<const :ref:`Infty<doxid-class_sym_engine_1_1_infty>`> :target:`NegInf<doxid-namespace_sym_engine_1a28dee364890d0b82f134e5177bd85b45>` = :ref:`Infty::from_int<doxid-class_sym_engine_1_1_infty_1a87a854f1c0bd8fc945dcf59c42f6fd46>`(-1);
	RCP<const :ref:`Infty<doxid-class_sym_engine_1_1_infty>`> :target:`ComplexInf<doxid-namespace_sym_engine_1af8efc963e44c3c75be338da4bae8fe6d>` = :ref:`Infty::from_int<doxid-class_sym_engine_1_1_infty_1a87a854f1c0bd8fc945dcf59c42f6fd46>`(0);
	RCP<const :ref:`NaN<doxid-class_sym_engine_1_1_na_n>`> :target:`Nan<doxid-namespace_sym_engine_1a5954e828161a21a1897715c3936fe22a>` = :ref:`make_rcp<doxid-namespace_sym_engine_1acc5136e8bc192ff8981b41127b5acc53>`<:ref:`NaN<doxid-class_sym_engine_1_1_na_n>`>();
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>` = :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(2);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`i3<doxid-namespace_sym_engine_1ac15b4ffa4aa6ffebd9276bb9b77d550a>` = :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(3);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`i5<doxid-namespace_sym_engine_1aca25c6ae00289537bf9d73502728a4d1>` = :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(5);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`im2<doxid-namespace_sym_engine_1a5e577631e595e5b65d58350df824f672>` = :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(-2);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`im3<doxid-namespace_sym_engine_1ad6e6ff9749ce5fb17ae3355bffebe39f>` = :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(-3);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`im5<doxid-namespace_sym_engine_1aec9be3c37beba460ff0fa6cd000b7150>` = :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(-5);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`sq3<doxid-namespace_sym_engine_1af38567f48cfeb84cb78fbd6b2ae2ce6d>` = sqrt_(:ref:`i3<doxid-namespace_sym_engine_1ac15b4ffa4aa6ffebd9276bb9b77d550a>`);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`sq2<doxid-namespace_sym_engine_1a014f15b87dfb2875aab4a07a9d3a225f>` = sqrt_(:ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`sq5<doxid-namespace_sym_engine_1a82f7f893f59f02403333a07b47026632>` = sqrt_(:ref:`i5<doxid-namespace_sym_engine_1aca25c6ae00289537bf9d73502728a4d1>`);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`C0<doxid-namespace_sym_engine_1a7e3af3fb7e6e7b0d3082e5b9f32f5c6b>` = :ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(:ref:`sub<doxid-namespace_sym_engine_1a92cd0098b66cad6a0cddcd895430bd65>`(:ref:`sq3<doxid-namespace_sym_engine_1af38567f48cfeb84cb78fbd6b2ae2ce6d>`, :ref:`one<doxid-namespace_sym_engine_1a44051946ed56f8f4818ab36ee1813b99>`), :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`, :ref:`sq2<doxid-namespace_sym_engine_1a014f15b87dfb2875aab4a07a9d3a225f>`));
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`C1<doxid-namespace_sym_engine_1aa97432c9d3f6cf07216b3d19b26dbfdf>` = :ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(:ref:`one<doxid-namespace_sym_engine_1a44051946ed56f8f4818ab36ee1813b99>`, :ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`C2<doxid-namespace_sym_engine_1adf4386be89ee0373bff378411408cc68>` = :ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(:ref:`sq2<doxid-namespace_sym_engine_1a014f15b87dfb2875aab4a07a9d3a225f>`, :ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`C3<doxid-namespace_sym_engine_1a2a7b96ad02c00696ed3e62569c501221>` = :ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(:ref:`sq3<doxid-namespace_sym_engine_1af38567f48cfeb84cb78fbd6b2ae2ce6d>`, :ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`C4<doxid-namespace_sym_engine_1a090bbddf8659d698ed8c2d61da9f86d4>` = :ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(:ref:`add<doxid-namespace_sym_engine_1ab7ffb6840e5963dbdcff5d457068c42b>`(:ref:`sq3<doxid-namespace_sym_engine_1af38567f48cfeb84cb78fbd6b2ae2ce6d>`, :ref:`one<doxid-namespace_sym_engine_1a44051946ed56f8f4818ab36ee1813b99>`), :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`, :ref:`sq2<doxid-namespace_sym_engine_1a014f15b87dfb2875aab4a07a9d3a225f>`));
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`C5<doxid-namespace_sym_engine_1a97f54acd2c3ab2b9297d235896bbd9d7>` = :ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(sqrt_(:ref:`sub<doxid-namespace_sym_engine_1a92cd0098b66cad6a0cddcd895430bd65>`(:ref:`i5<doxid-namespace_sym_engine_1aca25c6ae00289537bf9d73502728a4d1>`, sqrt_(:ref:`i5<doxid-namespace_sym_engine_1aca25c6ae00289537bf9d73502728a4d1>`))), :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(8));
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`C6<doxid-namespace_sym_engine_1a3b5e2351233e8d5898454827d4012c1a>` = :ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(:ref:`sub<doxid-namespace_sym_engine_1a92cd0098b66cad6a0cddcd895430bd65>`(sqrt_(:ref:`i5<doxid-namespace_sym_engine_1aca25c6ae00289537bf9d73502728a4d1>`), :ref:`one<doxid-namespace_sym_engine_1a44051946ed56f8f4818ab36ee1813b99>`), :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(4));
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`mC0<doxid-namespace_sym_engine_1a2b7e5dcd8a17bd042e402ac04a80c1c2>` = :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>`, :ref:`C0<doxid-namespace_sym_engine_1a7e3af3fb7e6e7b0d3082e5b9f32f5c6b>`);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`mC1<doxid-namespace_sym_engine_1ad8be7de85b0796b4a035ae704efa161d>` = :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>`, :ref:`C1<doxid-namespace_sym_engine_1aa97432c9d3f6cf07216b3d19b26dbfdf>`);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`mC2<doxid-namespace_sym_engine_1afc3eeea238e7191543446ccf8f8b748d>` = :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>`, :ref:`C2<doxid-namespace_sym_engine_1adf4386be89ee0373bff378411408cc68>`);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`mC3<doxid-namespace_sym_engine_1aa457d7350e05b8b7729843f06f27607e>` = :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>`, :ref:`C3<doxid-namespace_sym_engine_1a2a7b96ad02c00696ed3e62569c501221>`);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`mC4<doxid-namespace_sym_engine_1a12ffd7d86feea12e6e64704234e5b4fb>` = :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>`, :ref:`C4<doxid-namespace_sym_engine_1a090bbddf8659d698ed8c2d61da9f86d4>`);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`mC5<doxid-namespace_sym_engine_1a3baebfbdf61c81dbe8472bab483c0018>` = :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>`, :ref:`C5<doxid-namespace_sym_engine_1a97f54acd2c3ab2b9297d235896bbd9d7>`);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`mC6<doxid-namespace_sym_engine_1a62782a7eee49c1ad9fc00a8d6244ed6e>` = :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>`, :ref:`C6<doxid-namespace_sym_engine_1a3b5e2351233e8d5898454827d4012c1a>`);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`sin_table<doxid-namespace_sym_engine_1aac9e4cebc529e94194ce8a74591388a4>`[] = {:ref:`zero<doxid-namespace_sym_engine_1a3daa97435763d1989bbccad4f0e5bb20>`, :ref:`C0<doxid-namespace_sym_engine_1a7e3af3fb7e6e7b0d3082e5b9f32f5c6b>`,  :ref:`C1<doxid-namespace_sym_engine_1aa97432c9d3f6cf07216b3d19b26dbfdf>`,  :ref:`C2<doxid-namespace_sym_engine_1adf4386be89ee0373bff378411408cc68>`,  :ref:`C3<doxid-namespace_sym_engine_1a2a7b96ad02c00696ed3e62569c501221>`,  :ref:`C4<doxid-namespace_sym_engine_1a090bbddf8659d698ed8c2d61da9f86d4>`,  :ref:`one<doxid-namespace_sym_engine_1a44051946ed56f8f4818ab36ee1813b99>`,       :ref:`C4<doxid-namespace_sym_engine_1a090bbddf8659d698ed8c2d61da9f86d4>`,  :ref:`C3<doxid-namespace_sym_engine_1a2a7b96ad02c00696ed3e62569c501221>`,  :ref:`C2<doxid-namespace_sym_engine_1adf4386be89ee0373bff378411408cc68>`,  :ref:`C1<doxid-namespace_sym_engine_1aa97432c9d3f6cf07216b3d19b26dbfdf>`,  :ref:`C0<doxid-namespace_sym_engine_1a7e3af3fb7e6e7b0d3082e5b9f32f5c6b>`,        :ref:`zero<doxid-namespace_sym_engine_1a3daa97435763d1989bbccad4f0e5bb20>`, :ref:`mC0<doxid-namespace_sym_engine_1a2b7e5dcd8a17bd042e402ac04a80c1c2>`, :ref:`mC1<doxid-namespace_sym_engine_1ad8be7de85b0796b4a035ae704efa161d>`, :ref:`mC2<doxid-namespace_sym_engine_1afc3eeea238e7191543446ccf8f8b748d>`, :ref:`mC3<doxid-namespace_sym_engine_1aa457d7350e05b8b7729843f06f27607e>`, :ref:`mC4<doxid-namespace_sym_engine_1a12ffd7d86feea12e6e64704234e5b4fb>`, :ref:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>`, :ref:`mC4<doxid-namespace_sym_engine_1a12ffd7d86feea12e6e64704234e5b4fb>`, :ref:`mC3<doxid-namespace_sym_engine_1aa457d7350e05b8b7729843f06f27607e>`, :ref:`mC2<doxid-namespace_sym_engine_1afc3eeea238e7191543446ccf8f8b748d>`, :ref:`mC1<doxid-namespace_sym_engine_1ad8be7de85b0796b4a035ae704efa161d>`, :ref:`mC0<doxid-namespace_sym_engine_1a2b7e5dcd8a17bd042e402ac04a80c1c2>`};
	:ref:`umap_basic_basic<doxid-namespace_sym_engine_1a0c689777bfdf46ba18b4faae696f5fb7>` :target:`inverse_cst<doxid-namespace_sym_engine_1a096624048e943479e52366951573bca1>` = {     {:ref:`C3<doxid-namespace_sym_engine_1a2a7b96ad02c00696ed3e62569c501221>`, :ref:`i3<doxid-namespace_sym_engine_1ac15b4ffa4aa6ffebd9276bb9b77d550a>`},     {:ref:`mC3<doxid-namespace_sym_engine_1aa457d7350e05b8b7729843f06f27607e>`, :ref:`im3<doxid-namespace_sym_engine_1ad6e6ff9749ce5fb17ae3355bffebe39f>`},     {:ref:`C2<doxid-namespace_sym_engine_1adf4386be89ee0373bff378411408cc68>`, :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`, :ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`)},     {:ref:`mC2<doxid-namespace_sym_engine_1afc3eeea238e7191543446ccf8f8b748d>`, :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`im2<doxid-namespace_sym_engine_1a5e577631e595e5b65d58350df824f672>`, :ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`)},     {:ref:`C4<doxid-namespace_sym_engine_1a090bbddf8659d698ed8c2d61da9f86d4>`, :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(12)},     {:ref:`mC4<doxid-namespace_sym_engine_1a12ffd7d86feea12e6e64704234e5b4fb>`, :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(-12)},     {:ref:`C5<doxid-namespace_sym_engine_1a97f54acd2c3ab2b9297d235896bbd9d7>`, :ref:`i5<doxid-namespace_sym_engine_1aca25c6ae00289537bf9d73502728a4d1>`},     {:ref:`mC5<doxid-namespace_sym_engine_1a3baebfbdf61c81dbe8472bab483c0018>`, :ref:`im5<doxid-namespace_sym_engine_1aec9be3c37beba460ff0fa6cd000b7150>`},     {:ref:`C6<doxid-namespace_sym_engine_1a3b5e2351233e8d5898454827d4012c1a>`, :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(10)},     {:ref:`mC6<doxid-namespace_sym_engine_1a62782a7eee49c1ad9fc00a8d6244ed6e>`, :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(-10)},     {:ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(:ref:`one<doxid-namespace_sym_engine_1a44051946ed56f8f4818ab36ee1813b99>`, :ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`), :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(6)},     {:ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(:ref:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>`, :ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`), :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(-6)}, };
	:ref:`umap_basic_basic<doxid-namespace_sym_engine_1a0c689777bfdf46ba18b4faae696f5fb7>` :target:`inverse_tct<doxid-namespace_sym_engine_1ac186d04b290ed046a76181ff5f35fe68>` = {     {:ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(:ref:`one<doxid-namespace_sym_engine_1a44051946ed56f8f4818ab36ee1813b99>`, :ref:`sq3<doxid-namespace_sym_engine_1af38567f48cfeb84cb78fbd6b2ae2ce6d>`), :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`, :ref:`i3<doxid-namespace_sym_engine_1ac15b4ffa4aa6ffebd9276bb9b77d550a>`)},     {:ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(:ref:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>`, :ref:`sq3<doxid-namespace_sym_engine_1af38567f48cfeb84cb78fbd6b2ae2ce6d>`), :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`im2<doxid-namespace_sym_engine_1a5e577631e595e5b65d58350df824f672>`, :ref:`i3<doxid-namespace_sym_engine_1ac15b4ffa4aa6ffebd9276bb9b77d550a>`)},     {:ref:`sq3<doxid-namespace_sym_engine_1af38567f48cfeb84cb78fbd6b2ae2ce6d>`, :ref:`i3<doxid-namespace_sym_engine_1ac15b4ffa4aa6ffebd9276bb9b77d550a>`},     {:ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>`, :ref:`sq3<doxid-namespace_sym_engine_1af38567f48cfeb84cb78fbd6b2ae2ce6d>`), :ref:`im3<doxid-namespace_sym_engine_1ad6e6ff9749ce5fb17ae3355bffebe39f>`},     {:ref:`add<doxid-namespace_sym_engine_1ab7ffb6840e5963dbdcff5d457068c42b>`(:ref:`one<doxid-namespace_sym_engine_1a44051946ed56f8f4818ab36ee1813b99>`, :ref:`sq2<doxid-namespace_sym_engine_1a014f15b87dfb2875aab4a07a9d3a225f>`), :ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(:ref:`pow<doxid-namespace_sym_engine_1a4986c6feb6b56fe61080472b36458aa9>`(:ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`, :ref:`i3<doxid-namespace_sym_engine_1ac15b4ffa4aa6ffebd9276bb9b77d550a>`), :ref:`i3<doxid-namespace_sym_engine_1ac15b4ffa4aa6ffebd9276bb9b77d550a>`)},     {:ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>`, :ref:`add<doxid-namespace_sym_engine_1ab7ffb6840e5963dbdcff5d457068c42b>`(:ref:`one<doxid-namespace_sym_engine_1a44051946ed56f8f4818ab36ee1813b99>`, :ref:`sq2<doxid-namespace_sym_engine_1a014f15b87dfb2875aab4a07a9d3a225f>`)), :ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(:ref:`pow<doxid-namespace_sym_engine_1a4986c6feb6b56fe61080472b36458aa9>`(:ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`, :ref:`i3<doxid-namespace_sym_engine_1ac15b4ffa4aa6ffebd9276bb9b77d550a>`), :ref:`im3<doxid-namespace_sym_engine_1ad6e6ff9749ce5fb17ae3355bffebe39f>`)},     {:ref:`sub<doxid-namespace_sym_engine_1a92cd0098b66cad6a0cddcd895430bd65>`(:ref:`sq2<doxid-namespace_sym_engine_1a014f15b87dfb2875aab4a07a9d3a225f>`, :ref:`one<doxid-namespace_sym_engine_1a44051946ed56f8f4818ab36ee1813b99>`), :ref:`pow<doxid-namespace_sym_engine_1a4986c6feb6b56fe61080472b36458aa9>`(:ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`, :ref:`i3<doxid-namespace_sym_engine_1ac15b4ffa4aa6ffebd9276bb9b77d550a>`)},     {:ref:`sub<doxid-namespace_sym_engine_1a92cd0098b66cad6a0cddcd895430bd65>`(:ref:`one<doxid-namespace_sym_engine_1a44051946ed56f8f4818ab36ee1813b99>`, :ref:`sq2<doxid-namespace_sym_engine_1a014f15b87dfb2875aab4a07a9d3a225f>`), :ref:`pow<doxid-namespace_sym_engine_1a4986c6feb6b56fe61080472b36458aa9>`(:ref:`im2<doxid-namespace_sym_engine_1a5e577631e595e5b65d58350df824f672>`, :ref:`i3<doxid-namespace_sym_engine_1ac15b4ffa4aa6ffebd9276bb9b77d550a>`)},     {:ref:`sub<doxid-namespace_sym_engine_1a92cd0098b66cad6a0cddcd895430bd65>`(:ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`, :ref:`sq3<doxid-namespace_sym_engine_1af38567f48cfeb84cb78fbd6b2ae2ce6d>`), :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`, :ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`), :ref:`i3<doxid-namespace_sym_engine_1ac15b4ffa4aa6ffebd9276bb9b77d550a>`)},     {:ref:`sub<doxid-namespace_sym_engine_1a92cd0098b66cad6a0cddcd895430bd65>`(:ref:`sq3<doxid-namespace_sym_engine_1af38567f48cfeb84cb78fbd6b2ae2ce6d>`, :ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`), :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`im2<doxid-namespace_sym_engine_1a5e577631e595e5b65d58350df824f672>`, :ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`), :ref:`i3<doxid-namespace_sym_engine_1ac15b4ffa4aa6ffebd9276bb9b77d550a>`)},     {:ref:`sqrt<doxid-namespace_sym_engine_1ad3c79a5139355045b975b5a848589cd9>`(:ref:`add<doxid-namespace_sym_engine_1ab7ffb6840e5963dbdcff5d457068c42b>`(:ref:`i5<doxid-namespace_sym_engine_1aca25c6ae00289537bf9d73502728a4d1>`, :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`, :ref:`sqrt<doxid-namespace_sym_engine_1ad3c79a5139355045b975b5a848589cd9>`(:ref:`i5<doxid-namespace_sym_engine_1aca25c6ae00289537bf9d73502728a4d1>`)))), :ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(:ref:`i5<doxid-namespace_sym_engine_1aca25c6ae00289537bf9d73502728a4d1>`, :ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`)},     {:ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>`, :ref:`sqrt<doxid-namespace_sym_engine_1ad3c79a5139355045b975b5a848589cd9>`(:ref:`add<doxid-namespace_sym_engine_1ab7ffb6840e5963dbdcff5d457068c42b>`(:ref:`i5<doxid-namespace_sym_engine_1aca25c6ae00289537bf9d73502728a4d1>`, :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`, :ref:`sqrt<doxid-namespace_sym_engine_1ad3c79a5139355045b975b5a848589cd9>`(:ref:`i5<doxid-namespace_sym_engine_1aca25c6ae00289537bf9d73502728a4d1>`))))), :ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(:ref:`im5<doxid-namespace_sym_engine_1aec9be3c37beba460ff0fa6cd000b7150>`, :ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`)},     {:ref:`one<doxid-namespace_sym_engine_1a44051946ed56f8f4818ab36ee1813b99>`, :ref:`pow<doxid-namespace_sym_engine_1a4986c6feb6b56fe61080472b36458aa9>`(:ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`, :ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`)},     {:ref:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>`, :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(:ref:`minus_one<doxid-namespace_sym_engine_1a361abb0f8ca4669ab6040580985eedf1>`, :ref:`pow<doxid-namespace_sym_engine_1a4986c6feb6b56fe61080472b36458aa9>`(:ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`, :ref:`i2<doxid-namespace_sym_engine_1aab821c14086041feec89da396e4ea019>`))}, };
	static const std::vector<:ref:`fn<doxid-namespace_sym_engine_1a2a27754ceb93ff4b0dc088e24c6ec491>`> :target:`table_eval_double<doxid-namespace_sym_engine_1ad130cde6285ab6805b4d873235212d25>` = :ref:`init_eval_double<doxid-namespace_sym_engine_1ad91284f4cad81dc22ba21921a4e6bafb>`();
	RCP<const :ref:`BooleanAtom<doxid-class_sym_engine_1_1_boolean_atom>`> :target:`boolTrue<doxid-namespace_sym_engine_1ae33c200b79c5078a0ae235e6dc973edd>` = :ref:`make_rcp<doxid-namespace_sym_engine_1acc5136e8bc192ff8981b41127b5acc53>`<:ref:`BooleanAtom<doxid-class_sym_engine_1_1_boolean_atom>`>(true);
	RCP<const :ref:`BooleanAtom<doxid-class_sym_engine_1_1_boolean_atom>`> :target:`boolFalse<doxid-namespace_sym_engine_1a32f94e8e8c8cb811b914ec8d6161882a>` = :ref:`make_rcp<doxid-namespace_sym_engine_1acc5136e8bc192ff8981b41127b5acc53>`<:ref:`BooleanAtom<doxid-class_sym_engine_1_1_boolean_atom>`>(false);

	// global functions

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`add<doxid-namespace_sym_engine_1ab7ffb6840e5963dbdcff5d457068c42b>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& b);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`add<doxid-namespace_sym_engine_1a3ceef3b30efccd900ff91d78026f66f6>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& a);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`sub<doxid-namespace_sym_engine_1a92cd0098b66cad6a0cddcd895430bd65>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& b);
	void :target:`as_real_imag<doxid-namespace_sym_engine_1a461daa8a1cc57e54ef94bf0f94ad60d9>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x, const Ptr<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>& real, const Ptr<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>& imag);
	bool :ref:`eq<doxid-namespace_sym_engine_1a2861dd1747fa1416cd6ef023ef08fca5>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& a, const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);
	bool :ref:`neq<doxid-namespace_sym_engine_1abf6f7e3994231895bdcb94a8aac5e4fb>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& a, const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);

	template <class T>
	bool :ref:`is_a<doxid-namespace_sym_engine_1a69193ed0d011c3b3f44db8a4f66792a4>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);

	template <class T>
	bool :ref:`is_a_sub<doxid-namespace_sym_engine_1a1332ce13683324e522ca2bd00aa9da05>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);

	bool :ref:`is_same_type<doxid-namespace_sym_engine_1ab40c04716d1563b3df15fc731fef31f6>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& a, const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);
	std::ostream& :ref:`operator<<<doxid-namespace_sym_engine_1ad412c21e0a4b4454574243e62b799d61>`(std::ostream& out, const :ref:`SymEngine::Basic<doxid-class_sym_engine_1_1_basic>`& p);

	template <typename T>
	void :ref:`hash_combine_impl<doxid-namespace_sym_engine_1abb24605f1aae71927876f7237e221544>`(:ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>`& seed, const T& v, typename std::enable_if<std::is_base_of<:ref:`Basic<doxid-class_sym_engine_1_1_basic>`, T>::value>::type* = nullptr);

	template <typename T>
	void :target:`hash_combine_impl<doxid-namespace_sym_engine_1aeda7b5ecf69bb33c4b2aea5304647bd8>`(:ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>`& seed, const T& v, typename std::enable_if<std::is_integral<T>::value>::type* = nullptr);

	void :target:`hash_combine_impl<doxid-namespace_sym_engine_1ae266231eee2ca48673601df20ba0bccc>`(:ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>`& seed, const std::string& s);
	void :target:`hash_combine_impl<doxid-namespace_sym_engine_1a7a7e1e7b48621c265ab453b64425df7e>`(:ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>`& seed, const double& s);

	template <class T>
	void :ref:`hash_combine<doxid-namespace_sym_engine_1a4e6d1d6e0960fa8a827afb3f36c7d30d>`(:ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>`& seed, const T& v);

	template <typename T>
	std::string :ref:`to_string<doxid-namespace_sym_engine_1ac5117c22ff62901ca0c6210310816bc1>`(const T& value);

	const char* :target:`get_version<doxid-namespace_sym_engine_1a77367965f68641f67109c39a1b6751cb>`();
	bool :ref:`is_a_Atom<doxid-namespace_sym_engine_1a9b828cb692f763f05e2ee78d7cde30f0>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);
	bool :target:`is_true<doxid-namespace_sym_engine_1aae87dcafe8240b524ff43fa6ad1556cc>`(:ref:`tribool<doxid-namespace_sym_engine_1aa859e1ef481111b06c165d334b1b2e5e>` x);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`expand<doxid-namespace_sym_engine_1ac104d13f145416cd18c61b0121017eb6>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& self, bool deep = true);
	void :target:`as_numer_denom<doxid-namespace_sym_engine_1a26ea0f8bb528dca0193c0b3425bab62f>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x, const Ptr<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>& numer, const Ptr<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>& denom);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`rewrite_as_exp<doxid-namespace_sym_engine_1afb016fae3926fa034010a9456c02fe31>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x);
	void :target:`cse<doxid-namespace_sym_engine_1af19f9286e6694c276b957b08105ce37d>`(:ref:`vec_pair<doxid-namespace_sym_engine_1a8c28ada5624c06c11e387e41755a1d8a>`& replacements, :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& reduced_exprs, const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& exprs);
	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :target:`pow_number<doxid-namespace_sym_engine_1a4e2cb40bffd424651ae4b71e677317dc>`(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& x, unsigned long n);
	bool :ref:`is_a_Complex<doxid-namespace_sym_engine_1ac1ffd806385fb08a9a48dd86a60915ee>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);
	RCP<const :ref:`ComplexDouble<doxid-class_sym_engine_1_1_complex_double>`> :target:`complex_double<doxid-namespace_sym_engine_1ac17f74196aadc2bd549b00a8319bb797>`(std::complex<double> x);
	RCP<const :ref:`Constant<doxid-class_sym_engine_1_1_constant>`> :ref:`constant<doxid-namespace_sym_engine_1ab69f9746bea991c3a4e96cd6148c2bc1>`(const std::string& name);
	:ref:`umap_basic_basic<doxid-namespace_sym_engine_1a0c689777bfdf46ba18b4faae696f5fb7>` :target:`opt_cse<doxid-namespace_sym_engine_1afcd77c44433bf15ce98aa223d5dc67dd>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& exprs);
	void :target:`tree_cse<doxid-namespace_sym_engine_1a0cabb0855a40f362d2507eb4c83e6d72>`(:ref:`vec_pair<doxid-namespace_sym_engine_1a8c28ada5624c06c11e387e41755a1d8a>`& replacements, :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& reduced_exprs, const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& exprs, :ref:`umap_basic_basic<doxid-namespace_sym_engine_1a0c689777bfdf46ba18b4faae696f5fb7>`& opt_subs);
	std::vector<unsigned> :target:`set_diff<doxid-namespace_sym_engine_1a0ba923795f1c93a6e1548f51018e2f5f>`(const std::set<unsigned>& a, const std::vector<unsigned>& b);
	void :target:`add_to_sorted_vec<doxid-namespace_sym_engine_1a5026c555b4d8fdd54cc44ee9050162f9>`(std::vector<unsigned>& vec, unsigned number);
	void :target:`match_common_args<doxid-namespace_sym_engine_1ae7ca304f22346fcb739d54569b4383d4>`(const std::string& func_class, const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& funcs_, :ref:`umap_basic_basic<doxid-namespace_sym_engine_1a0c689777bfdf46ba18b4faae696f5fb7>`& opt_subs);
	:ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :target:`set_as_vec<doxid-namespace_sym_engine_1a4b6ca39c252bb6b57a3a142cdcdfdad4>`(const :ref:`set_basic<doxid-namespace_sym_engine_1a1fa620e6bcd71963ab13f25687d23b63>`& s);

	template <typename T>
	bool :target:`is_aligned<doxid-namespace_sym_engine_1aad4f9bf5d7eca26cf6cea5f10af7dc65>`(T* p, size_t n = alignof(T));

	static std::string :target:`_str<doxid-namespace_sym_engine_1a6ec0f07b69061483b53a933a75e23dd3>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& a);
	void :target:`jacobian<doxid-namespace_sym_engine_1a5abe24f711694e6fc6b8f36310fb4477>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& x, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& result, bool diff_cache);
	void :target:`sjacobian<doxid-namespace_sym_engine_1a72da90f7aa5ddf163ff1585d3970ab39>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& x, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& result, bool diff_cache);
	void :target:`diff<doxid-namespace_sym_engine_1a5abd2b1a5c9b8c75fa80312351e4f064>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& x, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& result, bool diff_cache);
	void :target:`sdiff<doxid-namespace_sym_engine_1a98db802f7c1394fb36632c121bef1cf2>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& result, bool diff_cache);
	void :target:`conjugate_dense<doxid-namespace_sym_engine_1a505923f9f1371da644b6e819290d6d82>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B);
	void :target:`transpose_dense<doxid-namespace_sym_engine_1a42dfc1259f891cab6657bcffc1c96671>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B);
	void :target:`conjugate_transpose_dense<doxid-namespace_sym_engine_1a35b642f3237e6557e73e87eaa53c9440>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B);
	void :target:`submatrix_dense<doxid-namespace_sym_engine_1aeca109a45e795ad4528ab42136c56e2e>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B, unsigned row_start, unsigned col_start, unsigned row_end, unsigned col_end, unsigned row_step, unsigned col_step);
	void :target:`add_dense_dense<doxid-namespace_sym_engine_1a3ff5f9bed19eb534b8e70a54b869d9cd>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& C);
	void :target:`add_dense_scalar<doxid-namespace_sym_engine_1abac81d62daf9214ed61d085aa374f559>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& k, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B);
	void :target:`mul_dense_dense<doxid-namespace_sym_engine_1a228d47dc0e565d704551384ffb92f6be>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& C);
	void :target:`elementwise_mul_dense_dense<doxid-namespace_sym_engine_1adf49c7425d07e0fb972c7f73373bea4b>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& C);
	void :target:`mul_dense_scalar<doxid-namespace_sym_engine_1a8d97ac56bb12921f3ce968f16f13079a>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& k, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B);
	void :target:`row_exchange_dense<doxid-namespace_sym_engine_1a5c28226fa85481f4991b9a3198fd8fd8>`(:ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, unsigned i, unsigned j);
	void :target:`row_mul_scalar_dense<doxid-namespace_sym_engine_1a7d65756a2edecb9b81b96a619d42cc75>`(:ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, unsigned i, RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& c);
	void :target:`row_add_row_dense<doxid-namespace_sym_engine_1adffed8f61e190c25a82dab915887fb46>`(:ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, unsigned i, unsigned j, RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& c);
	void :target:`permuteFwd<doxid-namespace_sym_engine_1af12517788e017ca05c2e173d697326a8>`(:ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`permutelist<doxid-namespace_sym_engine_1a545265fb9636fec22762f1b6dbecc90f>`& pl);
	void :target:`column_exchange_dense<doxid-namespace_sym_engine_1a8c43565c1985b2a399bd107bf8715c9f>`(:ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, unsigned i, unsigned j);
	void :target:`pivoted_gaussian_elimination<doxid-namespace_sym_engine_1a0db6194c085654eec369223849c26777>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B, :ref:`permutelist<doxid-namespace_sym_engine_1a545265fb9636fec22762f1b6dbecc90f>`& pl);
	void :target:`fraction_free_gaussian_elimination<doxid-namespace_sym_engine_1a593a39cafb3bd272e08aea4184731c42>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B);
	void :target:`pivoted_fraction_free_gaussian_elimination<doxid-namespace_sym_engine_1afaa37b1b593b898a07e829f902ce0302>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B, :ref:`permutelist<doxid-namespace_sym_engine_1a545265fb9636fec22762f1b6dbecc90f>`& pl);
	void :target:`pivoted_gauss_jordan_elimination<doxid-namespace_sym_engine_1a297b9e511eeaba80b26896a479eda16f>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B, :ref:`permutelist<doxid-namespace_sym_engine_1a545265fb9636fec22762f1b6dbecc90f>`& pl);
	void :target:`fraction_free_gauss_jordan_elimination<doxid-namespace_sym_engine_1ae66a66e8d361babecbbf2cd12cafde10>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B);
	void :target:`pivoted_fraction_free_gauss_jordan_elimination<doxid-namespace_sym_engine_1a94b3fae309e3eb79aad31b95736bd6a9>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B, :ref:`permutelist<doxid-namespace_sym_engine_1a545265fb9636fec22762f1b6dbecc90f>`& pl);
	unsigned :target:`pivot<doxid-namespace_sym_engine_1ac4a85f6cf3b0894aeb4793d6041e87dc>`(:ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B, unsigned r, unsigned c);
	void :target:`reduced_row_echelon_form<doxid-namespace_sym_engine_1adf584f577f4216d68439ebee8c33d3de>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& b, :ref:`vec_uint<doxid-namespace_sym_engine_1aecd7425c31e3e29f207040601e0a7276>`& pivot_cols, bool normalize_last);
	void :target:`diagonal_solve<doxid-namespace_sym_engine_1ab82d85f9f3eee8455eb2b9d802a519d8>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& b, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& x);
	void :target:`back_substitution<doxid-namespace_sym_engine_1afb898fa068d2c49c7dcc5616c0c09717>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& U, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& b, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& x);
	void :target:`forward_substitution<doxid-namespace_sym_engine_1a28d0be8c6df84cd08c70677d8467bc8e>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& b, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& x);
	void :target:`fraction_free_gaussian_elimination_solve<doxid-namespace_sym_engine_1a5fa1ede4e36e657fc15a69728203f065>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& b, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& x);
	void :target:`fraction_free_gauss_jordan_solve<doxid-namespace_sym_engine_1a51a555c8bbab97b7ff0d6c7d328b1dd2>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& b, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& x);
	void :target:`fraction_free_LU_solve<doxid-namespace_sym_engine_1a3b03956b4019515f47eaa382f3ff2125>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& b, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& x);
	void :target:`LU_solve<doxid-namespace_sym_engine_1a626fb87f79a8af6ef2c9ced758e7de11>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& b, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& x);
	void :target:`pivoted_LU_solve<doxid-namespace_sym_engine_1a0193d6373e275d921e9e93bf409b302d>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& b, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& x);
	void :target:`LDL_solve<doxid-namespace_sym_engine_1a2267605c07ed1e883b7b9e63e3806ed0>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& b, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& x);
	void :target:`fraction_free_LU<doxid-namespace_sym_engine_1a6e14d617760b9b748066779fb54716ff>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& LU);
	void :target:`LU<doxid-namespace_sym_engine_1af5673755ad940b07a76b34d34d5a22ce>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& L, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& U);
	void :target:`pivoted_LU<doxid-namespace_sym_engine_1aee80470359193f2825574a6cd0fb10eb>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& LU, :ref:`permutelist<doxid-namespace_sym_engine_1a545265fb9636fec22762f1b6dbecc90f>`& pl);
	void :target:`pivoted_LU<doxid-namespace_sym_engine_1a5612751c292565ba550bb33b255174ee>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& L, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& U, :ref:`permutelist<doxid-namespace_sym_engine_1a545265fb9636fec22762f1b6dbecc90f>`& pl);
	void :target:`fraction_free_LDU<doxid-namespace_sym_engine_1a8926d053443b78b4a44a405bfb9c7447>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& L, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& D, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& U);
	void :target:`QR<doxid-namespace_sym_engine_1aa5875e572c76f38dc359629018ecdd77>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& Q, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& R);
	void :target:`LDL<doxid-namespace_sym_engine_1af1054fc1177b11063e096b4da02a6c0c>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& L, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& D);
	void :target:`cholesky<doxid-namespace_sym_engine_1acf24eb7427e1a09f5312d884133926b9>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& L);
	bool :target:`is_symmetric_dense<doxid-namespace_sym_engine_1a15a5908749edb96e6227bbb61649d6ac>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`det_bareis<doxid-namespace_sym_engine_1ac5a9be202c370fb91e789d6df2a93afc>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A);
	void :target:`berkowitz<doxid-namespace_sym_engine_1a39346c5eed59702b2a2bc1a6c946acd7>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, std::vector<:ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`>& polys);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`det_berkowitz<doxid-namespace_sym_engine_1a494d3cbbe57419beaf935f52c6499ea0>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A);
	void :target:`char_poly<doxid-namespace_sym_engine_1a439e1e866051234efd104af137ed52d1>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B);
	void :target:`inverse_fraction_free_LU<doxid-namespace_sym_engine_1ad37b049a1e31bae939d88ad0b956422c>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B);
	void :target:`inverse_LU<doxid-namespace_sym_engine_1ab727b123973817a71f34ac120dfb7fc4>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B);
	void :target:`inverse_pivoted_LU<doxid-namespace_sym_engine_1afc967bc813fa5a571e7257f4d4a57e10>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B);
	void :target:`inverse_gauss_jordan<doxid-namespace_sym_engine_1a984bef160102f76dc3a88dac664479ae>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B);
	void :target:`dot<doxid-namespace_sym_engine_1ad24e5e2a40b4adec2f412671f39042d8>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& C);
	void :target:`cross<doxid-namespace_sym_engine_1aed2ce39ddde30903e1f0688ed985d355>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& B, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& C);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`eigen_values<doxid-namespace_sym_engine_1a7241cd5422fa4ea4d7d2f8fa13c7c8a4>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A);
	void :target:`eye<doxid-namespace_sym_engine_1abd2d984192635714e8c93156d5ec614c>`(:ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, int k);
	void :target:`diag<doxid-namespace_sym_engine_1a125c7c68dc64fd5d9afca31d4b8bb47d>`(:ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& v, int k);
	void :target:`ones<doxid-namespace_sym_engine_1a49007b7108d47b85b9baa3f788924515>`(:ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A);
	void :target:`zeros<doxid-namespace_sym_engine_1a986dfa7bfec941863e36292282242705>`(:ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A);

	template <typename T>
	static RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`fdiff<doxid-namespace_sym_engine_1a31242f0e2d0e58083150e1460d82be02>`(const T& self, RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`> x, :ref:`DiffVisitor<doxid-class_sym_engine_1_1_diff_visitor>`& visitor);

	static bool :target:`fdiff<doxid-namespace_sym_engine_1a227a5ea618abbc06a5ebc45938d2e912>`(const Ptr<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>& ret, const :ref:`Zeta<doxid-class_sym_engine_1_1_zeta>`& self, unsigned index);
	static bool :target:`fdiff<doxid-namespace_sym_engine_1a85600401d22473e4c7a979879f13ef73>`(const Ptr<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>& ret, const :ref:`UpperGamma<doxid-class_sym_engine_1_1_upper_gamma>`& self, unsigned index);
	static bool :target:`fdiff<doxid-namespace_sym_engine_1a844b140cbc746d72efab23593e323cbd>`(const Ptr<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>& ret, const :ref:`LowerGamma<doxid-class_sym_engine_1_1_lower_gamma>`& self, unsigned index);
	static bool :target:`fdiff<doxid-namespace_sym_engine_1a27af1b1ce4a2697ae06c03325c100533>`(const Ptr<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>& ret, const :ref:`PolyGamma<doxid-class_sym_engine_1_1_poly_gamma>`& self, unsigned index);
	static bool :target:`fdiff<doxid-namespace_sym_engine_1a17f109ce9ae4bbb03780dd6ae931c01f>`(const Ptr<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>& ret, const :ref:`Function<doxid-class_sym_engine_1_1_function>`& self, unsigned index);

	template <typename P>
	static RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`diff_upolyflint<doxid-namespace_sym_engine_1a26b08bde178d459d21adfbc9ebe2e620>`(const P& self, const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`& x);

	template <typename Poly, typename Dict>
	static RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`diff_upoly<doxid-namespace_sym_engine_1a3a4653d5f000ffdc3e352f234d818d01>`(const Poly& self, const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`& x);

	template <typename Container, typename Poly>
	static RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`diff_mpoly<doxid-namespace_sym_engine_1ad444916a498d16d9956038732a9175f5>`(const MSymEnginePoly<Container, Poly>& self, const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& x);

	static RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`> :target:`get_dummy<doxid-namespace_sym_engine_1ab44d590f2967adc8288abb2adfe9d532>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b, std::string name);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`diff<doxid-namespace_sym_engine_1a26b2bfb8312d75ae09a452f96fa4d798>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg, const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& x, bool cache);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`sdiff<doxid-namespace_sym_engine_1a314022f742a11a24af260b71b5a59bed>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x, bool cache);
	std::ostream& :ref:`operator<<<doxid-namespace_sym_engine_1a77686ca34a7fa8292ac3b0ec1f2e8ed8>`(std::ostream& out, const :ref:`SymEngine::umap_basic_num<doxid-namespace_sym_engine_1ab37a0fc09c189e2d50880c64ebc5137e>`& d);
	std::ostream& :target:`operator<<<doxid-namespace_sym_engine_1ad299fcc197e29be01d9e9a76df6924c3>`(std::ostream& out, const :ref:`SymEngine::map_basic_num<doxid-namespace_sym_engine_1aa61db61a45aaacd69af9e1640302a708>`& d);
	std::ostream& :target:`operator<<<doxid-namespace_sym_engine_1a55a3b1949bb7c8a09ec8a4b083e2953f>`(std::ostream& out, const :ref:`SymEngine::map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& d);
	std::ostream& :target:`operator<<<doxid-namespace_sym_engine_1a8ab53478d2f96ff6c9dcdbcc2d216595>`(std::ostream& out, const :ref:`SymEngine::umap_basic_basic<doxid-namespace_sym_engine_1a0c689777bfdf46ba18b4faae696f5fb7>`& d);
	std::ostream& :target:`operator<<<doxid-namespace_sym_engine_1a97e24bb0d9f4435f8d800c8644fec51d>`(std::ostream& out, const :ref:`SymEngine::vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& d);
	std::ostream& :target:`operator<<<doxid-namespace_sym_engine_1a128a7d10c9765ba1ff8aad6047c3fcb6>`(std::ostream& out, const :ref:`SymEngine::set_basic<doxid-namespace_sym_engine_1a1fa620e6bcd71963ab13f25687d23b63>`& d);
	std::ostream& :target:`operator<<<doxid-namespace_sym_engine_1ad1a96103f814f3932e9c627283d3ffa0>`(std::ostream& out, const :ref:`SymEngine::map_int_Expr<doxid-namespace_sym_engine_1a98adbe9bf3af4a2affdfcfd387bcff4e>`& d);
	std::ostream& :target:`operator<<<doxid-namespace_sym_engine_1ab25c87c978fbf8f361ea604194178e51>`(std::ostream& out, const :ref:`SymEngine::vec_pair<doxid-namespace_sym_engine_1a8c28ada5624c06c11e387e41755a1d8a>`& d);
	bool :ref:`vec_basic_eq_perm<doxid-namespace_sym_engine_1a9abe8e75a54bd930425a94584942b8e5>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& a, const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& b);

	template <typename T1, typename T2, typename T3>
	void :ref:`insert<doxid-namespace_sym_engine_1a8a0fa36d4fbff063bb37b9893c4e6354>`(T1& m, const T2& first, const T3& second);

	template <class M, typename C = std::less<typename M::key_type>>
	std::vector<typename M::key_type> :target:`sorted_keys<doxid-namespace_sym_engine_1ab6b82f6bf307ea41158441cb2543d24e>`(const M& d);

	template <typename T, typename U>
	bool :target:`unified_eq<doxid-namespace_sym_engine_1ab7528bd6601ed464d5b0919d99620c53>`(const std::pair<T, U>& a, const std::pair<T, U>& b);

	template <typename T, typename U>
	bool :target:`unified_eq<doxid-namespace_sym_engine_1adb77aa33f9fd398701346c328fad65d3>`(const std::set<T, U>& a, const std::set<T, U>& b);

	template <typename T, typename U>
	bool :target:`unified_eq<doxid-namespace_sym_engine_1ab685b0dc0929d0ab6cd92ad25c4ccf5b>`(const std::multiset<T, U>& a, const std::multiset<T, U>& b);

	template <typename K, typename V, typename C>
	bool :target:`unified_eq<doxid-namespace_sym_engine_1a3d8fabaaaed46ba0445af280efde6f52>`(const std::map<K, V, C>& a, const std::map<K, V, C>& b);

	template <typename K, typename V, typename H, typename E>
	bool :target:`unified_eq<doxid-namespace_sym_engine_1a2ba26d818e22549b8174372ffc615617>`(const std::unordered_map<K, V, H, :ref:`E<doxid-namespace_sym_engine_1a0ae04e22c7f96ec8e593be32a80f7621>`>& a, const std::unordered_map<K, V, H, :ref:`E<doxid-namespace_sym_engine_1a0ae04e22c7f96ec8e593be32a80f7621>`>& b);

	template <typename T, typename U, typename = enable_if_t<std::is_base_of<Basic, T>::value                                 and std::is_base_of<Basic, U>::value>>
	bool :target:`unified_eq<doxid-namespace_sym_engine_1a5a9d43e47063c86008bbaea6c9b56cd8>`(const RCP<const T>& a, const RCP<const U>& b);

	template <typename T, typename = enable_if_t<std::is_arithmetic<T>::value                                 or std::is_same<T, integer_class>::value>>
	bool :target:`unified_eq<doxid-namespace_sym_engine_1ae816ea5321e80ba2b5757679b43f16a3>`(const T& a, const T& b);

	template <class T>
	bool :ref:`unordered_eq<doxid-namespace_sym_engine_1af1801d33789e06ee0483d4541ad93be8>`(const T& a, const T& b);

	template <class T>
	bool :target:`ordered_eq<doxid-namespace_sym_engine_1af58d40f7647652ea299edab6dd200e1f>`(const T& A, const T& B);

	template <typename T>
	bool :target:`unified_eq<doxid-namespace_sym_engine_1a304555c47aee86400ee4aef4bab43a1b>`(const std::vector<T>& a, const std::vector<T>& b);

	template <typename T, typename = enable_if_t<std::is_arithmetic<T>::value                                 or std::is_same<T, integer_class>::value                                 or std::is_same<T, rational_class>::value>>
	int :ref:`unified_compare<doxid-namespace_sym_engine_1abd6e504a0004aae351332d69343747fe>`(const T& a, const T& b);

	template <typename T, typename U, typename = enable_if_t<std::is_base_of<Basic, T>::value                                 and std::is_base_of<Basic, U>::value>>
	int :target:`unified_compare<doxid-namespace_sym_engine_1a9c8e91a5053aad5ca9f29790413e211c>`(const RCP<const T>& a, const RCP<const U>& b);

	template <class T>
	int :target:`ordered_compare<doxid-namespace_sym_engine_1a775159a6819c52314678ac462437bdc5>`(const T& A, const T& B);

	template <typename T>
	int :target:`unified_compare<doxid-namespace_sym_engine_1a6abc70f26721935388dfeb9c8f6ba197>`(const std::vector<T>& a, const std::vector<T>& b);

	template <typename T, typename U>
	int :target:`unified_compare<doxid-namespace_sym_engine_1a3c4a2ad948a929bd7cf30df1c5109023>`(const std::set<T, U>& a, const std::set<T, U>& b);

	template <typename T, typename U>
	int :target:`unified_compare<doxid-namespace_sym_engine_1a38e6f1d266a19b893b06b81c2aa9292c>`(const std::multiset<T, U>& a, const std::multiset<T, U>& b);

	template <typename T, typename U>
	int :target:`unified_compare<doxid-namespace_sym_engine_1af7f7606696e1bb9bdc4f8a2781cf94f9>`(const std::pair<T, U>& a, const std::pair<T, U>& b);

	template <typename K, typename V, typename C>
	int :target:`unified_compare<doxid-namespace_sym_engine_1ace04e5b4b5437b263a7371c25cae4456>`(const std::map<K, V, C>& a, const std::map<K, V, C>& b);

	template <typename K, typename V, typename H, typename E>
	int :target:`unified_compare<doxid-namespace_sym_engine_1ad0713bd0242891a552ca5aa0d32a386d>`(const std::unordered_map<K, V, H, :ref:`E<doxid-namespace_sym_engine_1a0ae04e22c7f96ec8e593be32a80f7621>`>& a, const std::unordered_map<K, V, H, :ref:`E<doxid-namespace_sym_engine_1a0ae04e22c7f96ec8e593be32a80f7621>`>& b);

	template <class M, typename C = std::less<typename M::key_type>>
	int :target:`unordered_compare<doxid-namespace_sym_engine_1a81c29a7b1a8595271575c67eb0e6e158>`(const M& a, const M& b);

	bool :target:`order<doxid-namespace_sym_engine_1a1928f09861d27143d78d7384b27d1137>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& t, const std::vector<:ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`>& basis, unsigned k);
	bool :target:`is_minimum<doxid-namespace_sym_engine_1af9568b783fe494ef67877e10c4f4dbe7>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& t, const std::vector<:ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`>& basis, unsigned n);
	void :target:`homogeneous_lde<doxid-namespace_sym_engine_1aff9647f39f0030e7fd6c311b804de157>`(std::vector<:ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`>& basis, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A);
	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :target:`evalf_numeric<doxid-namespace_sym_engine_1ac815d21b569e7f6b217d4de06a04fa42>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b, unsigned long bits, bool real);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`evalf<doxid-namespace_sym_engine_1a45455e5950f709f26c0eda997397739e>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b, unsigned long bits, :ref:`EvalfDomain<doxid-namespace_sym_engine_1a04157cdfeef154e7bc8690bfd7a22160>` domain);
	std::vector<:ref:`fn<doxid-namespace_sym_engine_1a2a27754ceb93ff4b0dc088e24c6ec491>`> :target:`init_eval_double<doxid-namespace_sym_engine_1ad91284f4cad81dc22ba21921a4e6bafb>`();
	double :target:`eval_double<doxid-namespace_sym_engine_1ab282d6cdf7cc96514c5ab9f99aa0abdf>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);
	std::complex<double> :target:`eval_complex_double<doxid-namespace_sym_engine_1ab1fd9e6ccc9795d71bf6eaa75ebe6856>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);
	double :target:`eval_double_single_dispatch<doxid-namespace_sym_engine_1a0aebf5b8271f9053c2ec17ffc963fad0>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);
	double :target:`eval_double_visitor_pattern<doxid-namespace_sym_engine_1a7a8fa8c72b0eccdaae07acf07723886b>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);
	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :target:`_mulnum<doxid-namespace_sym_engine_1a290a303c1a08d1682803c430510807d2>`(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& x, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& y);
	void :target:`_imulnum<doxid-namespace_sym_engine_1ad37f6dacabb3531ff4200c7a53c8cde5>`(const Ptr<RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>>& self, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& other);
	:ref:`Expression<doxid-class_sym_engine_1_1_expression>` :target:`pow<doxid-namespace_sym_engine_1a4986c6feb6b56fe61080472b36458aa9>`(const :ref:`Expression<doxid-class_sym_engine_1_1_expression>`& base, const :ref:`Expression<doxid-class_sym_engine_1_1_expression>`& exp);
	:ref:`Expression<doxid-class_sym_engine_1_1_expression>` :target:`expand<doxid-namespace_sym_engine_1a4321c60108537f834ae2067a3b01c1af>`(const :ref:`Expression<doxid-class_sym_engine_1_1_expression>`& arg);
	bool :target:`unified_eq<doxid-namespace_sym_engine_1a465e112793b8e5b96d2c3a0433462051>`(const :ref:`Expression<doxid-class_sym_engine_1_1_expression>`& a, const :ref:`Expression<doxid-class_sym_engine_1_1_expression>`& b);
	int :target:`unified_compare<doxid-namespace_sym_engine_1aa27372019239f6dd6e6f9944774c64cb>`(const :ref:`Expression<doxid-class_sym_engine_1_1_expression>`& a, const :ref:`Expression<doxid-class_sym_engine_1_1_expression>`& b);
	RCP<const :ref:`GaloisField<doxid-class_sym_engine_1_1_galois_field>`> :target:`gf_poly<doxid-namespace_sym_engine_1a1e0f78cd669306fa94c4f80653de8533>`(RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> i, :ref:`GaloisFieldDict<doxid-class_sym_engine_1_1_galois_field_dict>`&& dict);
	RCP<const :ref:`GaloisField<doxid-class_sym_engine_1_1_galois_field>`> :target:`gf_poly<doxid-namespace_sym_engine_1a65f6fb120186024286d9f8d42434e5e6>`(RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> i, :ref:`map_uint_mpz<doxid-namespace_sym_engine_1ad8114dbc1c3064b4439ee6c7dbe32384>`&& dict, :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>` modulo_);
	RCP<const :ref:`GaloisField<doxid-class_sym_engine_1_1_galois_field>`> :target:`pow_upoly<doxid-namespace_sym_engine_1a3132fc9da3a64ad112b22c0ff5382d32>`(const :ref:`GaloisField<doxid-class_sym_engine_1_1_galois_field>`& a, unsigned int p);
	:ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :target:`generate_fdiff_weights_vector<doxid-namespace_sym_engine_1ad65547b63ed033ce4c5cc21ebef7bedf>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& grid, const unsigned max_deriv, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> around);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`sqrt<doxid-namespace_sym_engine_1ad3c79a5139355045b975b5a848589cd9>`(RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`cbrt<doxid-namespace_sym_engine_1abc67935dfe2930079766aceddfef0a41>`(RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`conjugate<doxid-namespace_sym_engine_1af02f97d82354b66c939ae206f0057edd>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	bool :ref:`get_pi_shift<doxid-namespace_sym_engine_1a2fffbf87e0516fd6b0ce4075ab644c07>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg, const Ptr<RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>>& n, const Ptr<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>& m);
	bool :target:`trig_has_basic_shift<doxid-namespace_sym_engine_1aa63f7cf65893358b44d5cd0bf4309b2c>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	bool :ref:`could_extract_minus<doxid-namespace_sym_engine_1a7c057cbaf1e06ea937374d6b9f4e29d8>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& arg);
	bool :target:`handle_minus<doxid-namespace_sym_engine_1aa56bf02c8c13be9b0c10a9c280d0e22c>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg, const Ptr<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>& rarg);
	bool :target:`trig_simplify<doxid-namespace_sym_engine_1a2c83ea7a6c005a1f8c2bd0beb8a9b8ad>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg, unsigned period, bool odd, bool conj_odd, const Ptr<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>& rarg, int& index, int& sign);
	bool :ref:`inverse_lookup<doxid-namespace_sym_engine_1a1b0797760c58c161c8c1bcc45d8e1174>`(:ref:`umap_basic_basic<doxid-namespace_sym_engine_1a0c689777bfdf46ba18b4faae696f5fb7>`& d, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& t, const Ptr<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>& index);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`sign<doxid-namespace_sym_engine_1a354804803424321111913a4071ca837e>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`floor<doxid-namespace_sym_engine_1a8d243e3a9146c0b0641bced63fc79254>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`ceiling<doxid-namespace_sym_engine_1a39c4aa170bc123a990149a38662edf99>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`truncate<doxid-namespace_sym_engine_1aa4550752e62ed1fbf09556fd21536e17>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`sin<doxid-namespace_sym_engine_1af953f16601b3943d30af2fa898adb593>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`cos<doxid-namespace_sym_engine_1aa8badea5381f58b2772038bbb7a2fb7f>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`tan<doxid-namespace_sym_engine_1a6e5f23d059e1621822b81d41b8363601>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`cot<doxid-namespace_sym_engine_1a87b495de4d9aef4e2785d3414e6977aa>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`csc<doxid-namespace_sym_engine_1aac2883235cc548f08ea23326353e0134>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`sec<doxid-namespace_sym_engine_1a1a35d45982072e8755a2b415bab129ba>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`trig_to_sqrt<doxid-namespace_sym_engine_1ad21389676ea6ae1fd15650cf1ab8faf2>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`asin<doxid-namespace_sym_engine_1a690281de28708c8cef39f5ae73611872>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`acos<doxid-namespace_sym_engine_1a0a98ed704f86e941a5086a46465b2a5b>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`asec<doxid-namespace_sym_engine_1a770eb76ede26403354e4c1ae810c3eb9>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`acsc<doxid-namespace_sym_engine_1a441485eec265e862086e257b24f39619>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`atan<doxid-namespace_sym_engine_1a7f679b584c73a42368d795a4315c0be4>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`acot<doxid-namespace_sym_engine_1aebcb782a4d69ba115c13a331bb5e4cba>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`atan2<doxid-namespace_sym_engine_1a375f5fe3cb27618965e5ed38d864e7f1>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& num, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& den);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`log<doxid-namespace_sym_engine_1aa9a8ead88fadfd214371b73a3a0f34fb>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`log<doxid-namespace_sym_engine_1ab06140084ae1dd503bf62605cbf2362f>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& b);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`lambertw<doxid-namespace_sym_engine_1adb693450f29c2ed151035680ba8d775d>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`function_symbol<doxid-namespace_sym_engine_1ae584093404e71f228d9f2e2ce261fa70>`(std::string name, const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`function_symbol<doxid-namespace_sym_engine_1a27d08ebdbf0bb28eaadc7b2a9c061da6>`(std::string name, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`sinh<doxid-namespace_sym_engine_1ae24e5db43005e29f95bf5ecc8789f812>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`csch<doxid-namespace_sym_engine_1abaf2d363a25f737f66c43961a2c9b189>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`cosh<doxid-namespace_sym_engine_1a769e7739efb7721d2a0757114e5d5ee8>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`sech<doxid-namespace_sym_engine_1a4f5dc2e3fd1198f985c2dee59fbf848f>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`tanh<doxid-namespace_sym_engine_1a8346955fed5e42cb443055b3264089f3>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`coth<doxid-namespace_sym_engine_1a2a90d704dca9d038d809da659b455502>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`asinh<doxid-namespace_sym_engine_1a7fa6c02ee6b74e628b3f86bc4f2c610c>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`acsch<doxid-namespace_sym_engine_1a79d78569325a57c3da3ff4de95ff53dd>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`acosh<doxid-namespace_sym_engine_1aa077500b689f21abfefa66ee545946e5>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`atanh<doxid-namespace_sym_engine_1a8a6d05bb97e9647eea7ae3c304a8a391>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`acoth<doxid-namespace_sym_engine_1a6d8a501171dfc0dae4f98450268d0ab3>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`asech<doxid-namespace_sym_engine_1adb505bfa00177f523f101090335f6ca0>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`kronecker_delta<doxid-namespace_sym_engine_1ae256c31b33e601a3c0b163437a85ad75>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& i, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& j);
	bool :target:`has_dup<doxid-namespace_sym_engine_1af6a61712d3952ed4819d26b47cdf8a17>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`eval_levicivita<doxid-namespace_sym_engine_1a4b51fa317bd7b3748c3734239ae0dcee>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& arg, int len);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`levi_civita<doxid-namespace_sym_engine_1a9eeaa7b8ba0e75049685edc1cd53dbef>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`zeta<doxid-namespace_sym_engine_1a227ea1d94f9ac72c4051a247ac54b1d1>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& s, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`zeta<doxid-namespace_sym_engine_1a4c025e7c49e3a12ab085dadd12092551>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& s);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`dirichlet_eta<doxid-namespace_sym_engine_1aad833a78351ba7b22249695b5d1e7a2b>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& s);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`erf<doxid-namespace_sym_engine_1ac51d8c7a02041f2c0a6daa8905e20b0d>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`erfc<doxid-namespace_sym_engine_1a8f9a1131b360ff67d1e9d61c142bd895>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`gamma_positive_int<doxid-namespace_sym_engine_1ab30d4b6631f4f77c6e64404857ccc429>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`gamma_multiple_2<doxid-namespace_sym_engine_1ad6c40182706bb3e38537123ee9801180>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`gamma<doxid-namespace_sym_engine_1a5427bd85fc080a17d0718a7d97353a49>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`lowergamma<doxid-namespace_sym_engine_1aa1e95e77c5692e8579aaa092f2cd951c>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& s, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`uppergamma<doxid-namespace_sym_engine_1afd4e5ab0bad75561a69caf9036301083>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& s, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`loggamma<doxid-namespace_sym_engine_1aa65191cb3b4d8841ce3cfca888f730ef>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`beta<doxid-namespace_sym_engine_1a2203e9e82d8b995e95ba5ce0efe5fe0c>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& y);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`polygamma<doxid-namespace_sym_engine_1a1fd201b852a258d731b82bada47a188b>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& n_, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x_);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`digamma<doxid-namespace_sym_engine_1a2811817806245aa9a2912254b68e9339>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`trigamma<doxid-namespace_sym_engine_1a9fb0f7276b77dd114ee0a705016fd9ca>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`abs<doxid-namespace_sym_engine_1a3deecb23288ff261b9534dbe7291cf7b>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`max<doxid-namespace_sym_engine_1a266cbfda523325a93b19b5dd2f113862>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`min<doxid-namespace_sym_engine_1ac173c8dd31830a8392c91aa7143b0428>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`unevaluated_expr<doxid-namespace_sym_engine_1a621cff748a0cb0d8580ebbe45a24a74f>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`sqrt<doxid-namespace_sym_engine_1a3fed2bc2a99f9d70b4dd04ae0320d32b>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`cbrt<doxid-namespace_sym_engine_1a10e79c5e6be1793c03aa75e514d2b6ae>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg);
	RCP<const :ref:`Infty<doxid-class_sym_engine_1_1_infty>`> :target:`infty<doxid-namespace_sym_engine_1abfcded7aa73810752cc456a32eb29989>`(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& direction);
	RCP<const :ref:`Infty<doxid-class_sym_engine_1_1_infty>`> :target:`infty<doxid-namespace_sym_engine_1af42f683a5aa9d3c54e3ad1b7ba503409>`(int n = 1);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`isqrt<doxid-namespace_sym_engine_1a6791cec0bb0ba67bc5cb8b42047a0b46>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`iabs<doxid-namespace_sym_engine_1adfe12999fb4a97e343fa0a648b888f2f>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n);
	int :ref:`i_nth_root<doxid-namespace_sym_engine_1ac2e88d0ec439019bac8b1273128a1c41>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& r, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, unsigned long int n);
	bool :ref:`perfect_square<doxid-namespace_sym_engine_1a68cf186a0ab35fac048f9b57dc848f17>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n);
	bool :ref:`perfect_power<doxid-namespace_sym_engine_1a9398857a7e156b26f4239c041b6127a4>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n);

	template <typename T>
	std::enable_if<std::is_integral<T>::value, RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>::type :ref:`integer<doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356>`(T i);

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`integer<doxid-namespace_sym_engine_1a54ff575a351c8a2b58feb7b4f8cb0d39>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>` i);
	llvm::Function* :target:`get_float_intrinsic<doxid-namespace_sym_engine_1adbd1fd8694f1d214445e1f1ff89f56f7>`(llvm::Type* type, llvm::Intrinsic::ID id, unsigned n, llvm::Module* mod);
	:target:`SYMENGINE_LOGIC_FUNCTION<doxid-namespace_sym_engine_1ac2075df0bf71d1fc05cd67d441ab2901>`(:ref:`And<doxid-class_sym_engine_1_1_and>`, CreateAnd);
	:target:`SYMENGINE_LOGIC_FUNCTION<doxid-namespace_sym_engine_1a8008d9874694df0c0714c3d2dddcdb9d>`(:ref:`Or<doxid-class_sym_engine_1_1_or>`, CreateOr);
	:target:`SYMENGINE_LOGIC_FUNCTION<doxid-namespace_sym_engine_1ae9e84b99fc2e570bb9981503d0f12646>`(:ref:`Xor<doxid-class_sym_engine_1_1_xor>`, CreateXor);
	:target:`SYMENGINE_RELATIONAL_FUNCTION<doxid-namespace_sym_engine_1a0cdaf734ccf0a0d4887109e5ac9c54b0>`(:ref:`Equality<doxid-class_sym_engine_1_1_equality>`, CreateFCmpOEQ);
	:target:`SYMENGINE_RELATIONAL_FUNCTION<doxid-namespace_sym_engine_1a2ec69c2614848a607ef0fea85d5378e7>`(:ref:`Unequality<doxid-class_sym_engine_1_1_unequality>`, CreateFCmpONE);
	:target:`SYMENGINE_RELATIONAL_FUNCTION<doxid-namespace_sym_engine_1a046606e767860d5ca4d1b3e42dbdc014>`(:ref:`LessThan<doxid-class_sym_engine_1_1_less_than>`, CreateFCmpOLE);
	:target:`SYMENGINE_RELATIONAL_FUNCTION<doxid-namespace_sym_engine_1ad71930ec47fb65b0e6acce8eb199a9a7>`(:ref:`StrictLessThan<doxid-class_sym_engine_1_1_strict_less_than>`, CreateFCmpOLT);
	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :target:`contains<doxid-namespace_sym_engine_1a088836761665686579e95229054b2fe2>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& expr, const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& set);
	const :ref:`vec_boolean<doxid-namespace_sym_engine_1a2352b06d8a2ae9af96ca37d6d149127b>` :target:`get_vec_from_set<doxid-namespace_sym_engine_1a7e9546d951d18f8d547c736653116951>`(const :ref:`set_boolean<doxid-namespace_sym_engine_1ae8adf96ee1bd77aca141a31b6ce51d8b>`& s);

	template <typename caller>
	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :target:`and_or<doxid-namespace_sym_engine_1aae2ab8d1eb8cc6bd68f7d2e335fa66d4>`(const :ref:`set_boolean<doxid-namespace_sym_engine_1ae8adf96ee1bd77aca141a31b6ce51d8b>`& s, const bool& op_x_notx);

	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :target:`logical_not<doxid-namespace_sym_engine_1ace045b7c77e820a25f0b31a9243d10c5>`(const RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`>& s);
	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :target:`logical_xor<doxid-namespace_sym_engine_1a2fd75049c0efb8910042911c9186b4ef>`(const :ref:`vec_boolean<doxid-namespace_sym_engine_1a2352b06d8a2ae9af96ca37d6d149127b>`& s);
	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :ref:`Eq<doxid-namespace_sym_engine_1abb176b90171ba213e14a1dca70b890ab>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& lhs);
	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :ref:`Eq<doxid-namespace_sym_engine_1a2a4962a72c0af004b4c06b4eb660e3e1>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& lhs, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& rhs);
	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :ref:`Ne<doxid-namespace_sym_engine_1ada7b9196d7dbcd0611640a60bbdaeba9>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& lhs, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& rhs);
	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :ref:`Le<doxid-namespace_sym_engine_1aac206b17fc30b4dc889c5ebc98e2c39f>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& lhs, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& rhs);
	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :ref:`Ge<doxid-namespace_sym_engine_1a0a7185d0fb25140df9797a462bde11c6>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& lhs, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& rhs);
	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :ref:`Lt<doxid-namespace_sym_engine_1a2aadb3a6ac5bc33af97dd42ea096276d>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& lhs, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& rhs);
	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :ref:`Gt<doxid-namespace_sym_engine_1ada2f0b220c4770c1c1fbbe96dfcf7af8>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& lhs, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& rhs);
	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :target:`logical_and<doxid-namespace_sym_engine_1aa9401ac55b5c6be92a270347973888b0>`(const :ref:`set_boolean<doxid-namespace_sym_engine_1ae8adf96ee1bd77aca141a31b6ce51d8b>`& s);
	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :target:`logical_nand<doxid-namespace_sym_engine_1a19c972c58cd40e0b3795d092a6df7ada>`(const :ref:`set_boolean<doxid-namespace_sym_engine_1ae8adf96ee1bd77aca141a31b6ce51d8b>`& s);
	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :target:`logical_or<doxid-namespace_sym_engine_1a37db0420ad960f955bdf3b75389b6019>`(const :ref:`set_boolean<doxid-namespace_sym_engine_1ae8adf96ee1bd77aca141a31b6ce51d8b>`& s);
	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :target:`logical_nor<doxid-namespace_sym_engine_1ae45fd9a9eba7a5bfbcdb7e52408bdb13>`(const :ref:`set_boolean<doxid-namespace_sym_engine_1ae8adf96ee1bd77aca141a31b6ce51d8b>`& s);
	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> :target:`logical_xnor<doxid-namespace_sym_engine_1a10f7fa0ad0421f5b7f11164b07f951bc>`(const :ref:`vec_boolean<doxid-namespace_sym_engine_1a2352b06d8a2ae9af96ca37d6d149127b>`& s);
	RCP<const :ref:`BooleanAtom<doxid-class_sym_engine_1_1_boolean_atom>`> :target:`boolean<doxid-namespace_sym_engine_1aaf3d0680bc71428109d4c7837a81dc05>`(bool b);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`piecewise<doxid-namespace_sym_engine_1aa10a608ca473b1cb273a6d54bc6073b5>`(:ref:`PiecewiseVec<doxid-namespace_sym_engine_1acef49c25a12c491e784c727c6d2a9e62>`&& vec);
	bool :target:`is_a_Relational<doxid-namespace_sym_engine_1a312efe3b64e07bc005ca567ec94f4439>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);
	bool :target:`is_a_Boolean<doxid-namespace_sym_engine_1a4166dcdd92a7c84f39df5b04a0e6ff29>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);

	template <class T>
	bool :target:`is_a<doxid-namespace_sym_engine_1a55c552d60587cfdd634494c9bf8840a9>`(const :ref:`MatrixBase<doxid-class_sym_engine_1_1_matrix_base>`& b);

	bool :target:`operator==<doxid-namespace_sym_engine_1ab7b4404d09f3e657858cf7815acec8ab>`(const :ref:`SymEngine::MatrixBase<doxid-class_sym_engine_1_1_matrix_base>`& lhs, const :ref:`SymEngine::MatrixBase<doxid-class_sym_engine_1_1_matrix_base>`& rhs);
	bool :target:`operator!=<doxid-namespace_sym_engine_1a79d264ecba89d3aba09c7879da2eeafa>`(const :ref:`SymEngine::MatrixBase<doxid-class_sym_engine_1_1_matrix_base>`& lhs, const :ref:`SymEngine::MatrixBase<doxid-class_sym_engine_1_1_matrix_base>`& rhs);
	void :ref:`monomial_mul<doxid-namespace_sym_engine_1a472e32d743cd0f5c727ee7366646ee32>`(const :ref:`vec_int<doxid-namespace_sym_engine_1a92041f53e44e3e095d1eb2a8300a69b3>`& A, const :ref:`vec_int<doxid-namespace_sym_engine_1a92041f53e44e3e095d1eb2a8300a69b3>`& B, :ref:`vec_int<doxid-namespace_sym_engine_1a92041f53e44e3e095d1eb2a8300a69b3>`& C);
	:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>` :target:`pow<doxid-namespace_sym_engine_1a4a02f64f449d1789ebe703180fda5e61>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, unsigned long b);
	void :target:`mp_fdiv_qr<doxid-namespace_sym_engine_1a3863bea5ec2f41fa5a29d4390ea4f220>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& q, :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& r, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	void :target:`mp_cdiv_qr<doxid-namespace_sym_engine_1ac7236988a1b7c8df30988123a2783d29>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& q, :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& r, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	void :target:`mp_gcdext<doxid-namespace_sym_engine_1adbc7204c38df4382ccdc41d843a9b4ac>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& gcd, :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& s, :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& t, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	bool :target:`mp_invert<doxid-namespace_sym_engine_1aea0d9ce009bc55a7a47ba39124828ab5>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& m);
	:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>` :target:`fmod<doxid-namespace_sym_engine_1a212984cf0698953ac4298a124da7ea7a>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& mod);
	void :target:`mp_pow_ui<doxid-namespace_sym_engine_1ab36e465b0f69e55b33b09b40c1eff518>`(:ref:`rational_class<doxid-namespace_sym_engine_1adf9ea33194708619514d4a54d5fb1614>`& res, const :ref:`rational_class<doxid-namespace_sym_engine_1adf9ea33194708619514d4a54d5fb1614>`& i, unsigned long n);
	void :target:`mp_powm<doxid-namespace_sym_engine_1a1183fd19218e79376ab1128d325991fc>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& base, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& exp, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& m);
	:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>` :target:`step<doxid-namespace_sym_engine_1ad2fb3b32ef355f144b07b53bcf3d5ccd>`(const unsigned long& n, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i, :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& x);
	bool :target:`positive_root<doxid-namespace_sym_engine_1a1cde4d7ba6fab94306fd31a5fd1f874a>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i, const unsigned long n);
	bool :target:`mp_root<doxid-namespace_sym_engine_1ab26581ba01cd3aa4b7d8c5cf4c8174a7>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i, const unsigned long n);
	:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>` :target:`mp_sqrt<doxid-namespace_sym_engine_1a475ba1d45a32f21d1bfa38d768d4ec4b>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	void :target:`mp_rootrem<doxid-namespace_sym_engine_1ae514816b46c23d9ab5a5de69216905c2>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i, unsigned long n);
	void :target:`mp_sqrtrem<doxid-namespace_sym_engine_1a711a0c6ddee4d614c5ff7a48d5d8ba22>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	int :target:`mp_probab_prime_p<doxid-namespace_sym_engine_1a455281d26033604d5c59b0e83b8c8dcd>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i, unsigned retries);
	void :target:`mp_nextprime<doxid-namespace_sym_engine_1aa2074c084c5e4ecbbf0b8a1d05f2270b>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	unsigned long :target:`mp_scan1<doxid-namespace_sym_engine_1a8cd715e9fa31421785e294c30ec82553>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	:ref:`two_by_two_matrix<doxid-struct_sym_engine_1_1two__by__two__matrix>` :target:`fib_matrix<doxid-namespace_sym_engine_1a07f5eabf2fa8fc0e34248a319471cf39>`(unsigned long n);
	void :target:`mp_fib_ui<doxid-namespace_sym_engine_1a825d44ed7bcbcabed2fa0e1fd33241e6>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, unsigned long n);
	void :target:`mp_fib2_ui<doxid-namespace_sym_engine_1a775d0d3fdc1e344eb4d54bff6cfee6b9>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b, unsigned long n);
	:ref:`two_by_two_matrix<doxid-struct_sym_engine_1_1two__by__two__matrix>` :target:`luc_matrix<doxid-namespace_sym_engine_1a64f877d61bf453c83b0c13bae061715b>`(unsigned long n);
	void :target:`mp_lucnum_ui<doxid-namespace_sym_engine_1a7006349119e4b55fc4293a82300eb81d>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, unsigned long n);
	void :target:`mp_lucnum2_ui<doxid-namespace_sym_engine_1a01437049995f570675bce93925db7b7c>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b, unsigned long n);
	void :target:`mp_fac_ui<doxid-namespace_sym_engine_1a9a7209fb0cb52687c99b1f6bfe32e8a8>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, unsigned long n);
	void :target:`mp_bin_ui<doxid-namespace_sym_engine_1a146d6ee14717f89c779fad6b1d413047>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& n, unsigned long r);
	bool :target:`mp_perfect_power_p<doxid-namespace_sym_engine_1aa067e8e1e48e2cb3c29426e98e755b8a>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	bool :target:`mp_perfect_square_p<doxid-namespace_sym_engine_1aabbf8eb7c388f8b9b73e10441867380e>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	int :target:`mp_legendre<doxid-namespace_sym_engine_1aa34fe75f19f99fc48a8a69a034e8b24c>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& n);
	int :target:`unchecked_jacobi<doxid-namespace_sym_engine_1a5bffb5798bc02e0a0e7434a4900d9640>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& n);
	int :target:`mp_jacobi<doxid-namespace_sym_engine_1a0414636d23b0bf9e2f8c036cf2f60b2f>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& n);
	int :target:`mp_kronecker<doxid-namespace_sym_engine_1a74101f367b0a8e236aa555bf4347c8ef>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& n);
	:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>` :ref:`operator""_z<doxid-namespace_sym_engine_1_1literals_1a618f35c7b256be9b4e0109a60bf80f4c>`(const char* str);
	:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>` :target:`mp_abs<doxid-namespace_sym_engine_1ab13e97a95218de531ad8c30a4bc93598>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	int :target:`mp_sign<doxid-namespace_sym_engine_1a810e4c772c6b0395b05d95d6f84fa5d0>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	double :target:`mp_get_d<doxid-namespace_sym_engine_1ac1a85ab865046e14f64abd78dcefabab>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	void :target:`mp_set_d<doxid-namespace_sym_engine_1aa8c97493508ca2353f854f822ea62275>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i, double a);
	void :target:`mp_demote<doxid-namespace_sym_engine_1a97cbdf2991be0da1df151c1a1fb83bf2>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	bool :target:`mp_fits_ulong_p<doxid-namespace_sym_engine_1aa85a72cce485555eaf51fd6707429d7f>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	bool :target:`mp_fits_slong_p<doxid-namespace_sym_engine_1a382c73d423430bf5fb23a4e21c52fc1b>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	unsigned long :target:`mp_get_ui<doxid-namespace_sym_engine_1a555c8de2d5caf23cb78262841bb2722a>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	long :target:`mp_get_si<doxid-namespace_sym_engine_1ab0f708595280bc21d797a24904ea4b98>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	mpz_srcptr :target:`get_mpz_t<doxid-namespace_sym_engine_1acb169d8ebb21558852948e040beda0cc>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	mpz_ptr :target:`get_mpz_t<doxid-namespace_sym_engine_1a07c180bdbfc26209fb379eb710faf052>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	void :target:`mp_pow_ui<doxid-namespace_sym_engine_1ad88d5d3a65e4d0b3c0bc58254a435349>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i, unsigned long n);
	void :target:`mp_gcd<doxid-namespace_sym_engine_1a3005d9f3c376d4055632f7c4d971e488>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	void :target:`mp_and<doxid-namespace_sym_engine_1a79a2012a66570d74865840cd75bdf4ab>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	void :target:`mp_fdiv_r<doxid-namespace_sym_engine_1a35ee9ecb0d78b6e6b32940a18d677f15>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	void :target:`mp_fdiv_q<doxid-namespace_sym_engine_1ac1cd36e164909c5d2da3f23b815f0e32>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	void :target:`mp_cdiv_q<doxid-namespace_sym_engine_1a207b7278422fcea12852d3456bbdc070>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	void :target:`mp_tdiv_q<doxid-namespace_sym_engine_1ae747f4d5392562d92d31f169ee87bbee>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& res, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	void :target:`mp_divexact<doxid-namespace_sym_engine_1a688c792c2eae8035549438dd8b197221>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& q, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	void :target:`mp_lcm<doxid-namespace_sym_engine_1a3c8a3ed69fc9d3920ed0a1ed22bb3b54>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& q, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	void :target:`mp_tdiv_qr<doxid-namespace_sym_engine_1af56eedac5b7cdb1f8982213961719460>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& q, :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& r, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	void :target:`mp_addmul<doxid-namespace_sym_engine_1a84aacea04bc1c6bbe57b85396e8f8792>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& r, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& :target:`get_den<doxid-namespace_sym_engine_1a6c15b70a486bac23e5fa9fa66d297efe>`(const :ref:`rational_class<doxid-namespace_sym_engine_1adf9ea33194708619514d4a54d5fb1614>`& i);
	const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& :target:`get_num<doxid-namespace_sym_engine_1afc00e49ffa8f0db3a4c032db79e68275>`(const :ref:`rational_class<doxid-namespace_sym_engine_1adf9ea33194708619514d4a54d5fb1614>`& i);
	:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& :target:`get_den<doxid-namespace_sym_engine_1aa8138dcd26ea9d5e00c7d1ab4f254ea1>`(:ref:`rational_class<doxid-namespace_sym_engine_1adf9ea33194708619514d4a54d5fb1614>`& i);
	:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& :target:`get_num<doxid-namespace_sym_engine_1a6223ed1e93a47a5dd127ee88919e62b3>`(:ref:`rational_class<doxid-namespace_sym_engine_1adf9ea33194708619514d4a54d5fb1614>`& i);
	mpq_srcptr :target:`get_mpq_t<doxid-namespace_sym_engine_1ae1dd3d3e067a91b7c753c5435b95df51>`(const :ref:`rational_class<doxid-namespace_sym_engine_1adf9ea33194708619514d4a54d5fb1614>`& i);
	void :target:`canonicalize<doxid-namespace_sym_engine_1a67e8659f71d3a2139520243726235460>`(:ref:`rational_class<doxid-namespace_sym_engine_1adf9ea33194708619514d4a54d5fb1614>`& i);
	double :target:`mp_get_d<doxid-namespace_sym_engine_1ae12f00a2de473c1b388089ec6c94f30e>`(const :ref:`rational_class<doxid-namespace_sym_engine_1adf9ea33194708619514d4a54d5fb1614>`& i);
	int :target:`mp_sign<doxid-namespace_sym_engine_1a2b6057ce27960ab2ffd017c279ef7f52>`(const :ref:`rational_class<doxid-namespace_sym_engine_1adf9ea33194708619514d4a54d5fb1614>`& i);
	:ref:`rational_class<doxid-namespace_sym_engine_1adf9ea33194708619514d4a54d5fb1614>` :target:`mp_abs<doxid-namespace_sym_engine_1a04a2422ce35edea89026b68069cecc40>`(const :ref:`rational_class<doxid-namespace_sym_engine_1adf9ea33194708619514d4a54d5fb1614>`& i);
	bool :target:`mp_divisible_p<doxid-namespace_sym_engine_1abe349fec69128c90e45b9c0746d0ca5d>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	void :target:`mp_urandomm<doxid-namespace_sym_engine_1a0655e19c483e40f70e1573c36961bb82>`(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, gmp_randstate_t& t, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	auto :target:`get_mp_t<doxid-namespace_sym_engine_1ab852e9862601f9ece7acf44c2f065d6f>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& x);
	auto :target:`get_mp_t<doxid-namespace_sym_engine_1a04faeda4d8d3c07dc122cb8a586a617b>`(const :ref:`rational_class<doxid-namespace_sym_engine_1adf9ea33194708619514d4a54d5fb1614>`& x);
	int :target:`mp_cmpabs<doxid-namespace_sym_engine_1af0283ee227ae89ac3f706e3e980350c7>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& b);
	std::ostream& :target:`operator<<<doxid-namespace_sym_engine_1a0950028440d8c9dca6a21e2c78e7992a>`(std::ostream& os, const :ref:`fmpz_wrapper<doxid-class_sym_engine_1_1fmpz__wrapper>`& f);
	std::ostream& :target:`operator<<<doxid-namespace_sym_engine_1a7f08c3787b2021c2397ea089f80c7c13>`(std::ostream& os, const :ref:`fmpq_wrapper<doxid-class_sym_engine_1_1fmpq__wrapper>`& f);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`mul<doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& b);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`mul<doxid-namespace_sym_engine_1aa54b8f86703cfc0974fe422df064c864>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& a);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`div<doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& b);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`neg<doxid-namespace_sym_engine_1aeb3fb08495ed47a074a19b8bbacb3db2>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`gcd<doxid-namespace_sym_engine_1a23e7d19677dfaf17bce40fd767860bfd>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& b);
	void :ref:`gcd_ext<doxid-namespace_sym_engine_1abb07748aa4b318e5fb3cfc942dc7dafa>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& g, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& s, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& t, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& b);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`lcm<doxid-namespace_sym_engine_1a6f8ad0107dc645c6ce7249c600385705>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& b);
	int :ref:`mod_inverse<doxid-namespace_sym_engine_1a63b1ae053d374fb5602e1b03c236374c>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& b, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& m);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`mod<doxid-namespace_sym_engine_1a2cee70993b6160daf2870c1a5dc0a532>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& d);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`quotient<doxid-namespace_sym_engine_1a5c23fd54b05baea713287388f27dd7dc>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& d);
	void :ref:`quotient_mod<doxid-namespace_sym_engine_1acde8c189ba1160ef22f427dec4701ded>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& q, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& r, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& b);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`mod_f<doxid-namespace_sym_engine_1a5ac9764d835e82d5fdd4ab4cc36e11e1>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& d);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`quotient_f<doxid-namespace_sym_engine_1a450c28d700cf56dd4aae461c4ccdf602>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& d);
	void :ref:`quotient_mod_f<doxid-namespace_sym_engine_1a88a7c4cbf086869ae2c0c4bc9d181787>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& q, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& r, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& b);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`fibonacci<doxid-namespace_sym_engine_1a4f08f9f6ba6fa0107e98940ca32249ca>`(unsigned long n);
	void :ref:`fibonacci2<doxid-namespace_sym_engine_1a140e1990268bd87d976940e2bb7ae461>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& g, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& s, unsigned long n);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`lucas<doxid-namespace_sym_engine_1a40dcbecd5d0d50dbd7d997a5c800ae81>`(unsigned long n);
	void :ref:`lucas2<doxid-namespace_sym_engine_1aff0d65ef819e6ee1328757e4acf3fb1e>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& g, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& s, unsigned long n);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`binomial<doxid-namespace_sym_engine_1a732c7e01c607133ae54abd236d22d302>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, unsigned long k);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`factorial<doxid-namespace_sym_engine_1ab01d70c771fdccc3c700fcd579272282>`(unsigned long n);
	bool :ref:`divides<doxid-namespace_sym_engine_1a0a30b2ef42d2d4605920f28e80b65e04>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& b);
	int :ref:`probab_prime_p<doxid-namespace_sym_engine_1aa6868f339e15596c02c68e1d02f0a461>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, unsigned reps);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`nextprime<doxid-namespace_sym_engine_1a12011da4b72858d9a6134ba420e4575a>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a);
	int :ref:`factor_lehman_method<doxid-namespace_sym_engine_1adeea01ccd116f965ae18ccc76e43f7b7>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& f, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n);
	int :ref:`factor_pollard_pm1_method<doxid-namespace_sym_engine_1aa62e9ba2232d0f8ec009f760cabf1451>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& f, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, unsigned B, unsigned retries);
	int :ref:`factor_pollard_rho_method<doxid-namespace_sym_engine_1aacc34ee92ca82122fd45ca21233dcd7c>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& f, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, unsigned retries);
	int :ref:`factor<doxid-namespace_sym_engine_1aaf56a84de825e1940da213fd1ae6ff65>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& f, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, double B1 = 1.0);
	int :ref:`factor_trial_division<doxid-namespace_sym_engine_1a9b0de2f5516a819ee48b54f78ab23804>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& f, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n);
	void :ref:`prime_factors<doxid-namespace_sym_engine_1a6079112c36b3646e3a7f3cad0d31bc0b>`(std::vector<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& prime_list, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n);
	void :ref:`prime_factor_multiplicities<doxid-namespace_sym_engine_1a20b4c6e1fb93393611e75807245f6a9b>`(:ref:`map_integer_uint<doxid-namespace_sym_engine_1a868df5e79aca902b778195ed23dc2dc1>`& primes_mul, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n);
	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`bernoulli<doxid-namespace_sym_engine_1ac68c11cddc00aaff59929b12e4f3cc8a>`(unsigned long n);
	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`harmonic<doxid-namespace_sym_engine_1addac89ed5ce6ed7617f90f7473a91214>`(unsigned long n, long m);
	bool :ref:`crt<doxid-namespace_sym_engine_1aad612bc5c47da71cc70cfb11b5ef6344>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& R, const std::vector<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& rem, const std::vector<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& mod);
	bool :ref:`primitive_root<doxid-namespace_sym_engine_1a2628a45ea0c2c4bb536a594b34ad6e3d>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& g, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n);
	void :ref:`primitive_root_list<doxid-namespace_sym_engine_1a969eb0905c46f6486a1b7437aa9d3d63>`(std::vector<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& roots, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`totient<doxid-namespace_sym_engine_1aaaad36e43b863bfbad83ed2d98f01992>`(const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& n);
	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> :ref:`carmichael<doxid-namespace_sym_engine_1ab6a14bcfb29bbbda65be7ac9bd75083d>`(const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& n);
	bool :ref:`multiplicative_order<doxid-namespace_sym_engine_1a78cd7d9fe5866ae1cf7f2adf78940c15>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& o, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& a, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& n);
	int :ref:`legendre<doxid-namespace_sym_engine_1ad78c8d7a599848f762f200bbe99f087e>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n);
	int :ref:`jacobi<doxid-namespace_sym_engine_1a6928d852848970a56a53e5f4482bf528>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n);
	int :ref:`kronecker<doxid-namespace_sym_engine_1a133cec803e9dbba163ce363a413a8a83>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n);
	bool :target:`_is_nthroot_mod_prime_power<doxid-namespace_sym_engine_1add9e145ff366419530dc2b246c22c95b>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& a, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& n, const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& p, const unsigned k);
	bool :ref:`nthroot_mod<doxid-namespace_sym_engine_1a2586dc7e8e62544f230928bd693d3f01>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& root, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& a, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& n, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& mod);
	void :ref:`nthroot_mod_list<doxid-namespace_sym_engine_1a45dbcfb187e36f525090486594bea367>`(std::vector<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& roots, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& a, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& n, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& m);
	bool :ref:`powermod<doxid-namespace_sym_engine_1a0ccb150bd495468ac62cba08268da1ed>`(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& powm, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& a, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& b, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& m);
	void :ref:`powermod_list<doxid-namespace_sym_engine_1ac1ca4e052e1ed84f11dd83c9b32f547e>`(std::vector<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& pows, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& a, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& b, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& m);
	:ref:`vec_integer_class<doxid-namespace_sym_engine_1a6a6944aaf971949e22591955f8aae621>` :ref:`quadratic_residues<doxid-namespace_sym_engine_1a64d29f29e5080fa28f30bda2ae2464b9>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a);
	bool :ref:`is_quad_residue<doxid-namespace_sym_engine_1a57af64eb932629159a77ed9f517bcfab>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& p);
	bool :ref:`is_nth_residue<doxid-namespace_sym_engine_1aab51c36e32ea0584604a1195a85fe6de>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& mod);
	int :ref:`mobius<doxid-namespace_sym_engine_1a310f9f699f41cff255e29fb6013e3f40>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a);
	long :target:`mertens<doxid-namespace_sym_engine_1aa73118b241918d4e37cd71ce122e00f3>`(const unsigned long a);
	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`addnum<doxid-namespace_sym_engine_1ae9e9d3644739d976aa17eef3e19bf2c2>`(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& self, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& other);
	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`subnum<doxid-namespace_sym_engine_1a3a4a9bd6c4580b3775e8852ff02b155b>`(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& self, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& other);
	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`mulnum<doxid-namespace_sym_engine_1a1f7b70ff3cc168dd61eeb32c7c48bf6d>`(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& self, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& other);
	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`divnum<doxid-namespace_sym_engine_1a3a256ad1d1c10f9d7a93523868fd6776>`(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& self, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& other);
	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`pownum<doxid-namespace_sym_engine_1a1ffa1e1c18b0e8f1b02d7e3f0392f336>`(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& self, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& other);
	void :target:`iaddnum<doxid-namespace_sym_engine_1aa81eb1f248002d58420f2f3d8a538533>`(const Ptr<RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>>& self, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& other);
	void :target:`imulnum<doxid-namespace_sym_engine_1a616d02c0103dc3cbe40bce404781963f>`(const Ptr<RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>>& self, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& other);
	void :target:`idivnum<doxid-namespace_sym_engine_1a6e325f75c1591d9e6810f998394ede92>`(const Ptr<RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>>& self, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& other);
	bool :ref:`is_a_Number<doxid-namespace_sym_engine_1a002907d330f94b2da86bcc5ec1f998cd>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);
	bool :ref:`is_number_and_zero<doxid-namespace_sym_engine_1a1998df939d1b28e0356a43f33433d9d3>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);
	:ref:`tribool<doxid-namespace_sym_engine_1aa859e1ef481111b06c165d334b1b2e5e>` :target:`is_zero<doxid-namespace_sym_engine_1a4e7a1d5eaef71963b6d02646573f619d>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`parse<doxid-namespace_sym_engine_1ab85d198cee227b876375a9943d65fd74>`(const std::string& s, bool convert_xor = true);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`parse_old<doxid-namespace_sym_engine_1a4579d5ea86a33db578a1458e101a12f1>`(const std::string& s, bool convert_xor = true);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`pow<doxid-namespace_sym_engine_1adc1ef289ccfd9feaee76c26c9ab02929>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& b);
	void :target:`multinomial_coefficients<doxid-namespace_sym_engine_1a3ccab16f64b5a5456542b30fb3d57c9d>`(unsigned m, unsigned n, :ref:`map_vec_uint<doxid-namespace_sym_engine_1a85a908dfe650be16110572e621f132b1>`& r);
	void :target:`multinomial_coefficients_mpz<doxid-namespace_sym_engine_1af2d45bc95743a12a396cbed0e3f8f96f>`(unsigned m, unsigned n, :ref:`map_vec_mpz<doxid-namespace_sym_engine_1ad7fe7c0dcf09d4e9d3b6dde0f82b3729>`& r);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`exp<doxid-namespace_sym_engine_1a59e3d537409ce295f1a798525ed39df1>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`pow_expand<doxid-namespace_sym_engine_1a4ead015d5b67b409b7b3657eaf821581>`(const RCP<const :ref:`Pow<doxid-class_sym_engine_1_1_pow>`>& self);
	std::string :target:`str<doxid-namespace_sym_engine_1ac39b85018d7d1cad840fe9fe280db53a>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& x);
	std::string :target:`julia_str<doxid-namespace_sym_engine_1a471693a6c59c1551d28fa34e615840ce>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& x);
	std::string :target:`ascii_art<doxid-namespace_sym_engine_1a0abfe74379edd0eacdf5d82909c13b00>`();
	std::string :target:`mathml<doxid-namespace_sym_engine_1a91e0488d784a923e056a4c8a0b04707f>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& x);
	std::string :target:`latex<doxid-namespace_sym_engine_1a7cfb0df63c3e9d3712b4c181fc438ca0>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& x);
	std::string :target:`ccode<doxid-namespace_sym_engine_1a6c2555b6e55b9c3f7a831cb4cab57b77>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& x);
	std::string :target:`c89code<doxid-namespace_sym_engine_1a8717a15127694a0f67f52f5dc56e636f>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& x);
	std::string :target:`c99code<doxid-namespace_sym_engine_1a0972e8d04f606bcb1ec13750b29a62eb>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& x);
	std::string :target:`jscode<doxid-namespace_sym_engine_1abb1e1420e8a4fc541391fe3a2a548f9b>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& x);
	void :ref:`get_num_den<doxid-namespace_sym_engine_1a099fdf0478ebd3ed479f40ddb04f0315>`(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& rat, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& num, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& den);
	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rational<doxid-namespace_sym_engine_1ade8c4c369dcdd2f96fa0c5f98662ef33>`(long n, long d);
	RCP<const :ref:`RealDouble<doxid-class_sym_engine_1_1_real_double>`> :target:`real_double<doxid-namespace_sym_engine_1a9e86938ede6f014b9e6be4f595c25a45>`(double x);
	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :target:`number<doxid-namespace_sym_engine_1acabe1420a50b1ae71d8caca07ca1a54d>`(std::complex<double> x);
	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :target:`number<doxid-namespace_sym_engine_1a73ad4abd1d63b987de90dc0c62338f5c>`(double x);
	void :ref:`expr2poly<doxid-namespace_sym_engine_1a6017105ba64d2df0e0f96bdb1fe2cd29>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& p, :ref:`umap_basic_num<doxid-namespace_sym_engine_1ab37a0fc09c189e2d50880c64ebc5137e>`& syms, :ref:`umap_vec_mpz<doxid-namespace_sym_engine_1a549095f0b878adfa84e66b581bd4e4ef>`& P);
	void :ref:`poly_mul<doxid-namespace_sym_engine_1aab1d7303c130d7ef8cfa033236bbe4b2>`(const :ref:`umap_vec_mpz<doxid-namespace_sym_engine_1a549095f0b878adfa84e66b581bd4e4ef>`& A, const :ref:`umap_vec_mpz<doxid-namespace_sym_engine_1a549095f0b878adfa84e66b581bd4e4ef>`& B, :ref:`umap_vec_mpz<doxid-namespace_sym_engine_1a549095f0b878adfa84e66b581bd4e4ef>`& C);
	bool :target:`needs_symbolic_constants<doxid-namespace_sym_engine_1a93312143972e9e7a768b04c4244fc28c>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& ex, const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& var);
	RCP<const :ref:`SeriesCoeffInterface<doxid-class_sym_engine_1_1_series_coeff_interface>`> :target:`series<doxid-namespace_sym_engine_1a53c9fe8703c2ff99b90a21639af11a2d>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& ex, const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& var, unsigned int prec);
	RCP<const :ref:`SeriesCoeffInterface<doxid-class_sym_engine_1_1_series_coeff_interface>`> :target:`series_invfunc<doxid-namespace_sym_engine_1a5862595377e3d63a020dee5e8c28f4c0>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& ex, const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& var, unsigned int prec);
	RCP<const :ref:`UnivariateSeries<doxid-class_sym_engine_1_1_univariate_series>`> :target:`univariate_series<doxid-namespace_sym_engine_1aeff620e19b3e65b6328fbc21459ed3f5>`(RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`> i, unsigned int prec, const UExprDict& s);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`make_set_union<doxid-namespace_sym_engine_1a5a1f3e4ae17eab4142fbf84a4c7d4860>`(const :ref:`set_set<doxid-namespace_sym_engine_1aa92a7ab2593ea4f2188d882b5b854e0c>`& in);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`set_union<doxid-namespace_sym_engine_1ad84087b2c3be9c7dc348f094297c0820>`(const :ref:`set_set<doxid-namespace_sym_engine_1aa92a7ab2593ea4f2188d882b5b854e0c>`& in);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`set_intersection<doxid-namespace_sym_engine_1ac6cf35a531bcaf92eabd0c9f5e8996f8>`(const :ref:`set_set<doxid-namespace_sym_engine_1aa92a7ab2593ea4f2188d882b5b854e0c>`& in);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`set_complement_helper<doxid-namespace_sym_engine_1abd51a64b1542f0a8432a766a5f09b2e1>`(const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& container, const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& universe);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`set_complement<doxid-namespace_sym_engine_1ac4005fc558a62af163a375964729baa5>`(const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& universe, const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& container);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :ref:`conditionset<doxid-namespace_sym_engine_1a8f4604cdd696c1d067294bc78fec6231>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& sym, const RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`>& condition);
	bool :target:`is_a_Set<doxid-namespace_sym_engine_1a86f756bfa44ed4e5c91e063942d5e77a>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);
	RCP<const :ref:`Reals<doxid-class_sym_engine_1_1_reals>`> :ref:`reals<doxid-namespace_sym_engine_1a20fa00efb8df384d548f63a448a6aeac>`();
	RCP<const :ref:`Integers<doxid-class_sym_engine_1_1_integers>`> :ref:`integers<doxid-namespace_sym_engine_1a3bff051987cba6af42babac321c4d61d>`();
	RCP<const :ref:`EmptySet<doxid-class_sym_engine_1_1_empty_set>`> :ref:`emptyset<doxid-namespace_sym_engine_1a2eb0d05b781ff2948b07f612f83a82bc>`();
	RCP<const :ref:`UniversalSet<doxid-class_sym_engine_1_1_universal_set>`> :ref:`universalset<doxid-namespace_sym_engine_1a5b43a939c87eecd5f2e74793b48850b5>`();
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :ref:`finiteset<doxid-namespace_sym_engine_1abbdc2f1f3c92c9560d10a5b7998e33e3>`(const :ref:`set_basic<doxid-namespace_sym_engine_1a1fa620e6bcd71963ab13f25687d23b63>`& container);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :ref:`interval<doxid-namespace_sym_engine_1a0662566ef725c03a0bfcbff19655d799>`(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& start, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& end, const bool left_open = false, const bool right_open = false);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`imageset<doxid-namespace_sym_engine_1a06b7b3e4580d3fc5229b21dbdfe30068>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& sym, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& expr, const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& base);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`solve_poly_linear<doxid-namespace_sym_engine_1af2a79106227c7b620fc25cc09c8d42d7>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& coeffs, const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& domain);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`solve_poly_quadratic<doxid-namespace_sym_engine_1a0be7045400fe0d9efd7b6d7eb5281802>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& coeffs, const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& domain);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`solve_poly_cubic<doxid-namespace_sym_engine_1a7556c870f7d2f54f75016097d65e40e6>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& coeffs, const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& domain);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`solve_poly_quartic<doxid-namespace_sym_engine_1a457a055abd5435cb30e1f75b0ce2ca45>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& coeffs, const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& domain);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`solve_poly_heuristics<doxid-namespace_sym_engine_1a6ae9a8b6e2b94511df20335428e68dec>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& coeffs, const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& domain);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`get_coeff_basic<doxid-namespace_sym_engine_1a606680d625011965fcb01419130152c6>`(const :ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>`& i);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`get_coeff_basic<doxid-namespace_sym_engine_1a959d780c5cb3ca117b480cc6d3915cef>`(const :ref:`Expression<doxid-class_sym_engine_1_1_expression>`& i);

	template <typename Poly>
	:ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :target:`extract_coeffs<doxid-namespace_sym_engine_1af1a23aa6da4de18508fc3dc15dcd7ae2>`(const RCP<const Poly>& f);

	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`solve_poly<doxid-namespace_sym_engine_1adbe7b8cae0aabc2776ce47a4b66d670b>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& f, const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& sym, const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& domain);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`solve_rational<doxid-namespace_sym_engine_1aa7fac88dd37cd3040c278346f1bffc07>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& f, const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& sym, const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& domain);
	bool :target:`is_a_LinearArgTrigEquation<doxid-namespace_sym_engine_1a89c39c7500e9c42812c10d5ccb0397f3>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b, const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`& x);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`invertComplex<doxid-namespace_sym_engine_1aed618fa204dd30c86aa8e1772c72ed80>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& fX, const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& gY, const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& sym, const RCP<const :ref:`Dummy<doxid-class_sym_engine_1_1_dummy>`>& nD, const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& domain);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`solve_trig<doxid-namespace_sym_engine_1a7457b714a9bb9d200e55b2753eba65be>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& f, const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& sym, const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& domain);
	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> :target:`solve<doxid-namespace_sym_engine_1adfce34e501f5641c5d623cf006b2b636>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& f, const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& sym, const RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`>& domain);
	:ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :target:`linsolve_helper<doxid-namespace_sym_engine_1a4e41044faa7975964a6a0bc248bcac0a>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& b);
	:ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :target:`linsolve<doxid-namespace_sym_engine_1a5963303c5492f9a23105ce6dc5f340cb>`(const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& system, const :ref:`vec_sym<doxid-namespace_sym_engine_1a9fdbd1736332521ea806566039581542>`& syms);
	:ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :target:`linsolve<doxid-namespace_sym_engine_1a8c5fd8eb115ccb91e2928cb4947bc7d1>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& system, const :ref:`vec_sym<doxid-namespace_sym_engine_1a9fdbd1736332521ea806566039581542>`& syms);
	:ref:`set_basic<doxid-namespace_sym_engine_1a1fa620e6bcd71963ab13f25687d23b63>` :target:`get_set_from_vec<doxid-namespace_sym_engine_1a3bcdb3de782b80d6d1b003476f126841>`(const :ref:`vec_sym<doxid-namespace_sym_engine_1a9fdbd1736332521ea806566039581542>`& syms);
	std::pair<:ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`> :target:`linear_eqns_to_matrix<doxid-namespace_sym_engine_1a12b4b4161e68085035da278324b9c9b7>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& equations, const :ref:`vec_sym<doxid-namespace_sym_engine_1a9fdbd1736332521ea806566039581542>`& syms);
	void :target:`csr_matmat_pass1<doxid-namespace_sym_engine_1a35eafd7993fa8931e1237ebe9f62ee70>`(const :ref:`CSRMatrix<doxid-class_sym_engine_1_1_c_s_r_matrix>`& A, const :ref:`CSRMatrix<doxid-class_sym_engine_1_1_c_s_r_matrix>`& B, :ref:`CSRMatrix<doxid-class_sym_engine_1_1_c_s_r_matrix>`& C);
	void :target:`csr_matmat_pass2<doxid-namespace_sym_engine_1a8ca7b86e9985274331842e0cd4e6313f>`(const :ref:`CSRMatrix<doxid-class_sym_engine_1_1_c_s_r_matrix>`& A, const :ref:`CSRMatrix<doxid-class_sym_engine_1_1_c_s_r_matrix>`& B, :ref:`CSRMatrix<doxid-class_sym_engine_1_1_c_s_r_matrix>`& C);
	void :target:`csr_diagonal<doxid-namespace_sym_engine_1a7b77b862f7b1eb804fb71fcbd0712bd5>`(const :ref:`CSRMatrix<doxid-class_sym_engine_1_1_c_s_r_matrix>`& A, :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& D);
	void :target:`csr_scale_rows<doxid-namespace_sym_engine_1a0182a80599401c69f9f562b1c099d117>`(:ref:`CSRMatrix<doxid-class_sym_engine_1_1_c_s_r_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& X);
	void :target:`csr_scale_columns<doxid-namespace_sym_engine_1a435d45ce42422d86c1b36ad317f1900e>`(:ref:`CSRMatrix<doxid-class_sym_engine_1_1_c_s_r_matrix>`& A, const :ref:`DenseMatrix<doxid-class_sym_engine_1_1_dense_matrix>`& X);
	void :target:`csr_binop_csr_canonical<doxid-namespace_sym_engine_1a799245107bd4d43eb318d8fd1f796244>`(const :ref:`CSRMatrix<doxid-class_sym_engine_1_1_c_s_r_matrix>`& A, const :ref:`CSRMatrix<doxid-class_sym_engine_1_1_c_s_r_matrix>`& B, :ref:`CSRMatrix<doxid-class_sym_engine_1_1_c_s_r_matrix>`& C, RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>(&)(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>&, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>&) bin_op);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`xreplace<doxid-namespace_sym_engine_1abf5f5d7f025f8dc0a87fe3f912a94a22>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x, const :ref:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& subs_dict, bool cache = true);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`subs<doxid-namespace_sym_engine_1a05f89c479d5e9f785d0baabc3b41df68>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x, const :ref:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& subs_dict, bool cache = true);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`msubs<doxid-namespace_sym_engine_1a4d151bb8a6d437602ea9df3d32279a8d>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x, const :ref:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& subs_dict, bool cache = true);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`ssubs<doxid-namespace_sym_engine_1ae459921e036f06869a8d53b0f019c0c3>`(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x, const :ref:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& subs_dict, bool cache = true);
	RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`> :ref:`symbol<doxid-namespace_sym_engine_1a1f382b48b9cb214e1017d0e11fd3e6d6>`(const std::string& name);
	RCP<const :ref:`Dummy<doxid-class_sym_engine_1_1_dummy>`> :ref:`dummy<doxid-namespace_sym_engine_1a16ba61741eca9629bbc565bd1ba5ee77>`();
	RCP<const :ref:`Dummy<doxid-class_sym_engine_1_1_dummy>`> :target:`dummy<doxid-namespace_sym_engine_1a6907d6b16813f4436d225f07a2eeaed7>`(const std::string& name);

	template <typename To, typename From>
	To :target:`implicit_cast<doxid-namespace_sym_engine_1afb01d26ef4318eb02328f31e7fdf4a4d>`(const From& f);

	template <typename To, typename From>
	To :target:`down_cast<doxid-namespace_sym_engine_1add2a40ae73e73c8028f2bad9e58a93d0>`(From* f);

	template <typename To, typename From>
	To :target:`down_cast<doxid-namespace_sym_engine_1ac3d55aa0350c355c655976ff4e986606>`(From& f);

	template <typename To, typename From>
	To :target:`numeric_cast<doxid-namespace_sym_engine_1a61a3583f55ed82dda95cb51d010e21ac>`(From f, typename std::enable_if<(std::is_signed<From>::value&&std::is_signed<To>::value)||(std::is_unsigned<From>::value&&std::is_unsigned<To>::value)>::type* = nullptr);

	template <typename To, typename From>
	To :target:`numeric_cast<doxid-namespace_sym_engine_1ac7efc430a53c52eb6dd010765c963f2f>`(From f, typename std::enable_if<(std::is_signed<From>::value&&std::is_unsigned<To>::value)>::type* = nullptr);

	template <typename To, typename From>
	To :target:`numeric_cast<doxid-namespace_sym_engine_1ae3bd323c5446c9a522aa1f2b32d1a3c3>`(From f, typename std::enable_if<(std::is_unsigned<From>::value&&std::is_signed<To>::value)>::type* = nullptr);

	template <typename T, typename... Args>
	RCP<T> :target:`make_rcp<doxid-namespace_sym_engine_1acc5136e8bc192ff8981b41127b5acc53>`(Args&&... args);

	void :target:`preorder_traversal<doxid-namespace_sym_engine_1ab83ec7940ad851065fc6426159a538f9>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b, :ref:`Visitor<doxid-class_sym_engine_1_1_visitor>`& v);
	void :target:`postorder_traversal<doxid-namespace_sym_engine_1ac430ea4710b14ff8dd96a8a0d4792aac>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b, :ref:`Visitor<doxid-class_sym_engine_1_1_visitor>`& v);
	void :target:`preorder_traversal_stop<doxid-namespace_sym_engine_1a99ebc87ef9bba99c9bfb2d5cb1ba2a21>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b, :ref:`StopVisitor<doxid-class_sym_engine_1_1_stop_visitor>`& v);
	void :target:`postorder_traversal_stop<doxid-namespace_sym_engine_1a645d72a8aa2b7e1a5a3f4cde8adfdd9d>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b, :ref:`StopVisitor<doxid-class_sym_engine_1_1_stop_visitor>`& v);
	bool :target:`has_symbol<doxid-namespace_sym_engine_1ae5b0bdd4cc645dd135e7efc9265b2361>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b, const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& x);
	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :target:`coeff<doxid-namespace_sym_engine_1a971b3f93e9fac9acf03b1f4081d5e9a6>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b, const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& x, const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& n);
	:ref:`set_basic<doxid-namespace_sym_engine_1a1fa620e6bcd71963ab13f25687d23b63>` :target:`free_symbols<doxid-namespace_sym_engine_1ae8227a937fb0b2b4692e5d68bd838045>`(const :ref:`MatrixBase<doxid-class_sym_engine_1_1_matrix_base>`& m);
	:ref:`set_basic<doxid-namespace_sym_engine_1a1fa620e6bcd71963ab13f25687d23b63>` :target:`free_symbols<doxid-namespace_sym_engine_1a2f92d8c6b6e4c7d9d6350f09fdb83a0e>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);
	:ref:`set_basic<doxid-namespace_sym_engine_1a1fa620e6bcd71963ab13f25687d23b63>` :target:`function_symbols<doxid-namespace_sym_engine_1a7394a556e2651fe84fcdb3335f89681c>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);
	void :target:`preorder_traversal_local_stop<doxid-namespace_sym_engine_1a9c923106e7ba5c0ab5db8cd2e6b5a994>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b, :ref:`LocalStopVisitor<doxid-class_sym_engine_1_1_local_stop_visitor>`& v);
	unsigned :target:`count_ops<doxid-namespace_sym_engine_1ae1259c23b4bb13c11d5ac1b28760e1be>`(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& a);

	template <typename... Args>
	:ref:`set_basic<doxid-namespace_sym_engine_1a1fa620e6bcd71963ab13f25687d23b63>` :target:`atoms<doxid-namespace_sym_engine_1afd86dcd8ad56d60a3fe63f36c0bc9947>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b);

	} // namespace SymEngine
.. _details-namespace_sym_engine:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Main namespace for :ref:`SymEngine <doxid-namespace_sym_engine>` package.

Global Functions
----------------

.. index:: pair: function; add
.. _doxid-namespace_sym_engine_1ab7ffb6840e5963dbdcff5d457068c42b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> add(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& b)

:ref:`Add <doxid-class_sym_engine_1_1_add>` the :ref:`Basic <doxid-class_sym_engine_1_1_basic>` classes ``a`` and ``b`` This'll return the most appropriate type. For example if ``x`` and ``y`` are symbols,

.. code-block:: cpp

	x + y will return an Add
	x + x will return a Mul (2*x)



.. rubric:: Returns:

``a + b``



.. rubric:: See also:

:ref:`Add <doxid-class_sym_engine_1_1_add>`, :ref:`Mul <doxid-class_sym_engine_1_1_mul>`

.. index:: pair: function; add
.. _doxid-namespace_sym_engine_1a3ceef3b30efccd900ff91d78026f66f6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> add(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& a)

Sums the elements of a vector. For ``n`` elements, this method should be faster than doing ``n-1`` adds.



.. rubric:: Returns:

Sum of the elements of vector ``a``

.. index:: pair: function; sub
.. _doxid-namespace_sym_engine_1a92cd0098b66cad6a0cddcd895430bd65:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> sub(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& b)

Subtracts ``b`` from ``a``



.. rubric:: Returns:

``a - b``

.. index:: pair: function; eq
.. _doxid-namespace_sym_engine_1a2861dd1747fa1416cd6ef023ef08fca5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool eq(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& a, const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b)

Checks equality for ``a`` and ``b``



.. rubric:: Returns:

true if ``a`` equal ``b``

.. index:: pair: function; neq
.. _doxid-namespace_sym_engine_1abf6f7e3994231895bdcb94a8aac5e4fb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool neq(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& a, const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b)

Checks inequality for ``a`` and ``b``



.. rubric:: Returns:

true if ``a`` not equal ``b``

.. index:: pair: function; is_a
.. _doxid-namespace_sym_engine_1a69193ed0d011c3b3f44db8a4f66792a4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class T>
	bool is_a(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b)

Templatised version to check is_a type.

Returns true if ``b`` is exactly of type ``T``. Example: ``is_a<:ref:`Symbol <doxid-class_sym_engine_1_1_symbol>`>(b)`` : true if "b" is of type :ref:`Symbol <doxid-class_sym_engine_1_1_symbol>`

.. index:: pair: function; is_a_sub
.. _doxid-namespace_sym_engine_1a1332ce13683324e522ca2bd00aa9da05:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class T>
	bool is_a_sub(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b)

Returns true if ``b`` is of type T or any of its subclasses. Example:

.. code-block:: cpp

	is_a_sub<Symbol>(b)  // true if `b` is of type `Symbol` or any Symbol's

subclass

.. index:: pair: function; is_same_type
.. _doxid-namespace_sym_engine_1ab40c04716d1563b3df15fc731fef31f6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool is_same_type(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& a, const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b)

Returns true if ``a`` and ``b`` are exactly the same type ``T``.

.. index:: pair: function; operator<<
.. _doxid-namespace_sym_engine_1ad412c21e0a4b4454574243e62b799d61:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::ostream& operator<<(std::ostream& out, const :ref:`SymEngine::Basic<doxid-class_sym_engine_1_1_basic>`& p)

``<<`` Operator

This ``<<`` overloaded function simply calls ``p.__str__``, so it allows any :ref:`Basic <doxid-class_sym_engine_1_1_basic>` type to be printed.

This prints using: ``std::cout << *x;``

.. index:: pair: function; hash_combine_impl
.. _doxid-namespace_sym_engine_1abb24605f1aae71927876f7237e221544:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	void hash_combine_impl(:ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>`& seed, const T& v, typename std::enable_if<std::is_base_of<:ref:`Basic<doxid-class_sym_engine_1_1_basic>`, T>::value>::type* = nullptr)

Templatised version to combine hash.

.. index:: pair: function; hash_combine
.. _doxid-namespace_sym_engine_1a4e6d1d6e0960fa8a827afb3f36c7d30d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class T>
	void hash_combine(:ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>`& seed, const T& v)

Standard ``:ref:`hash_combine() <doxid-namespace_sym_engine_1a4e6d1d6e0960fa8a827afb3f36c7d30d>``` function. Example of usage:

.. code-block:: cpp

	hash_t seed1 = 0;
	hash_combine<std::string>(seed1, "x");
	hash_combine<std::string>(seed1, "y");

You can use it with any :ref:`SymEngine <doxid-namespace_sym_engine>` class:

.. code-block:: cpp

	RCP<const Symbol> x = symbol("x");
	RCP<const Symbol> y = symbol("y");
	hash_t seed2 = 0;
	hash_combine<Basic>(seed2, *x);
	hash_combine<Basic>(seed2, *y);

.. index:: pair: function; to_string
.. _doxid-namespace_sym_engine_1ac5117c22ff62901ca0c6210310816bc1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	std::string to_string(const T& value)

workaround for MinGW bug

.. index:: pair: function; is_a_Atom
.. _doxid-namespace_sym_engine_1a9b828cb692f763f05e2ee78d7cde30f0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool is_a_Atom(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b)

Returns true if ``b`` is an atom. i.e. b.get_args returns an empty vector.

.. index:: pair: function; expand
.. _doxid-namespace_sym_engine_1ac104d13f145416cd18c61b0121017eb6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> expand(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& self, bool deep = true)

Expands ``self``

.. index:: pair: function; is_a_Complex
.. _doxid-namespace_sym_engine_1ac1ffd806385fb08a9a48dd86a60915ee:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool is_a_Complex(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b)



.. rubric:: Returns:

true if 'b' is any of the subclasses of :ref:`ComplexBase <doxid-class_sym_engine_1_1_complex_base>`

.. index:: pair: function; constant
.. _doxid-namespace_sym_engine_1ab69f9746bea991c3a4e96cd6148c2bc1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Constant<doxid-class_sym_engine_1_1_constant>`> constant(const std::string& name)

inline version to return ``:ref:`Constant <doxid-class_sym_engine_1_1_constant>```

.. index:: pair: function; diff
.. _doxid-namespace_sym_engine_1a26b2bfb8312d75ae09a452f96fa4d798:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> diff(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg, const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& x, bool cache)

Differentiation w.r.t symbols.

.. index:: pair: function; sdiff
.. _doxid-namespace_sym_engine_1a314022f742a11a24af260b71b5a59bed:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> sdiff(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x, bool cache)

SymPy style differentiation for non-symbol variables.

SymPy style differentiation w.r.t non-symbols and symbols.

.. index:: pair: function; operator<<
.. _doxid-namespace_sym_engine_1a77686ca34a7fa8292ac3b0ec1f2e8ed8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::ostream& operator<<(std::ostream& out, const :ref:`SymEngine::umap_basic_num<doxid-namespace_sym_engine_1ab37a0fc09c189e2d50880c64ebc5137e>`& d)

print functions

.. index:: pair: function; vec_basic_eq_perm
.. _doxid-namespace_sym_engine_1a9abe8e75a54bd930425a94584942b8e5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool vec_basic_eq_perm(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& a, const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& b)

misc functions

.. index:: pair: function; insert
.. _doxid-namespace_sym_engine_1a8a0fa36d4fbff063bb37b9893c4e6354:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T1, typename T2, typename T3>
	void insert(T1& m, const T2& first, const T3& second)

``insert(m, first, second)`` is equivalent to ``m[first] = second``, just faster, because no default constructor is called on the ``second`` type.

.. index:: pair: function; unordered_eq
.. _doxid-namespace_sym_engine_1af1801d33789e06ee0483d4541ad93be8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class T>
	bool unordered_eq(const T& a, const T& b)

eq function base



.. rubric:: Returns:

true if the two dictionaries ``a`` and ``b`` are equal. Otherwise false

.. index:: pair: function; unified_compare
.. _doxid-namespace_sym_engine_1abd6e504a0004aae351332d69343747fe:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T, typename = enable_if_t<std::is_arithmetic<T>::value                                 or std::is_same<T, integer_class>::value                                 or std::is_same<T, rational_class>::value>>
	int unified_compare(const T& a, const T& b)

compare functions base



.. rubric:: Returns:

-1, 0, 1 for a < b, a == b, a > b

.. index:: pair: function; conjugate
.. _doxid-namespace_sym_engine_1af02f97d82354b66c939ae206f0057edd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> conjugate(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Conjugate <doxid-class_sym_engine_1_1_conjugate>`.

.. index:: pair: function; get_pi_shift
.. _doxid-namespace_sym_engine_1a2fffbf87e0516fd6b0ce4075ab644c07:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool get_pi_shift(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg, const Ptr<RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>>& n, const Ptr<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>& m)



.. rubric:: Returns:

``true`` if ``arg`` is of form ``m + n*pi`` where ``n`` is a rational

.. index:: pair: function; could_extract_minus
.. _doxid-namespace_sym_engine_1a7c057cbaf1e06ea937374d6b9f4e29d8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool could_extract_minus(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& arg)



.. rubric:: Returns:

``true`` if ``arg`` contains a negative sign.

.. index:: pair: function; inverse_lookup
.. _doxid-namespace_sym_engine_1a1b0797760c58c161c8c1bcc45d8e1174:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool inverse_lookup(:ref:`umap_basic_basic<doxid-namespace_sym_engine_1a0c689777bfdf46ba18b4faae696f5fb7>`& d, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& t, const Ptr<RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>>& index)

returns ``true`` if the given argument ``t`` is found in the lookup table ``d``. It also returns the value in ``index``

.. index:: pair: function; sign
.. _doxid-namespace_sym_engine_1a354804803424321111913a4071ca837e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> sign(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Sign <doxid-class_sym_engine_1_1_sign>`.

.. index:: pair: function; floor
.. _doxid-namespace_sym_engine_1a8d243e3a9146c0b0641bced63fc79254:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> floor(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Floor <doxid-class_sym_engine_1_1_floor>` :

.. index:: pair: function; ceiling
.. _doxid-namespace_sym_engine_1a39c4aa170bc123a990149a38662edf99:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> ceiling(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Ceiling <doxid-class_sym_engine_1_1_ceiling>` :

.. index:: pair: function; truncate
.. _doxid-namespace_sym_engine_1aa4550752e62ed1fbf09556fd21536e17:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> truncate(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Truncate <doxid-class_sym_engine_1_1_truncate>` :

.. index:: pair: function; sin
.. _doxid-namespace_sym_engine_1af953f16601b3943d30af2fa898adb593:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> sin(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Sin <doxid-class_sym_engine_1_1_sin>` :

.. index:: pair: function; cos
.. _doxid-namespace_sym_engine_1aa8badea5381f58b2772038bbb7a2fb7f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> cos(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Cos <doxid-class_sym_engine_1_1_cos>` :

.. index:: pair: function; tan
.. _doxid-namespace_sym_engine_1a6e5f23d059e1621822b81d41b8363601:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> tan(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Tan <doxid-class_sym_engine_1_1_tan>` :

.. index:: pair: function; cot
.. _doxid-namespace_sym_engine_1a87b495de4d9aef4e2785d3414e6977aa:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> cot(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Cot <doxid-class_sym_engine_1_1_cot>` :

.. index:: pair: function; csc
.. _doxid-namespace_sym_engine_1aac2883235cc548f08ea23326353e0134:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> csc(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Csc <doxid-class_sym_engine_1_1_csc>` :

.. index:: pair: function; sec
.. _doxid-namespace_sym_engine_1a1a35d45982072e8755a2b415bab129ba:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> sec(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Sec <doxid-class_sym_engine_1_1_sec>` :

.. index:: pair: function; trig_to_sqrt
.. _doxid-namespace_sym_engine_1ad21389676ea6ae1fd15650cf1ab8faf2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> trig_to_sqrt(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)



.. rubric:: Returns:

simplified form if possible

.. index:: pair: function; asin
.. _doxid-namespace_sym_engine_1a690281de28708c8cef39f5ae73611872:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> asin(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`ASin <doxid-class_sym_engine_1_1_a_sin>` :

.. index:: pair: function; acos
.. _doxid-namespace_sym_engine_1a0a98ed704f86e941a5086a46465b2a5b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> acos(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`ACos <doxid-class_sym_engine_1_1_a_cos>` :

.. index:: pair: function; asec
.. _doxid-namespace_sym_engine_1a770eb76ede26403354e4c1ae810c3eb9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> asec(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`ASec <doxid-class_sym_engine_1_1_a_sec>` :

.. index:: pair: function; acsc
.. _doxid-namespace_sym_engine_1a441485eec265e862086e257b24f39619:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> acsc(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`ACsc <doxid-class_sym_engine_1_1_a_csc>` :

.. index:: pair: function; atan
.. _doxid-namespace_sym_engine_1a7f679b584c73a42368d795a4315c0be4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> atan(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`ATan <doxid-class_sym_engine_1_1_a_tan>` :

.. index:: pair: function; acot
.. _doxid-namespace_sym_engine_1aebcb782a4d69ba115c13a331bb5e4cba:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> acot(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`ACot <doxid-class_sym_engine_1_1_a_cot>` :

.. index:: pair: function; atan2
.. _doxid-namespace_sym_engine_1a375f5fe3cb27618965e5ed38d864e7f1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> atan2(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& num, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& den)

Canonicalize :ref:`ATan2 <doxid-class_sym_engine_1_1_a_tan2>` :

.. index:: pair: function; log
.. _doxid-namespace_sym_engine_1aa9a8ead88fadfd214371b73a3a0f34fb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> log(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Returns the Natural Logarithm from argument ``arg``

.. index:: pair: function; log
.. _doxid-namespace_sym_engine_1ab06140084ae1dd503bf62605cbf2362f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> log(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& b)



.. rubric:: Returns:

:ref:`Log <doxid-class_sym_engine_1_1_log>` from argument ``arg`` wrt base ``b``

.. index:: pair: function; lambertw
.. _doxid-namespace_sym_engine_1adb693450f29c2ed151035680ba8d775d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> lambertw(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Create a new :ref:`LambertW <doxid-class_sym_engine_1_1_lambert_w>` instance:

.. index:: pair: function; function_symbol
.. _doxid-namespace_sym_engine_1a27d08ebdbf0bb28eaadc7b2a9c061da6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> function_symbol(std::string name, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Create a new :ref:`FunctionSymbol <doxid-class_sym_engine_1_1_function_symbol>` instance:

.. index:: pair: function; sinh
.. _doxid-namespace_sym_engine_1ae24e5db43005e29f95bf5ecc8789f812:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> sinh(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Sinh <doxid-class_sym_engine_1_1_sinh>` :

.. index:: pair: function; csch
.. _doxid-namespace_sym_engine_1abaf2d363a25f737f66c43961a2c9b189:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> csch(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Csch <doxid-class_sym_engine_1_1_csch>` :

.. index:: pair: function; cosh
.. _doxid-namespace_sym_engine_1a769e7739efb7721d2a0757114e5d5ee8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> cosh(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Cosh <doxid-class_sym_engine_1_1_cosh>` :

.. index:: pair: function; sech
.. _doxid-namespace_sym_engine_1a4f5dc2e3fd1198f985c2dee59fbf848f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> sech(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Sech <doxid-class_sym_engine_1_1_sech>` :

.. index:: pair: function; tanh
.. _doxid-namespace_sym_engine_1a8346955fed5e42cb443055b3264089f3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> tanh(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Tanh <doxid-class_sym_engine_1_1_tanh>` :

.. index:: pair: function; coth
.. _doxid-namespace_sym_engine_1a2a90d704dca9d038d809da659b455502:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> coth(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Coth <doxid-class_sym_engine_1_1_coth>` :

.. index:: pair: function; asinh
.. _doxid-namespace_sym_engine_1a7fa6c02ee6b74e628b3f86bc4f2c610c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> asinh(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`ASinh <doxid-class_sym_engine_1_1_a_sinh>` :

.. index:: pair: function; acsch
.. _doxid-namespace_sym_engine_1a79d78569325a57c3da3ff4de95ff53dd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> acsch(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`ACsch <doxid-class_sym_engine_1_1_a_csch>` :

.. index:: pair: function; acosh
.. _doxid-namespace_sym_engine_1aa077500b689f21abfefa66ee545946e5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> acosh(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`ACosh <doxid-class_sym_engine_1_1_a_cosh>` :

.. index:: pair: function; atanh
.. _doxid-namespace_sym_engine_1a8a6d05bb97e9647eea7ae3c304a8a391:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> atanh(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`ATanh <doxid-class_sym_engine_1_1_a_tanh>` :

.. index:: pair: function; acoth
.. _doxid-namespace_sym_engine_1a6d8a501171dfc0dae4f98450268d0ab3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> acoth(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`ACoth <doxid-class_sym_engine_1_1_a_coth>` :

.. index:: pair: function; asech
.. _doxid-namespace_sym_engine_1adb505bfa00177f523f101090335f6ca0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> asech(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`ASech <doxid-class_sym_engine_1_1_a_sech>` :

.. index:: pair: function; kronecker_delta
.. _doxid-namespace_sym_engine_1ae256c31b33e601a3c0b163437a85ad75:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> kronecker_delta(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& i, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& j)

Canonicalize :ref:`KroneckerDelta <doxid-class_sym_engine_1_1_kronecker_delta>` :

.. index:: pair: function; levi_civita
.. _doxid-namespace_sym_engine_1a9eeaa7b8ba0e75049685edc1cd53dbef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> levi_civita(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& arg)

Canonicalize :ref:`LeviCivita <doxid-class_sym_engine_1_1_levi_civita>` :

.. index:: pair: function; zeta
.. _doxid-namespace_sym_engine_1a227ea1d94f9ac72c4051a247ac54b1d1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> zeta(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& s, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a)

Create a new :ref:`Zeta <doxid-class_sym_engine_1_1_zeta>` instance:

.. index:: pair: function; dirichlet_eta
.. _doxid-namespace_sym_engine_1aad833a78351ba7b22249695b5d1e7a2b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> dirichlet_eta(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& s)

Create a new :ref:`Dirichlet_eta <doxid-class_sym_engine_1_1_dirichlet__eta>` instance:

.. index:: pair: function; erf
.. _doxid-namespace_sym_engine_1ac51d8c7a02041f2c0a6daa8905e20b0d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> erf(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Erf <doxid-class_sym_engine_1_1_erf>` :

.. index:: pair: function; erfc
.. _doxid-namespace_sym_engine_1a8f9a1131b360ff67d1e9d61c142bd895:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> erfc(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Erfc <doxid-class_sym_engine_1_1_erfc>` :

.. index:: pair: function; gamma
.. _doxid-namespace_sym_engine_1a5427bd85fc080a17d0718a7d97353a49:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> gamma(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Gamma <doxid-class_sym_engine_1_1_gamma>` :

.. index:: pair: function; lowergamma
.. _doxid-namespace_sym_engine_1aa1e95e77c5692e8579aaa092f2cd951c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> lowergamma(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& s, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x)

Canonicalize :ref:`LowerGamma <doxid-class_sym_engine_1_1_lower_gamma>` :

.. index:: pair: function; uppergamma
.. _doxid-namespace_sym_engine_1afd4e5ab0bad75561a69caf9036301083:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> uppergamma(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& s, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x)

Canonicalize :ref:`UpperGamma <doxid-class_sym_engine_1_1_upper_gamma>` :

.. index:: pair: function; loggamma
.. _doxid-namespace_sym_engine_1aa65191cb3b4d8841ce3cfca888f730ef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> loggamma(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`LogGamma <doxid-class_sym_engine_1_1_log_gamma>` :

.. index:: pair: function; beta
.. _doxid-namespace_sym_engine_1a2203e9e82d8b995e95ba5ce0efe5fe0c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> beta(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& y)

Canonicalize :ref:`Beta <doxid-class_sym_engine_1_1_beta>` :

.. index:: pair: function; polygamma
.. _doxid-namespace_sym_engine_1a1fd201b852a258d731b82bada47a188b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> polygamma(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& n_, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x_)

Canonicalize :ref:`PolyGamma <doxid-class_sym_engine_1_1_poly_gamma>`.

.. index:: pair: function; abs
.. _doxid-namespace_sym_engine_1a3deecb23288ff261b9534dbe7291cf7b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> abs(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)

Canonicalize :ref:`Abs <doxid-class_sym_engine_1_1_abs>` :

.. index:: pair: function; max
.. _doxid-namespace_sym_engine_1a266cbfda523325a93b19b5dd2f113862:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> max(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& arg)

Canonicalize :ref:`Max <doxid-class_sym_engine_1_1_max>` :

.. index:: pair: function; min
.. _doxid-namespace_sym_engine_1ac173c8dd31830a8392c91aa7143b0428:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> min(const :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>`& arg)

Canonicalize :ref:`Min <doxid-class_sym_engine_1_1_min>` :

.. index:: pair: function; sqrt
.. _doxid-namespace_sym_engine_1a3fed2bc2a99f9d70b4dd04ae0320d32b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> sqrt(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)



.. rubric:: Returns:

``sqrt`` of the ``arg``

square root of ``x``

.. index:: pair: function; cbrt
.. _doxid-namespace_sym_engine_1a10e79c5e6be1793c03aa75e514d2b6ae:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> cbrt(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& arg)



.. rubric:: Returns:

``cbrt`` of the ``arg``

cube root of ``x``

.. index:: pair: function; isqrt
.. _doxid-namespace_sym_engine_1a6791cec0bb0ba67bc5cb8b42047a0b46:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> isqrt(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n)

:ref:`Integer <doxid-class_sym_engine_1_1_integer>` Square root.

.. index:: pair: function; iabs
.. _doxid-namespace_sym_engine_1adfe12999fb4a97e343fa0a648b888f2f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> iabs(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n)

:ref:`Integer <doxid-class_sym_engine_1_1_integer>` Absolute value.

.. index:: pair: function; i_nth_root
.. _doxid-namespace_sym_engine_1ac2e88d0ec439019bac8b1273128a1c41:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int i_nth_root(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& r, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, unsigned long int n)

:ref:`Integer <doxid-class_sym_engine_1_1_integer>` nth root.

.. index:: pair: function; perfect_square
.. _doxid-namespace_sym_engine_1a68cf186a0ab35fac048f9b57dc848f17:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool perfect_square(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n)

Perfect Square.

.. index:: pair: function; perfect_power
.. _doxid-namespace_sym_engine_1a9398857a7e156b26f4239c041b6127a4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool perfect_power(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n)

Perfect Square.

.. index:: pair: function; integer
.. _doxid-namespace_sym_engine_1a17c4fb234fb676cbdcd3e5b19a559356:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	std::enable_if<std::is_integral<T>::value, RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>::type integer(T i)



.. rubric:: Returns:

RCP<const Integer> from integral values

.. index:: pair: function; integer
.. _doxid-namespace_sym_engine_1a54ff575a351c8a2b58feb7b4f8cb0d39:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> integer(:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>` i)



.. rubric:: Returns:

RCP<const Integer> from integer_class

.. index:: pair: function; Eq
.. _doxid-namespace_sym_engine_1abb176b90171ba213e14a1dca70b890ab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> Eq(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& lhs)

Returns the canonicalized :ref:`Equality <doxid-class_sym_engine_1_1_equality>` object from a single argument.

.. index:: pair: function; Eq
.. _doxid-namespace_sym_engine_1a2a4962a72c0af004b4c06b4eb660e3e1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> Eq(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& lhs, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& rhs)

Returns the canonicalized :ref:`Equality <doxid-class_sym_engine_1_1_equality>` object from the two arguments.

.. index:: pair: function; Ne
.. _doxid-namespace_sym_engine_1ada7b9196d7dbcd0611640a60bbdaeba9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> Ne(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& lhs, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& rhs)

Returns the canonicalized :ref:`Unequality <doxid-class_sym_engine_1_1_unequality>` object from the arguments.

.. index:: pair: function; Le
.. _doxid-namespace_sym_engine_1aac206b17fc30b4dc889c5ebc98e2c39f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> Le(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& lhs, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& rhs)

Returns the canonicalized :ref:`LessThan <doxid-class_sym_engine_1_1_less_than>` object from the arguments.

.. index:: pair: function; Ge
.. _doxid-namespace_sym_engine_1a0a7185d0fb25140df9797a462bde11c6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> Ge(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& lhs, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& rhs)

Convenience function returning :ref:`LessThan <doxid-class_sym_engine_1_1_less_than>` object.

.. index:: pair: function; Lt
.. _doxid-namespace_sym_engine_1a2aadb3a6ac5bc33af97dd42ea096276d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> Lt(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& lhs, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& rhs)

Returns the canonicalized :ref:`StrictLessThan <doxid-class_sym_engine_1_1_strict_less_than>` object from the arguments.

.. index:: pair: function; Gt
.. _doxid-namespace_sym_engine_1ada2f0b220c4770c1c1fbbe96dfcf7af8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`> Gt(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& lhs, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& rhs)

Convenience function returning :ref:`StrictLessThan <doxid-class_sym_engine_1_1_strict_less_than>` object.

.. index:: pair: function; monomial_mul
.. _doxid-namespace_sym_engine_1a472e32d743cd0f5c727ee7366646ee32:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void monomial_mul(const :ref:`vec_int<doxid-namespace_sym_engine_1a92041f53e44e3e095d1eb2a8300a69b3>`& A, const :ref:`vec_int<doxid-namespace_sym_engine_1a92041f53e44e3e095d1eb2a8300a69b3>`& B, :ref:`vec_int<doxid-namespace_sym_engine_1a92041f53e44e3e095d1eb2a8300a69b3>`& C)

Monomial multiplication.

.. index:: pair: function; operator""_z
.. _doxid-namespace_sym_engine_1_1literals_1a618f35c7b256be9b4e0109a60bf80f4c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`integer_class<doxid-namespace_sym_engine_1afb6cfb442813d33bbbe66d6b42d181ef>` operator""_z(const char* str)

Literal for creating multiple precision integers.

.. index:: pair: function; mul
.. _doxid-namespace_sym_engine_1a896396e3101c37df65e7a2b46fc7cadd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> mul(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& b)

Multiplication.

.. index:: pair: function; div
.. _doxid-namespace_sym_engine_1a16a102cafaa2be38a4fd095789b1a806:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> div(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& b)

Division.

.. index:: pair: function; neg
.. _doxid-namespace_sym_engine_1aeb3fb08495ed47a074a19b8bbacb3db2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> neg(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a)

Negation.

.. index:: pair: function; gcd
.. _doxid-namespace_sym_engine_1a23e7d19677dfaf17bce40fd767860bfd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> gcd(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& b)

Greatest Common Divisor.

.. index:: pair: function; gcd_ext
.. _doxid-namespace_sym_engine_1abb07748aa4b318e5fb3cfc942dc7dafa:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void gcd_ext(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& g, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& s, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& t, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& b)

Extended GCD.

.. index:: pair: function; lcm
.. _doxid-namespace_sym_engine_1a6f8ad0107dc645c6ce7249c600385705:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> lcm(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& b)

Least Common Multiple.

.. index:: pair: function; mod_inverse
.. _doxid-namespace_sym_engine_1a63b1ae053d374fb5602e1b03c236374c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int mod_inverse(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& b, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& m)

inverse modulo

.. index:: pair: function; mod
.. _doxid-namespace_sym_engine_1a2cee70993b6160daf2870c1a5dc0a532:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> mod(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& d)

modulo round toward zero

.. index:: pair: function; quotient
.. _doxid-namespace_sym_engine_1a5c23fd54b05baea713287388f27dd7dc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> quotient(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& d)



.. rubric:: Returns:

quotient round toward zero when ``n`` is divided by ``d``

.. index:: pair: function; quotient_mod
.. _doxid-namespace_sym_engine_1acde8c189ba1160ef22f427dec4701ded:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void quotient_mod(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& q, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& r, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& b)



.. rubric:: Returns:

modulo and quotient round toward zero

.. index:: pair: function; mod_f
.. _doxid-namespace_sym_engine_1a5ac9764d835e82d5fdd4ab4cc36e11e1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> mod_f(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& d)

modulo round toward -inf

.. index:: pair: function; quotient_f
.. _doxid-namespace_sym_engine_1a450c28d700cf56dd4aae461c4ccdf602:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> quotient_f(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& d)



.. rubric:: Returns:

quotient round toward -inf when ``n`` is divided by ``d``

.. index:: pair: function; quotient_mod_f
.. _doxid-namespace_sym_engine_1a88a7c4cbf086869ae2c0c4bc9d181787:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void quotient_mod_f(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& q, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& r, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& b)



.. rubric:: Returns:

modulo and quotient round toward -inf

.. index:: pair: function; fibonacci
.. _doxid-namespace_sym_engine_1a4f08f9f6ba6fa0107e98940ca32249ca:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> fibonacci(unsigned long n)

Fibonacci number.

.. index:: pair: function; fibonacci2
.. _doxid-namespace_sym_engine_1a140e1990268bd87d976940e2bb7ae461:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void fibonacci2(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& g, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& s, unsigned long n)

Fibonacci n and n-1.

.. index:: pair: function; lucas
.. _doxid-namespace_sym_engine_1a40dcbecd5d0d50dbd7d997a5c800ae81:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> lucas(unsigned long n)

Lucas number.

.. index:: pair: function; lucas2
.. _doxid-namespace_sym_engine_1aff0d65ef819e6ee1328757e4acf3fb1e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void lucas2(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& g, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& s, unsigned long n)

Lucas number n and n-1.

.. index:: pair: function; binomial
.. _doxid-namespace_sym_engine_1a732c7e01c607133ae54abd236d22d302:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> binomial(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, unsigned long k)

Binomial Coefficient.

.. index:: pair: function; factorial
.. _doxid-namespace_sym_engine_1ab01d70c771fdccc3c700fcd579272282:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> factorial(unsigned long n)

Factorial.

.. index:: pair: function; divides
.. _doxid-namespace_sym_engine_1a0a30b2ef42d2d4605920f28e80b65e04:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool divides(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& b)



.. rubric:: Returns:

true if ``b`` divides ``a``

.. index:: pair: function; probab_prime_p
.. _doxid-namespace_sym_engine_1aa6868f339e15596c02c68e1d02f0a461:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int probab_prime_p(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, unsigned reps)

Probabilistic Prime.

.. index:: pair: function; nextprime
.. _doxid-namespace_sym_engine_1a12011da4b72858d9a6134ba420e4575a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> nextprime(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a)



.. rubric:: Returns:

next prime after ``a``

.. index:: pair: function; factor_lehman_method
.. _doxid-namespace_sym_engine_1adeea01ccd116f965ae18ccc76e43f7b7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int factor_lehman_method(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& f, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n)

Factor using lehman's methods.

.. index:: pair: function; factor_pollard_pm1_method
.. _doxid-namespace_sym_engine_1aa62e9ba2232d0f8ec009f760cabf1451:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int factor_pollard_pm1_method(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& f, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, unsigned B, unsigned retries)

Factor using Pollard's p-1 method.

.. index:: pair: function; factor_pollard_rho_method
.. _doxid-namespace_sym_engine_1aacc34ee92ca82122fd45ca21233dcd7c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int factor_pollard_rho_method(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& f, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, unsigned retries)

Factor using Pollard's rho methods.

.. index:: pair: function; factor
.. _doxid-namespace_sym_engine_1aaf56a84de825e1940da213fd1ae6ff65:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int factor(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& f, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, double B1 = 1.0)

Factorization



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- B1

		- is only used when ``n`` is factored using gmp-ecm

.. index:: pair: function; factor_trial_division
.. _doxid-namespace_sym_engine_1a9b0de2f5516a819ee48b54f78ab23804:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int factor_trial_division(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& f, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n)

Factor using trial division.



.. rubric:: Returns:

1 if a non-trivial factor is found, otherwise 0.

.. index:: pair: function; prime_factors
.. _doxid-namespace_sym_engine_1a6079112c36b3646e3a7f3cad0d31bc0b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void prime_factors(std::vector<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& prime_list, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n)

Find prime factors of ``n``

.. index:: pair: function; prime_factor_multiplicities
.. _doxid-namespace_sym_engine_1a20b4c6e1fb93393611e75807245f6a9b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void prime_factor_multiplicities(:ref:`map_integer_uint<doxid-namespace_sym_engine_1a868df5e79aca902b778195ed23dc2dc1>`& primes_mul, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n)

Find multiplicities of prime factors of ``n``

.. index:: pair: function; bernoulli
.. _doxid-namespace_sym_engine_1ac68c11cddc00aaff59929b12e4f3cc8a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> bernoulli(unsigned long n)

Computes the Bernoulli number Bn as an exact fraction, for an isolated integer n

.. index:: pair: function; harmonic
.. _doxid-namespace_sym_engine_1addac89ed5ce6ed7617f90f7473a91214:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> harmonic(unsigned long n, long m)

Computes the sum of the inverses of the first perfect mth powers.

.. index:: pair: function; crt
.. _doxid-namespace_sym_engine_1aad612bc5c47da71cc70cfb11b5ef6344:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool crt(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& R, const std::vector<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& rem, const std::vector<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& mod)

Chinese remainder function. Return true when a solution exists.

.. index:: pair: function; primitive_root
.. _doxid-namespace_sym_engine_1a2628a45ea0c2c4bb536a594b34ad6e3d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool primitive_root(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& g, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n)

Computes a primitive root. Returns false if no primitive root exists.

.. index:: pair: function; primitive_root_list
.. _doxid-namespace_sym_engine_1a969eb0905c46f6486a1b7437aa9d3d63:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void primitive_root_list(std::vector<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& roots, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n)

Computes all primitive roots less than n. Returns false if no primitive root exists.

.. index:: pair: function; totient
.. _doxid-namespace_sym_engine_1aaaad36e43b863bfbad83ed2d98f01992:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> totient(const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& n)

Euler's totient function.

.. index:: pair: function; carmichael
.. _doxid-namespace_sym_engine_1ab6a14bcfb29bbbda65be7ac9bd75083d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`> carmichael(const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& n)

Carmichael function.

.. index:: pair: function; multiplicative_order
.. _doxid-namespace_sym_engine_1a78cd7d9fe5866ae1cf7f2adf78940c15:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool multiplicative_order(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& o, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& a, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& n)

Multiplicative order. Return false if order does not exist.

.. index:: pair: function; legendre
.. _doxid-namespace_sym_engine_1ad78c8d7a599848f762f200bbe99f087e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int legendre(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n)

Legendre :ref:`Function <doxid-class_sym_engine_1_1_function>`.

.. index:: pair: function; jacobi
.. _doxid-namespace_sym_engine_1a6928d852848970a56a53e5f4482bf528:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int jacobi(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n)

Jacobi :ref:`Function <doxid-class_sym_engine_1_1_function>`.

.. index:: pair: function; kronecker
.. _doxid-namespace_sym_engine_1a133cec803e9dbba163ce363a413a8a83:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int kronecker(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n)

Kronecker :ref:`Function <doxid-class_sym_engine_1_1_function>`.

.. index:: pair: function; nthroot_mod
.. _doxid-namespace_sym_engine_1a2586dc7e8e62544f230928bd693d3f01:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool nthroot_mod(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& root, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& a, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& n, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& mod)

A solution to x\*\*n == a mod m. Return false if none exists.

.. index:: pair: function; nthroot_mod_list
.. _doxid-namespace_sym_engine_1a45dbcfb187e36f525090486594bea367:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void nthroot_mod_list(std::vector<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& roots, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& a, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& n, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& m)

All Solutions to x\*\*n == a mod m. Return false if none exists.

.. index:: pair: function; powermod
.. _doxid-namespace_sym_engine_1a0ccb150bd495468ac62cba08268da1ed:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool powermod(const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& powm, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& a, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& b, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& m)

A solution to x\*\*s == a\*\*r mod m where b = r / s. Return false if none exists.

.. index:: pair: function; powermod_list
.. _doxid-namespace_sym_engine_1ac1ca4e052e1ed84f11dd83c9b32f547e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void powermod_list(std::vector<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& pows, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& a, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& b, const RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>& m)

All solutions to x\*\*s == a\*\*r mod m where b = r / s. Return false if none exists.

.. index:: pair: function; quadratic_residues
.. _doxid-namespace_sym_engine_1a64d29f29e5080fa28f30bda2ae2464b9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`vec_integer_class<doxid-namespace_sym_engine_1a6a6944aaf971949e22591955f8aae621>` quadratic_residues(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a)

Finds all Quadratic Residues of a Positive :ref:`Integer <doxid-class_sym_engine_1_1_integer>`.

.. index:: pair: function; is_quad_residue
.. _doxid-namespace_sym_engine_1a57af64eb932629159a77ed9f517bcfab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool is_quad_residue(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& p)

Returns true if 'a' is a quadratic residue of 'p'.

.. index:: pair: function; is_nth_residue
.. _doxid-namespace_sym_engine_1aab51c36e32ea0584604a1195a85fe6de:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool is_nth_residue(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& n, const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& mod)

Returns true if 'a' is a nth power residue of 'mod'.

.. index:: pair: function; mobius
.. _doxid-namespace_sym_engine_1a310f9f699f41cff255e29fb6013e3f40:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int mobius(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& a)

Mobius :ref:`Function <doxid-class_sym_engine_1_1_function>`.

.. index:: pair: function; addnum
.. _doxid-namespace_sym_engine_1ae9e9d3644739d976aa17eef3e19bf2c2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> addnum(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& self, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& other)

:ref:`Add <doxid-class_sym_engine_1_1_add>` ``self`` and ``other``

.. index:: pair: function; subnum
.. _doxid-namespace_sym_engine_1a3a4a9bd6c4580b3775e8852ff02b155b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> subnum(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& self, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& other)

Subtract ``self`` and ``other``

.. index:: pair: function; mulnum
.. _doxid-namespace_sym_engine_1a1f7b70ff3cc168dd61eeb32c7c48bf6d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> mulnum(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& self, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& other)

Multiply ``self`` and ``other``

.. index:: pair: function; divnum
.. _doxid-namespace_sym_engine_1a3a256ad1d1c10f9d7a93523868fd6776:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> divnum(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& self, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& other)

Divide ``self`` and ``other``

.. index:: pair: function; pownum
.. _doxid-namespace_sym_engine_1a1ffa1e1c18b0e8f1b02d7e3f0392f336:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> pownum(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& self, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& other)

Raise ``self`` to power ``other``

.. index:: pair: function; is_a_Number
.. _doxid-namespace_sym_engine_1a002907d330f94b2da86bcc5ec1f998cd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool is_a_Number(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b)



.. rubric:: Returns:

true if 'b' is a :ref:`Number <doxid-class_sym_engine_1_1_number>` or any of its subclasses

.. index:: pair: function; is_number_and_zero
.. _doxid-namespace_sym_engine_1a1998df939d1b28e0356a43f33433d9d3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool is_number_and_zero(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& b)



.. rubric:: Returns:

true if 'b' is a :ref:`Number <doxid-class_sym_engine_1_1_number>` and is zero

.. index:: pair: function; pow
.. _doxid-namespace_sym_engine_1adc1ef289ccfd9feaee76c26c9ab02929:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> pow(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& a, const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& b)



.. rubric:: Returns:

:ref:`Pow <doxid-class_sym_engine_1_1_pow>` from ``a`` and ``b``

.. index:: pair: function; exp
.. _doxid-namespace_sym_engine_1a59e3d537409ce295f1a798525ed39df1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> exp(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x)

Returns the natural exponential function ``E**x = pow(E, x)``

.. index:: pair: function; pow_expand
.. _doxid-namespace_sym_engine_1a4ead015d5b67b409b7b3657eaf821581:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> pow_expand(const RCP<const :ref:`Pow<doxid-class_sym_engine_1_1_pow>`>& self)

Expand the power expression.

.. index:: pair: function; get_num_den
.. _doxid-namespace_sym_engine_1a099fdf0478ebd3ed479f40ddb04f0315:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void get_num_den(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& rat, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& num, const Ptr<RCP<const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`>>& den)

returns the ``num`` and ``den`` of rational ``rat`` as ``RCP<const :ref:`Integer <doxid-class_sym_engine_1_1_integer>`>``

.. index:: pair: function; rational
.. _doxid-namespace_sym_engine_1ade8c4c369dcdd2f96fa0c5f98662ef33:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> rational(long n, long d)

convenience creator from two longs

.. index:: pair: function; expr2poly
.. _doxid-namespace_sym_engine_1a6017105ba64d2df0e0f96bdb1fe2cd29:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void expr2poly(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& p, :ref:`umap_basic_num<doxid-namespace_sym_engine_1ab37a0fc09c189e2d50880c64ebc5137e>`& syms, :ref:`umap_vec_mpz<doxid-namespace_sym_engine_1a549095f0b878adfa84e66b581bd4e4ef>`& P)

Converts expression ``p`` into a polynomial ``P``, with symbols ``sym``

.. index:: pair: function; poly_mul
.. _doxid-namespace_sym_engine_1aab1d7303c130d7ef8cfa033236bbe4b2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void poly_mul(const :ref:`umap_vec_mpz<doxid-namespace_sym_engine_1a549095f0b878adfa84e66b581bd4e4ef>`& A, const :ref:`umap_vec_mpz<doxid-namespace_sym_engine_1a549095f0b878adfa84e66b581bd4e4ef>`& B, :ref:`umap_vec_mpz<doxid-namespace_sym_engine_1a549095f0b878adfa84e66b581bd4e4ef>`& C)

Multiply two polynomials: ``C = A*B``

.. index:: pair: function; conditionset
.. _doxid-namespace_sym_engine_1a8f4604cdd696c1d067294bc78fec6231:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> conditionset(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& sym, const RCP<const :ref:`Boolean<doxid-class_sym_engine_1_1_boolean>`>& condition)



.. rubric:: Returns:

RCP<const Set>

.. index:: pair: function; reals
.. _doxid-namespace_sym_engine_1a20fa00efb8df384d548f63a448a6aeac:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Reals<doxid-class_sym_engine_1_1_reals>`> reals()



.. rubric:: Returns:

RCP<const Reals>

.. index:: pair: function; integers
.. _doxid-namespace_sym_engine_1a3bff051987cba6af42babac321c4d61d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Integers<doxid-class_sym_engine_1_1_integers>`> integers()



.. rubric:: Returns:

RCP<const Reals>

.. index:: pair: function; emptyset
.. _doxid-namespace_sym_engine_1a2eb0d05b781ff2948b07f612f83a82bc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`EmptySet<doxid-class_sym_engine_1_1_empty_set>`> emptyset()



.. rubric:: Returns:

RCP<const EmptySet>

.. index:: pair: function; universalset
.. _doxid-namespace_sym_engine_1a5b43a939c87eecd5f2e74793b48850b5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`UniversalSet<doxid-class_sym_engine_1_1_universal_set>`> universalset()



.. rubric:: Returns:

RCP<const UniversalSet>

.. index:: pair: function; finiteset
.. _doxid-namespace_sym_engine_1abbdc2f1f3c92c9560d10a5b7998e33e3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> finiteset(const :ref:`set_basic<doxid-namespace_sym_engine_1a1fa620e6bcd71963ab13f25687d23b63>`& container)



.. rubric:: Returns:

RCP<const Set>

.. index:: pair: function; interval
.. _doxid-namespace_sym_engine_1a0662566ef725c03a0bfcbff19655d799:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Set<doxid-class_sym_engine_1_1_set>`> interval(const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& start, const RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>& end, const bool left_open = false, const bool right_open = false)



.. rubric:: Returns:

RCP<const Set>

.. index:: pair: function; xreplace
.. _doxid-namespace_sym_engine_1abf5f5d7f025f8dc0a87fe3f912a94a22:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> xreplace(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x, const :ref:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& subs_dict, bool cache = true)

Mappings in the ``subs_dict`` are applied to the expression tree of ``x``

.. index:: pair: function; msubs
.. _doxid-namespace_sym_engine_1a4d151bb8a6d437602ea9df3d32279a8d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> msubs(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x, const :ref:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& subs_dict, bool cache = true)

:ref:`Subs <doxid-class_sym_engine_1_1_subs>` which treat f(t) and Derivative(f(t), t) as separate variables.

.. index:: pair: function; ssubs
.. _doxid-namespace_sym_engine_1ae459921e036f06869a8d53b0f019c0c3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> ssubs(const RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`>& x, const :ref:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& subs_dict, bool cache = true)

SymPy compatible subs.

.. index:: pair: function; symbol
.. _doxid-namespace_sym_engine_1a1f382b48b9cb214e1017d0e11fd3e6d6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`> symbol(const std::string& name)

inline version to return ``:ref:`Symbol <doxid-class_sym_engine_1_1_symbol>```

.. index:: pair: function; dummy
.. _doxid-namespace_sym_engine_1a16ba61741eca9629bbc565bd1ba5ee77:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Dummy<doxid-class_sym_engine_1_1_dummy>`> dummy()

inline version to return ``:ref:`Dummy <doxid-class_sym_engine_1_1_dummy>```

