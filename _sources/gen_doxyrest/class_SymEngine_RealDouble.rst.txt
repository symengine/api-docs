.. index:: pair: class; SymEngine::RealDouble
.. _doxid-class_sym_engine_1_1_real_double:

class SymEngine::RealDouble
===========================

.. toctree::
	:hidden:

Overview
~~~~~~~~

:ref:`RealDouble <doxid-class_sym_engine_1_1_real_double>` Class to hold double values. :ref:`More...<details-class_sym_engine_1_1_real_double>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <real_double.h>
	
	class RealDouble: public :ref:`SymEngine::Number<doxid-class_sym_engine_1_1_number>` {
	public:
		// fields
	
		double :target:`i<doxid-class_sym_engine_1_1_real_double_1af33535da7ca0d8888ef0292c2c7f12de>`;

		// construction
	
		:ref:`RealDouble<doxid-class_sym_engine_1_1_real_double_1aecb8d59da57bedd29809cea4fa2e30fb>`(double i);

		// methods
	
		virtual :ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` :ref:`__hash__<doxid-class_sym_engine_1_1_real_double_1addc201ec0ac22bcc8f19181c1f9797a0>`() const;
		virtual bool :ref:`__eq__<doxid-class_sym_engine_1_1_real_double_1a8b93b9484549dde8bc88e1c92ad6c66c>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		virtual int :ref:`compare<doxid-class_sym_engine_1_1_real_double_1a773d3ec13efa3801fffc92441ae17351>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		virtual bool :ref:`is_positive<doxid-class_sym_engine_1_1_real_double_1aa889931e1dade5a4c29665cfcd198922>`() const;
		virtual bool :ref:`is_negative<doxid-class_sym_engine_1_1_real_double_1a6468e0694ac04980e96e5f0856a4648e>`() const;
		double :ref:`as_double<doxid-class_sym_engine_1_1_real_double_1a680c9526aa0cf757ffbee75238a48f4a>`() const;
		virtual bool :ref:`is_exact<doxid-class_sym_engine_1_1_real_double_1a60420f2c8395f0b67a2963c752b6e3d3>`() const;
		virtual :ref:`Evaluate<doxid-class_sym_engine_1_1_evaluate>`& :ref:`get_eval<doxid-class_sym_engine_1_1_real_double_1a26da416cdb037d3afd8dc5ef5a343ef6>`() const;
		virtual bool :ref:`is_zero<doxid-class_sym_engine_1_1_real_double_1a8c97467c3089b1ebcdc00d1c64fcdf5d>`() const;
		virtual bool :ref:`is_one<doxid-class_sym_engine_1_1_real_double_1a7294106a689856d66ebc0a83c1129561>`() const;
		virtual bool :ref:`is_minus_one<doxid-class_sym_engine_1_1_real_double_1aa15899b44eb93d34445719e4d99c837b>`() const;
		virtual bool :ref:`is_complex<doxid-class_sym_engine_1_1_real_double_1ae1f78772abe0d6bb9d9eb1ea726c18eb>`() const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`addreal<doxid-class_sym_engine_1_1_real_double_1a7cc03ee939ea7f9132a1ef244c658f31>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`addreal<doxid-class_sym_engine_1_1_real_double_1ab3f60845c39ac6f33b03c9d6923ae98c>`(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`addreal<doxid-class_sym_engine_1_1_real_double_1a7dcca2e1e01901bea83d66af36ad0fa1>`(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`addreal<doxid-class_sym_engine_1_1_real_double_1a04c1f663763c7e56b70ac9231f15b71a>`(const RealDouble& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`add<doxid-class_sym_engine_1_1_real_double_1a01d405888bd8fb1126fb5b2565c61abb>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`subreal<doxid-class_sym_engine_1_1_real_double_1a6379022080b67faa9fcb84196d0b5caa>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`subreal<doxid-class_sym_engine_1_1_real_double_1ae15f882cb5ed440cab9907947d87cfa2>`(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`subreal<doxid-class_sym_engine_1_1_real_double_1a73835673fae3d83ebebc0078168fcbe9>`(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`subreal<doxid-class_sym_engine_1_1_real_double_1ad0ddca9a32678124831c288739d44af2>`(const RealDouble& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`sub<doxid-class_sym_engine_1_1_real_double_1a04a58de7a562564f75e04076d3e45e57>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rsubreal<doxid-class_sym_engine_1_1_real_double_1adf4769dc095bd1783532f85de8a30137>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rsubreal<doxid-class_sym_engine_1_1_real_double_1a7859513afd9290a8007f1ad88b4b089b>`(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rsubreal<doxid-class_sym_engine_1_1_real_double_1ab4e77cb97a4896de2649bd894dbfa9a3>`(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rsub<doxid-class_sym_engine_1_1_real_double_1a951271a955a9300eaa26ce99b4f47ccb>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`mulreal<doxid-class_sym_engine_1_1_real_double_1a1acb4dec1b61110285434ad006057dc9>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`mulreal<doxid-class_sym_engine_1_1_real_double_1a485b047b6450ac97ea10b2421fcf5aa0>`(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`mulreal<doxid-class_sym_engine_1_1_real_double_1a18fe87fa8101fe53869511e8a74ec9bc>`(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`mulreal<doxid-class_sym_engine_1_1_real_double_1a9914fe142c3165618cd24cde4d01214d>`(const RealDouble& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`mul<doxid-class_sym_engine_1_1_real_double_1a3743ee8e1c7d7883b8ceba25e6d5e760>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`divreal<doxid-class_sym_engine_1_1_real_double_1a535e3d60ab19d53e670d713a0d36eb6e>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`divreal<doxid-class_sym_engine_1_1_real_double_1af04fbbffb15400a2183fee7b5867b8cc>`(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`divreal<doxid-class_sym_engine_1_1_real_double_1a12446157a312f33b537b1d705bf028f2>`(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`divreal<doxid-class_sym_engine_1_1_real_double_1aa10d1a3ced252834108ef1f4cffc2926>`(const RealDouble& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`div<doxid-class_sym_engine_1_1_real_double_1a05eeecdddb5119c3b94584d6c83894b8>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rdivreal<doxid-class_sym_engine_1_1_real_double_1acea1346054190457a847f3c455b23640>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rdivreal<doxid-class_sym_engine_1_1_real_double_1a8e857f0a9b1a472414475945966c7ad2>`(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rdivreal<doxid-class_sym_engine_1_1_real_double_1abbed67bca2b1615bdc70d77d8073a235>`(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rdiv<doxid-class_sym_engine_1_1_real_double_1a5bd300dffbb475cb1ed84d782b07db18>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`powreal<doxid-class_sym_engine_1_1_real_double_1ac0f674a930663228625e1ccbc007478d>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`powreal<doxid-class_sym_engine_1_1_real_double_1a11a67780b9c20232ea342d9ef086e7be>`(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`powreal<doxid-class_sym_engine_1_1_real_double_1a2729e80d9128793b8e3dfe17f98a57dd>`(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`powreal<doxid-class_sym_engine_1_1_real_double_1adf0abb1efaba664da5842d89aaca753d>`(const RealDouble& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`pow<doxid-class_sym_engine_1_1_real_double_1a9145dbffb8d17d247d6ffb7e188784e8>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rpowreal<doxid-class_sym_engine_1_1_real_double_1a81b0caa050bc1078d76e4734702d3919>`(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rpowreal<doxid-class_sym_engine_1_1_real_double_1a3d0cdedaba863e6e5d3b1f6603c6c292>`(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const;
		RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rpowreal<doxid-class_sym_engine_1_1_real_double_1a67b559afd0896f0c60258a17714059e9>`(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rpow<doxid-class_sym_engine_1_1_real_double_1a4ca1b4517944c8a9622bbaa3f8960c8b>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// fields
	
		:ref:`TypeID<doxid-namespace_sym_engine_1a976db42c9dfad76ad2c95a6038cbc093>` :ref:`type_code_<doxid-class_sym_engine_1_1_basic_1afc3cac9dbdf56974a961c8b2cdb4dfea>`;

		// methods
	
		RCP<T> :ref:`rcp_from_this<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1aed6b2bd25fd3fd124a5e97427f8372f2>`();
		RCP<const T> :ref:`rcp_from_this<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1aefdd4958f591ee705b60ea92d661a775>`() const;
	
		template <class T2>
		RCP<const T2> :ref:`rcp_from_this_cast<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1a122635053dc63f074487aa3ba0df13a1>`() const;
	
		unsigned int :ref:`use_count<doxid-class_sym_engine_1_1_enable_r_c_p_from_this_1acbea1ba6881779f17a5b81c0fd0eb2d2>`() const;
		:ref:`TypeID<doxid-namespace_sym_engine_1a976db42c9dfad76ad2c95a6038cbc093>` :ref:`get_type_code<doxid-class_sym_engine_1_1_basic_1a3837186572bf82a499cf81259d945804>`() const;
		:ref:`Basic<doxid-class_sym_engine_1_1_basic>`& :ref:`operator=<doxid-class_sym_engine_1_1_basic_1a8ddc236758a9cdd0fafadad57bfa4b09>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`&);
		:ref:`Basic<doxid-class_sym_engine_1_1_basic>`& :ref:`operator=<doxid-class_sym_engine_1_1_basic_1af04d269a2434302330e05a94238527a2>`(:ref:`Basic<doxid-class_sym_engine_1_1_basic>`&&);
		virtual :ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` :ref:`__hash__<doxid-class_sym_engine_1_1_basic_1ac950eca7e8403248252115bcba2e3ab1>`() const = 0;
		:ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` :ref:`hash<doxid-class_sym_engine_1_1_basic_1af71e629c952b7390d72f2d4b24694b62>`() const;
		virtual bool :ref:`__eq__<doxid-class_sym_engine_1_1_basic_1ac6a957e2006026f74c08ae6795f5ff7f>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const = 0;
		bool :ref:`__neq__<doxid-class_sym_engine_1_1_basic_1a3a3e923c9078ac82e01e453e80fa2134>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		int :ref:`__cmp__<doxid-class_sym_engine_1_1_basic_1adb2def25bca4104f085ae99c57af5ab3>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const;
		virtual int :ref:`compare<doxid-class_sym_engine_1_1_basic_1af03cfca16a93aaa0aff2382cc2b5087f>`(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const = 0;
		std::string :ref:`__str__<doxid-class_sym_engine_1_1_basic_1a905153d35107acc23b37e04e1b430420>`() const;
		RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`subs<doxid-class_sym_engine_1_1_basic_1a7a502ee14598f873fefff54fac433d48>`(const :ref:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& subs_dict) const;
		RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`xreplace<doxid-class_sym_engine_1_1_basic_1a2a7d7c5de904a663634679523c9a5348>`(const :ref:`map_basic_basic<doxid-namespace_sym_engine_1abd5a60ffdc356a9901e6cfbf118daf53>`& subs_dict) const;
		virtual RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`expand_as_exp<doxid-class_sym_engine_1_1_basic_1a6423cc8431a87cbb88e010887904b274>`() const;
		virtual :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :ref:`get_args<doxid-class_sym_engine_1_1_basic_1a6544293931047d6d9097e81f7d306cae>`() const = 0;
		RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`diff<doxid-class_sym_engine_1_1_basic_1ad4e255f317caaaf57acabff9f6161b65>`(const RCP<const :ref:`Symbol<doxid-class_sym_engine_1_1_symbol>`>& x, bool cache = true) const;
		virtual bool :ref:`is_zero<doxid-class_sym_engine_1_1_number_1ae917a11d6a9c078a779a86c2e5a1b547>`() const = 0;
		virtual bool :ref:`is_one<doxid-class_sym_engine_1_1_number_1a2b793da7385a260ce4007e2af44d3de3>`() const = 0;
		virtual bool :ref:`is_minus_one<doxid-class_sym_engine_1_1_number_1aeaf95ae61754c341cac4467f1d7011a7>`() const = 0;
		virtual bool :ref:`is_negative<doxid-class_sym_engine_1_1_number_1a648c569350bce74ac1b8f6efc344971f>`() const = 0;
		virtual bool :ref:`is_positive<doxid-class_sym_engine_1_1_number_1abdc51eafcb71b60bcad71eb89a8f79d0>`() const = 0;
		virtual bool :ref:`is_complex<doxid-class_sym_engine_1_1_number_1a30f5893257d8f91fbe92d821dc4094f8>`() const = 0;
		virtual RCP<const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`> :ref:`conjugate<doxid-class_sym_engine_1_1_number_1aa63348fe91ef4ca5e1cd66e7947dd553>`() const;
		virtual bool :ref:`is_exact<doxid-class_sym_engine_1_1_number_1a3aafc16ff2afe30f9c21d551248ec0c0>`() const;
		bool :ref:`is_exact_zero<doxid-class_sym_engine_1_1_number_1a8001d70a87176a33b92861fbd46dce51>`() const;
		virtual :ref:`Evaluate<doxid-class_sym_engine_1_1_evaluate>`& :ref:`get_eval<doxid-class_sym_engine_1_1_number_1a1109902b92095c26562a6a53e367ec6e>`() const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`add<doxid-class_sym_engine_1_1_number_1a557e5884de4dabb96f68c20b97abbbe7>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const = 0;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`sub<doxid-class_sym_engine_1_1_number_1add7faf85931fc31190cb5434f7efb9a0>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rsub<doxid-class_sym_engine_1_1_number_1a715f82af951f17db954f3eaa2f69984b>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`mul<doxid-class_sym_engine_1_1_number_1a12380b3f77995ca02d6712906b0ffdf4>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const = 0;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`div<doxid-class_sym_engine_1_1_number_1ac953b8fa68f5ecbb5f7f43ceccf50c15>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rdiv<doxid-class_sym_engine_1_1_number_1a9c17bed6eaf7698c91a640c186e7f867>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`pow<doxid-class_sym_engine_1_1_number_1a58bdc90b6e70916fe90bcad312670623>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const = 0;
		virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> :ref:`rpow<doxid-class_sym_engine_1_1_number_1aff0deb08b64a4710ebf11793132b72ae>`(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const = 0;
		virtual :ref:`vec_basic<doxid-namespace_sym_engine_1a7b5fa751fc652b4e8a3b0e1cf1d7d9d1>` :ref:`get_args<doxid-class_sym_engine_1_1_number_1ae7bd5cd19b89ff042088c1ecec21460b>`() const;
		virtual bool :ref:`is_perfect_power<doxid-class_sym_engine_1_1_number_1a5e9609f3bcb7297c3c6f22abe3a1e128>`(bool is_expected = false) const;
		virtual bool :ref:`nth_root<doxid-class_sym_engine_1_1_number_1ac0b9ee179d987ac976282202b0024f3e>`(const Ptr<RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`>>&, unsigned long n) const;

.. _details-class_sym_engine_1_1_real_double:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

:ref:`RealDouble <doxid-class_sym_engine_1_1_real_double>` Class to hold double values.

Construction
------------

.. index:: pair: function; RealDouble
.. _doxid-class_sym_engine_1_1_real_double_1aecb8d59da57bedd29809cea4fa2e30fb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RealDouble(double i)

Constructor of :ref:`RealDouble <doxid-class_sym_engine_1_1_real_double>` class.

Methods
-------

.. index:: pair: function; __hash__
.. _doxid-class_sym_engine_1_1_real_double_1addc201ec0ac22bcc8f19181c1f9797a0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual :ref:`hash_t<doxid-namespace_sym_engine_1a455620f815334592057d7966d62d5de6>` __hash__() const



.. rubric:: Returns:

size of the hash

.. index:: pair: function; __eq__
.. _doxid-class_sym_engine_1_1_real_double_1a8b93b9484549dde8bc88e1c92ad6c66c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool __eq__(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const

:ref:`Equality <doxid-class_sym_engine_1_1_equality>` comparator



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- o

		- - Object to be compared with



.. rubric:: Returns:

whether the 2 objects are equal

.. index:: pair: function; compare
.. _doxid-class_sym_engine_1_1_real_double_1a773d3ec13efa3801fffc92441ae17351:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual int compare(const :ref:`Basic<doxid-class_sym_engine_1_1_basic>`& o) const

Returns -1, 0, 1 for ``this < o, this == o, this > o``. This method is used when you want to sort things like ``x+y+z`` into canonical order. This function assumes that ``o`` is the same type as ``this``. Use ``__cmp__`` if you want general comparison.

.. index:: pair: function; is_positive
.. _doxid-class_sym_engine_1_1_real_double_1aa889931e1dade5a4c29665cfcd198922:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool is_positive() const



.. rubric:: Returns:

``true`` if positive

.. index:: pair: function; is_negative
.. _doxid-class_sym_engine_1_1_real_double_1a6468e0694ac04980e96e5f0856a4648e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool is_negative() const



.. rubric:: Returns:

``true`` if negative

.. index:: pair: function; as_double
.. _doxid-class_sym_engine_1_1_real_double_1a680c9526aa0cf757ffbee75238a48f4a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	double as_double() const



.. rubric:: Returns:

self as a double

.. index:: pair: function; is_exact
.. _doxid-class_sym_engine_1_1_real_double_1a60420f2c8395f0b67a2963c752b6e3d3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool is_exact() const



.. rubric:: Returns:

``true`` if this number is an exact number

.. index:: pair: function; get_eval
.. _doxid-class_sym_engine_1_1_real_double_1a26da416cdb037d3afd8dc5ef5a343ef6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual :ref:`Evaluate<doxid-class_sym_engine_1_1_evaluate>`& get_eval() const

Get ``:ref:`Evaluate <doxid-class_sym_engine_1_1_evaluate>``` singleton to evaluate numerically.

.. index:: pair: function; is_zero
.. _doxid-class_sym_engine_1_1_real_double_1a8c97467c3089b1ebcdc00d1c64fcdf5d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool is_zero() const



.. rubric:: Returns:

``true`` when equals to 0

.. index:: pair: function; is_one
.. _doxid-class_sym_engine_1_1_real_double_1a7294106a689856d66ebc0a83c1129561:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool is_one() const



.. rubric:: Returns:

``false``

.. index:: pair: function; is_minus_one
.. _doxid-class_sym_engine_1_1_real_double_1aa15899b44eb93d34445719e4d99c837b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool is_minus_one() const



.. rubric:: Returns:

``false``

.. index:: pair: function; is_complex
.. _doxid-class_sym_engine_1_1_real_double_1ae1f78772abe0d6bb9d9eb1ea726c18eb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual bool is_complex() const



.. rubric:: Returns:

``false``

.. index:: pair: function; addreal
.. _doxid-class_sym_engine_1_1_real_double_1a7cc03ee939ea7f9132a1ef244c658f31:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> addreal(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const

:ref:`Add <doxid-class_sym_engine_1_1_add>` RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Integer <doxid-class_sym_engine_1_1_integer>`

.. index:: pair: function; addreal
.. _doxid-class_sym_engine_1_1_real_double_1ab3f60845c39ac6f33b03c9d6923ae98c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> addreal(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const

:ref:`Add <doxid-class_sym_engine_1_1_add>` RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Rational <doxid-class_sym_engine_1_1_rational>`

.. index:: pair: function; addreal
.. _doxid-class_sym_engine_1_1_real_double_1a7dcca2e1e01901bea83d66af36ad0fa1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> addreal(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const

:ref:`Add <doxid-class_sym_engine_1_1_add>` RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Complex <doxid-class_sym_engine_1_1_complex>`

.. index:: pair: function; addreal
.. _doxid-class_sym_engine_1_1_real_double_1a04c1f663763c7e56b70ac9231f15b71a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> addreal(const RealDouble& other) const

:ref:`Add <doxid-class_sym_engine_1_1_add>` RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`RealDouble <doxid-class_sym_engine_1_1_real_double>`

.. index:: pair: function; add
.. _doxid-class_sym_engine_1_1_real_double_1a01d405888bd8fb1126fb5b2565c61abb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> add(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const

Converts the param ``other`` appropriately and then calls ``addreal``

.. index:: pair: function; subreal
.. _doxid-class_sym_engine_1_1_real_double_1a6379022080b67faa9fcb84196d0b5caa:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> subreal(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const

Subtract RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Integer <doxid-class_sym_engine_1_1_integer>`

.. index:: pair: function; subreal
.. _doxid-class_sym_engine_1_1_real_double_1ae15f882cb5ed440cab9907947d87cfa2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> subreal(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const

Subtract RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Rational <doxid-class_sym_engine_1_1_rational>`

.. index:: pair: function; subreal
.. _doxid-class_sym_engine_1_1_real_double_1a73835673fae3d83ebebc0078168fcbe9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> subreal(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const

Subtract RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Complex <doxid-class_sym_engine_1_1_complex>`

.. index:: pair: function; subreal
.. _doxid-class_sym_engine_1_1_real_double_1ad0ddca9a32678124831c288739d44af2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> subreal(const RealDouble& other) const

Subtract RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`RealDouble <doxid-class_sym_engine_1_1_real_double>`

.. index:: pair: function; sub
.. _doxid-class_sym_engine_1_1_real_double_1a04a58de7a562564f75e04076d3e45e57:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> sub(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const

Converts the param ``other`` appropriately and then calls ``subreal``

.. index:: pair: function; rsubreal
.. _doxid-class_sym_engine_1_1_real_double_1adf4769dc095bd1783532f85de8a30137:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> rsubreal(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const

Subtract RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Integer <doxid-class_sym_engine_1_1_integer>`

.. index:: pair: function; rsubreal
.. _doxid-class_sym_engine_1_1_real_double_1a7859513afd9290a8007f1ad88b4b089b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> rsubreal(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const

Subtract RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Rational <doxid-class_sym_engine_1_1_rational>`

.. index:: pair: function; rsubreal
.. _doxid-class_sym_engine_1_1_real_double_1ab4e77cb97a4896de2649bd894dbfa9a3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> rsubreal(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const

Subtract RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Complex <doxid-class_sym_engine_1_1_complex>`

.. index:: pair: function; rsub
.. _doxid-class_sym_engine_1_1_real_double_1a951271a955a9300eaa26ce99b4f47ccb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> rsub(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const

Converts the param ``other`` appropriately and then calls ``subreal``

.. index:: pair: function; mulreal
.. _doxid-class_sym_engine_1_1_real_double_1a1acb4dec1b61110285434ad006057dc9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> mulreal(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const

Multiply RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Integer <doxid-class_sym_engine_1_1_integer>`

.. index:: pair: function; mulreal
.. _doxid-class_sym_engine_1_1_real_double_1a485b047b6450ac97ea10b2421fcf5aa0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> mulreal(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const

Multiply RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Rational <doxid-class_sym_engine_1_1_rational>`

.. index:: pair: function; mulreal
.. _doxid-class_sym_engine_1_1_real_double_1a18fe87fa8101fe53869511e8a74ec9bc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> mulreal(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const

Multiply RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Complex <doxid-class_sym_engine_1_1_complex>`

.. index:: pair: function; mulreal
.. _doxid-class_sym_engine_1_1_real_double_1a9914fe142c3165618cd24cde4d01214d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> mulreal(const RealDouble& other) const

Multiply RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`RealDouble <doxid-class_sym_engine_1_1_real_double>`

.. index:: pair: function; mul
.. _doxid-class_sym_engine_1_1_real_double_1a3743ee8e1c7d7883b8ceba25e6d5e760:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> mul(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const

Converts the param ``other`` appropriately and then calls ``mulreal``

.. index:: pair: function; divreal
.. _doxid-class_sym_engine_1_1_real_double_1a535e3d60ab19d53e670d713a0d36eb6e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> divreal(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const

Divide RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Integer <doxid-class_sym_engine_1_1_integer>`

.. index:: pair: function; divreal
.. _doxid-class_sym_engine_1_1_real_double_1af04fbbffb15400a2183fee7b5867b8cc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> divreal(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const

Divide RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Rational <doxid-class_sym_engine_1_1_rational>`

.. index:: pair: function; divreal
.. _doxid-class_sym_engine_1_1_real_double_1a12446157a312f33b537b1d705bf028f2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> divreal(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const

Divide RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Complex <doxid-class_sym_engine_1_1_complex>`

.. index:: pair: function; divreal
.. _doxid-class_sym_engine_1_1_real_double_1aa10d1a3ced252834108ef1f4cffc2926:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> divreal(const RealDouble& other) const

Divide RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`RealDouble <doxid-class_sym_engine_1_1_real_double>`

.. index:: pair: function; div
.. _doxid-class_sym_engine_1_1_real_double_1a05eeecdddb5119c3b94584d6c83894b8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> div(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const

Converts the param ``other`` appropriately and then calls ``divreal``

.. index:: pair: function; rdivreal
.. _doxid-class_sym_engine_1_1_real_double_1acea1346054190457a847f3c455b23640:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> rdivreal(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const

Divide RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Integer <doxid-class_sym_engine_1_1_integer>`

.. index:: pair: function; rdivreal
.. _doxid-class_sym_engine_1_1_real_double_1a8e857f0a9b1a472414475945966c7ad2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> rdivreal(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const

Divide RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Rational <doxid-class_sym_engine_1_1_rational>`

.. index:: pair: function; rdivreal
.. _doxid-class_sym_engine_1_1_real_double_1abbed67bca2b1615bdc70d77d8073a235:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> rdivreal(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const

Divide RealDoubles



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Complex <doxid-class_sym_engine_1_1_complex>`

.. index:: pair: function; rdiv
.. _doxid-class_sym_engine_1_1_real_double_1a5bd300dffbb475cb1ed84d782b07db18:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> rdiv(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const

Converts the param ``other`` appropriately and then calls ``divreal``

.. index:: pair: function; powreal
.. _doxid-class_sym_engine_1_1_real_double_1ac0f674a930663228625e1ccbc007478d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> powreal(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const

Raise :ref:`RealDouble <doxid-class_sym_engine_1_1_real_double>` to power ``other``



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Integer <doxid-class_sym_engine_1_1_integer>`

.. index:: pair: function; powreal
.. _doxid-class_sym_engine_1_1_real_double_1a11a67780b9c20232ea342d9ef086e7be:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> powreal(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const

Raise :ref:`RealDouble <doxid-class_sym_engine_1_1_real_double>` to power ``other``



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Rational <doxid-class_sym_engine_1_1_rational>`

.. index:: pair: function; powreal
.. _doxid-class_sym_engine_1_1_real_double_1a2729e80d9128793b8e3dfe17f98a57dd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> powreal(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const

Raise :ref:`RealDouble <doxid-class_sym_engine_1_1_real_double>` to power ``other``



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Complex <doxid-class_sym_engine_1_1_complex>`

.. index:: pair: function; powreal
.. _doxid-class_sym_engine_1_1_real_double_1adf0abb1efaba664da5842d89aaca753d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> powreal(const RealDouble& other) const

Raise :ref:`RealDouble <doxid-class_sym_engine_1_1_real_double>` to power ``other``



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`RealDouble <doxid-class_sym_engine_1_1_real_double>`

.. index:: pair: function; pow
.. _doxid-class_sym_engine_1_1_real_double_1a9145dbffb8d17d247d6ffb7e188784e8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> pow(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const

Converts the param ``other`` appropriately and then calls ``powreal``

.. index:: pair: function; rpowreal
.. _doxid-class_sym_engine_1_1_real_double_1a81b0caa050bc1078d76e4734702d3919:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> rpowreal(const :ref:`Integer<doxid-class_sym_engine_1_1_integer>`& other) const

Raise ``other`` to power :ref:`RealDouble <doxid-class_sym_engine_1_1_real_double>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Integer <doxid-class_sym_engine_1_1_integer>`

.. index:: pair: function; rpowreal
.. _doxid-class_sym_engine_1_1_real_double_1a3d0cdedaba863e6e5d3b1f6603c6c292:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> rpowreal(const :ref:`Rational<doxid-class_sym_engine_1_1_rational>`& other) const

Raise ``other`` to power :ref:`RealDouble <doxid-class_sym_engine_1_1_real_double>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Rational <doxid-class_sym_engine_1_1_rational>`

.. index:: pair: function; rpowreal
.. _doxid-class_sym_engine_1_1_real_double_1a67b559afd0896f0c60258a17714059e9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> rpowreal(const :ref:`Complex<doxid-class_sym_engine_1_1_complex>`& other) const

Raise ``other`` to power :ref:`RealDouble <doxid-class_sym_engine_1_1_real_double>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- other

		- of type :ref:`Complex <doxid-class_sym_engine_1_1_complex>`

.. index:: pair: function; rpow
.. _doxid-class_sym_engine_1_1_real_double_1a4ca1b4517944c8a9622bbaa3f8960c8b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual RCP<const :ref:`Number<doxid-class_sym_engine_1_1_number>`> rpow(const :ref:`Number<doxid-class_sym_engine_1_1_number>`& other) const

Converts the param ``other`` appropriately and then calls ``powreal``

