.. _global:
.. index:: pair: namespace; global

Global Namespace
================

.. toctree::
	:hidden:

	namespace_SymEngine.rst
	namespace_std.rst
	enum_TypeID.rst
	enum_symengine_exceptions_t.rst
	struct_CDenseMatrix.rst
	struct_CLambdaRealDoubleVisitor.rst
	struct_CMapBasicBasic.rst
	struct_CRCPBasic.rst
	struct_CRCPBasic_C.rst
	struct_CSetBasic.rst
	struct_CSparseMatrix.rst
	struct_CVecBasic.rst
	struct_CVectorInt.rst
	struct_dcomplex.rst

Overview
~~~~~~~~




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// namespaces

	namespace :ref:`SymEngine<doxid-namespace_sym_engine>`;
		namespace :ref:`SymEngine::detail<doxid-namespace_sym_engine_1_1detail>`;
		namespace :ref:`SymEngine::literals<doxid-namespace_sym_engine_1_1literals>`;
	namespace :ref:`std<doxid-namespacestd>`;

	// typedefs

	typedef :ref:`symengine_exceptions_t<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :target:`CWRAPPER_OUTPUT_TYPE<doxid-cwrapper_8h_1ab46c8c964b489532c1ec6658d2b758db>`;
	typedef struct :ref:`dcomplex<doxid-structdcomplex>` :ref:`dcomplex<doxid-cwrapper_8h_1a2b9c43f8b0058da40200f4035f60934d>`;
	typedef struct :ref:`CRCPBasic_C<doxid-struct_c_r_c_p_basic___c>` :ref:`basic_struct<doxid-cwrapper_8h_1a04b78eb6780256a3b58d734dc92e27bf>`;
	typedef :ref:`basic_struct<doxid-cwrapper_8h_1a04b78eb6780256a3b58d734dc92e27bf>` :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>`[1];
	typedef struct :ref:`CVectorInt<doxid-struct_c_vector_int>` :ref:`CVectorInt<doxid-cwrapper_8h_1a75b65628d6560cb993fa6146913a9634>`;
	typedef struct :ref:`CVecBasic<doxid-struct_c_vec_basic>` :ref:`CVecBasic<doxid-cwrapper_8h_1aa5e610e51a883b63153c4b06d107a459>`;
	typedef struct :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>` :ref:`CDenseMatrix<doxid-cwrapper_8h_1a2832a382353b2d4578387fe5255ae2a8>`;
	typedef struct :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>` :target:`CSparseMatrix<doxid-cwrapper_8h_1a1a6f68daa1ec73f66a19c0bf4320b70e>`;
	typedef struct :ref:`CSetBasic<doxid-struct_c_set_basic>` :ref:`CSetBasic<doxid-cwrapper_8h_1a22c75f3e438725c7f4a41b9097df0d58>`;
	typedef struct :ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>` :ref:`CMapBasicBasic<doxid-cwrapper_8h_1a80cf40066081c34832264b249b5020aa>`;
	typedef struct :ref:`CLambdaRealDoubleVisitor<doxid-struct_c_lambda_real_double_visitor>` :ref:`CLambdaRealDoubleVisitor<doxid-cwrapper_8h_1a0b8f9163ab0bb02c2e6d5b0deff96afb>`;

	// enums

	enum :ref:`TypeID<doxid-cwrapper_8h_1a183c40b2ba67065929d70b3987da4cc2>`;
	enum :ref:`symengine_exceptions_t<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>`;

	// structs

	struct :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`;
	struct :ref:`CLambdaRealDoubleVisitor<doxid-struct_c_lambda_real_double_visitor>`;
	struct :ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`;
	struct :ref:`CRCPBasic<doxid-struct_c_r_c_p_basic>`;
	struct :ref:`CRCPBasic_C<doxid-struct_c_r_c_p_basic___c>`;
	struct :ref:`CSetBasic<doxid-struct_c_set_basic>`;
	struct :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`;
	struct :ref:`CVecBasic<doxid-struct_c_vec_basic>`;
	struct :ref:`CVectorInt<doxid-struct_c_vector_int>`;
	struct :ref:`dcomplex<doxid-structdcomplex>`;

	// global functions

	:target:`if<doxid-_c_make_lists_8txt_1ab1eeeff62debac63fa4870fe6c454fcb>`(WITH_SYMENGINE_TEUCHOS);
	:target:`include_directories<doxid-_c_make_lists_8txt_1a345944b45177e1e2222d7fad1c0bc83d>`(BEFORE ${teuchos_BINARY_DIR});
	void :ref:`basic_new_stack<doxid-cwrapper_8cpp_1a54196ef667ac938ca24917115541a9ad>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :ref:`basic_free_stack<doxid-cwrapper_8cpp_1acef99915592acc9339f4a7d7d0180f0b>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`basic_struct<doxid-cwrapper_8h_1a04b78eb6780256a3b58d734dc92e27bf>`* :target:`basic_new_heap<doxid-cwrapper_8cpp_1a6e226e49f16ea34a9597ba4e137bde32>`();
	void :target:`basic_free_heap<doxid-cwrapper_8cpp_1ab1cb5ed2bd28bb7b795d752dd5e3c0fc>`(:ref:`basic_struct<doxid-cwrapper_8h_1a04b78eb6780256a3b58d734dc92e27bf>`* s);
	const char* :target:`symengine_version<doxid-cwrapper_8cpp_1a02306eeb84b496d7ff94ba929014792b>`();
	void :ref:`basic_const_set<doxid-cwrapper_8cpp_1a58299cf6d74115a41e39696ca718f1a7>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c);
	void :target:`basic_const_zero<doxid-cwrapper_8cpp_1a698af3dbf2e8c16df9d2dfe7b77c7700>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_one<doxid-cwrapper_8cpp_1a78bf29598355651898fa30d64bb7bf2e>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_minus_one<doxid-cwrapper_8cpp_1a7cc33d51797dbc4153ba7ca4e5a1c712>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_I<doxid-cwrapper_8cpp_1aa85f344c6fab3f2158d2479602cd725a>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_pi<doxid-cwrapper_8cpp_1a5c36eff33e166ec8a69762209730d90a>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_E<doxid-cwrapper_8cpp_1ae3e50d7ffcd0236b0b2d75dde36b3665>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_EulerGamma<doxid-cwrapper_8cpp_1af5ec97767841b03b792709abebd31c6d>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_Catalan<doxid-cwrapper_8cpp_1a3dc475f8a0015991164cb94c2e169858>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_GoldenRatio<doxid-cwrapper_8cpp_1a4f7f255bb089653a6ddc771cb815a582>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :ref:`basic_const_infinity<doxid-cwrapper_8cpp_1aa1a959449d7a3f0411f162dacda55b48>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_neginfinity<doxid-cwrapper_8cpp_1a56c4a0a4b9596c483f4e7511860019f4>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_complex_infinity<doxid-cwrapper_8cpp_1a560a60c9d3b2a3dad243fc56f335a452>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :ref:`basic_const_nan<doxid-cwrapper_8cpp_1afe9e7a98e566edbbdb19c31383d25078>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`TypeID<doxid-cwrapper_8h_1a183c40b2ba67065929d70b3987da4cc2>` :ref:`basic_get_class_id<doxid-cwrapper_8cpp_1a098656f21c85ce1bc26a383fedd3dd1c>`(const char* c);
	char* :ref:`basic_get_class_from_id<doxid-cwrapper_8cpp_1aac524b18690b75a7c03abfb97a690926>`(:ref:`TypeID<doxid-cwrapper_8h_1a183c40b2ba67065929d70b3987da4cc2>` id);
	:ref:`TypeID<doxid-cwrapper_8h_1a183c40b2ba67065929d70b3987da4cc2>` :ref:`basic_get_type<doxid-cwrapper_8cpp_1aa2b68725206cacb4f1d8c08bdfe70a94>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`symbol_set<doxid-cwrapper_8cpp_1a958b521b9147c8900fd6357beedb65a3>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c);
	int :ref:`number_is_zero<doxid-cwrapper_8cpp_1a79b8edf92541e11308be7efc2d6fb605>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	int :ref:`number_is_negative<doxid-cwrapper_8cpp_1abf2c02d93f3c92657ef412089df4182a>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	int :ref:`number_is_positive<doxid-cwrapper_8cpp_1ab8ed396a33c056fea750b9c903ce6614>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	int :ref:`number_is_complex<doxid-cwrapper_8cpp_1ae2993f8080c9922224d7fa1713c7256b>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`integer_set_si<doxid-cwrapper_8cpp_1a315c7dabba2a170f7107e7c826babe43>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, long i);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`integer_set_ui<doxid-cwrapper_8cpp_1abd422603e0e5b4c64b0a06965a18ec73>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long i);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`integer_set_str<doxid-cwrapper_8cpp_1af8dae1fad44168da635cb35a1dd23fda>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`real_double_set_d<doxid-cwrapper_8cpp_1afdbb3af4dfe786e96b56b86a2ee34ac2>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, double d);
	double :ref:`real_double_get_d<doxid-cwrapper_8cpp_1a2795fa1048031bf82ad1f5a4f5a14378>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`complex_base_real_part<doxid-cwrapper_8cpp_1aca6758f7b5895c9d052c702c8c2cf329>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` com);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`complex_base_imaginary_part<doxid-cwrapper_8cpp_1a36513415364a1815bab4fe5fb3f04ded>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` com);
	signed long :ref:`integer_get_si<doxid-cwrapper_8cpp_1afa785f759688c9dff206cd7c107d0a31>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	unsigned long :ref:`integer_get_ui<doxid-cwrapper_8cpp_1a0516108b5e81e74591fbf40df1d99319>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`rational_set_si<doxid-cwrapper_8cpp_1a87a1ca17967645d45194b49f3b1a8ac2>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, long a, long b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`rational_set_ui<doxid-cwrapper_8cpp_1a45328b1dd8754b5eb91788b2d780d81c>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a, unsigned long b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`rational_set<doxid-cwrapper_8cpp_1a04b64367e9fac8d5cf7cbd836ef8932d>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` i, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` j);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`complex_set<doxid-cwrapper_8cpp_1a57d61a0dee78521414681917a83280f6>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` re, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` im);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`complex_set_rat<doxid-cwrapper_8cpp_1adeae8eaccdfe58c7abf98276f1a41b35>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` re, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` im);
	:ref:`dcomplex<doxid-structdcomplex>` :ref:`complex_double_get<doxid-cwrapper_8cpp_1a1413c9b7b7014fc6d2a9568c21c23fc7>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_diff<doxid-cwrapper_8cpp_1a01574ee23014f72c47112a5ac697879b>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` expr, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` sym);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_assign<doxid-cwrapper_8cpp_1a45b7ec68408478ae6767a940331a0bdd>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_parse<doxid-cwrapper_8cpp_1a1537bac2b0c18aae0f13875a4fa4d194>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const char* str);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_parse2<doxid-cwrapper_8cpp_1a99c63bd83e89fec9d8f27b440aaf2339>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const char* str, int convert_xor);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_add<doxid-cwrapper_8cpp_1a28b0371a37980ff3e6cecaea567f305a>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_sub<doxid-cwrapper_8cpp_1a61cf9597dfd516c4b5904ca9a6ff1f2f>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_mul<doxid-cwrapper_8cpp_1acd4ae951fac6c54963af263295bca9c6>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_pow<doxid-cwrapper_8cpp_1a5f3f19c558f87d8664189569b0614434>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_div<doxid-cwrapper_8cpp_1a3c20b6b0bdf6051f0ea3285c74a78fb5>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	int :ref:`basic_eq<doxid-cwrapper_8cpp_1ac42208d40a14e0c3e65eb457645b73f0>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	int :ref:`basic_neq<doxid-cwrapper_8cpp_1a54a69968f134b035c6cdb85253c593c8>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	void :ref:`basic_str_free<doxid-cwrapper_8cpp_1aff49667c1d7a42c4735bf6b9ff96a2db>`(char* s);
	int :ref:`symengine_have_component<doxid-cwrapper_8cpp_1ae01d22bd7d92e15548fac34620f80d76>`(const char* c);
	int :ref:`is_a_Number<doxid-cwrapper_8cpp_1a52af55d5d7b0de08ccb4b1d0a3cec37f>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	int :ref:`is_a_Integer<doxid-cwrapper_8cpp_1abb9b98e5b389b0beb6462cfb66ff37bb>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c);
	int :ref:`is_a_Rational<doxid-cwrapper_8cpp_1aa9b04aeeb589ce690b9f88af2ed31a3e>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c);
	int :ref:`is_a_Symbol<doxid-cwrapper_8cpp_1a226baaba7ce7dd3256c5c5a7556cad22>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c);
	int :ref:`is_a_Complex<doxid-cwrapper_8cpp_1a36b6cb4ef1d83b5716176335dc3b6741>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c);
	int :ref:`is_a_RealDouble<doxid-cwrapper_8cpp_1a35e06853720a494c88caf44536804984>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c);
	int :ref:`is_a_ComplexDouble<doxid-cwrapper_8cpp_1ab1e31be035ee7f3ebdec6aa4c1a4fd49>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c);
	int :ref:`is_a_RealMPFR<doxid-cwrapper_8cpp_1a30db359e68d8816e6a9bd85d2688eda1>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c);
	int :ref:`is_a_ComplexMPC<doxid-cwrapper_8cpp_1a6b6b9d06bc3c726fd899a5ccee77a7ec>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c);
	:ref:`CVectorInt<doxid-struct_c_vector_int>`* :target:`vectorint_new<doxid-cwrapper_8cpp_1a81505cca0d276d8327ad8deb248cd1b3>`();
	int :target:`vectorint_placement_new_check<doxid-cwrapper_8cpp_1a1c5a8740a7b6c0fec772ffcfcd0882aa>`(void* data, size_t size);
	:ref:`CVectorInt<doxid-struct_c_vector_int>`* :target:`vectorint_placement_new<doxid-cwrapper_8cpp_1afc662d5123a8446bddb4ef3b0e240b8e>`(void* data);
	void :target:`vectorint_placement_free<doxid-cwrapper_8cpp_1a922f5c7ed357467864a3cee3e9d6a59b>`(:ref:`CVectorInt<doxid-struct_c_vector_int>`* self);
	void :target:`vectorint_free<doxid-cwrapper_8cpp_1a78d2b3bdb75cdb5d15421958b500f119>`(:ref:`CVectorInt<doxid-struct_c_vector_int>`* self);
	void :target:`vectorint_push_back<doxid-cwrapper_8cpp_1a1f7922fa5d6ba6a5cae9e665af58dd16>`(:ref:`CVectorInt<doxid-struct_c_vector_int>`* self, int value);
	int :target:`vectorint_get<doxid-cwrapper_8cpp_1a568784e6705f4ad0fd039fbcc557f7ef>`(:ref:`CVectorInt<doxid-struct_c_vector_int>`* self, int n);
	:ref:`CVecBasic<doxid-struct_c_vec_basic>`* :target:`vecbasic_new<doxid-cwrapper_8cpp_1ac93dbacd33d0749a2e94565bf98b7425>`();
	void :target:`vecbasic_free<doxid-cwrapper_8cpp_1afc99f895e16eaa8878ff71590bb9d5cc>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* self);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :target:`vecbasic_push_back<doxid-cwrapper_8cpp_1ab5324dada00ba94fd5a066194585fa97>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` value);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :target:`vecbasic_get<doxid-cwrapper_8cpp_1a6d548607a7a8e67b2b48aaba241f155f>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* self, size_t n, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` result);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :target:`vecbasic_set<doxid-cwrapper_8cpp_1a6a53a6ad6370f718877243e65dfa121d>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* self, size_t n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :target:`vecbasic_erase<doxid-cwrapper_8cpp_1a53dee2879c5cfdf22227aa5dd1b09d0c>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* self, size_t n);
	size_t :target:`vecbasic_size<doxid-cwrapper_8cpp_1a00e3385a1154127309d8b96e5a9f24e2>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* self);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_max<doxid-cwrapper_8cpp_1ac2b3fc3520be71aa1899f6c0c40bd274>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* d);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_min<doxid-cwrapper_8cpp_1a146f0113d0dd20153b46f7ab25d7eea5>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* d);
	:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* :target:`dense_matrix_new<doxid-cwrapper_8cpp_1a6a079a8d9d3121727c7332424b951c5a>`();
	:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* :ref:`dense_matrix_new_vec<doxid-cwrapper_8cpp_1aa5fea20962120faf63f29b8aadac5439>`(unsigned rows, unsigned cols, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* l);
	:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* :ref:`dense_matrix_new_rows_cols<doxid-cwrapper_8cpp_1a31f0222f71de0732e33afce35a65dc1d>`(unsigned rows, unsigned cols);
	:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* :target:`sparse_matrix_new<doxid-cwrapper_8cpp_1affa3d7c3b009f9e73d6a8c3c19d59167>`();
	void :target:`dense_matrix_free<doxid-cwrapper_8cpp_1a5763a0e06bae1402b84a436687d4bf8d>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* self);
	void :target:`sparse_matrix_free<doxid-cwrapper_8cpp_1a46e3e069881ab39249b7fbd10ca94782>`(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* self);
	void :ref:`sparse_matrix_init<doxid-cwrapper_8cpp_1abaebe3b0dec0903cb6f8e7689d3c861c>`(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* s);
	void :ref:`sparse_matrix_rows_cols<doxid-cwrapper_8cpp_1acfd931febeff66dcebc375c9d55f3b73>`(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* s, unsigned long int rows, unsigned long int cols);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_set<doxid-cwrapper_8cpp_1a095b062d78aac21460fcc206333a13cc>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* d);
	char* :ref:`dense_matrix_str<doxid-cwrapper_8cpp_1ad1e948201f86344e84e283c63370d120>`(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s);
	char* :ref:`sparse_matrix_str<doxid-cwrapper_8cpp_1a984f2c4499cf6f29455c6a896f3ff424>`(const :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_rows_cols<doxid-cwrapper_8cpp_1aae5fbb6bb8bd0d3170f4f2eac796d175>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned r, unsigned c);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_get_basic<doxid-cwrapper_8cpp_1a29035d5127b66c22e59df0988e85bd00>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned long int r, unsigned long int c);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_set_basic<doxid-cwrapper_8cpp_1a00de5da94ee215b42892e85b847fdfdd>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned long int r, unsigned long int c, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`sparse_matrix_get_basic<doxid-cwrapper_8cpp_1a6d2d89c27fdaaccda997817096bdf327>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* mat, unsigned long int r, unsigned long int c);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`sparse_matrix_set_basic<doxid-cwrapper_8cpp_1a2b221e21057337e0ca2ad9023ec24925>`(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* mat, unsigned long int r, unsigned long int c, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_det<doxid-cwrapper_8cpp_1ad45328cae3d04b02cbd4d5ab8e9e39d0>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_inv<doxid-cwrapper_8cpp_1a62cf27ffa9a0d7c264f02f2a809062c6>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_transpose<doxid-cwrapper_8cpp_1af9fa0f08119b2bde9fcdf86c5c23d464>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_submatrix<doxid-cwrapper_8cpp_1a6236ec2d9438644ef88cf1d163a16de5>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned long int r1, unsigned long int c1, unsigned long int r2, unsigned long int c2, unsigned long int r, unsigned long int c);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_row_join<doxid-cwrapper_8cpp_1aaa47857df3bd6828b1bc6d0f404cf059>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* B);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_col_join<doxid-cwrapper_8cpp_1a039090a0079db93f39b7fa2da4135c1f>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* B);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_row_del<doxid-cwrapper_8cpp_1a02c4b0b27a323a9a0ea4ab59b43cdbec>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, unsigned k);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_col_del<doxid-cwrapper_8cpp_1a43e0b7103d30b054be461f8061e4c530>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, unsigned k);
	unsigned long int :ref:`dense_matrix_rows<doxid-cwrapper_8cpp_1a5ee5c7757bfc83593ebebf6423433970>`(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s);
	unsigned long int :ref:`dense_matrix_cols<doxid-cwrapper_8cpp_1ab870894f075d089fbfdf7634af688d71>`(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_add_matrix<doxid-cwrapper_8cpp_1a4771b88d88e38e131fd194683e3b567b>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matB);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_mul_matrix<doxid-cwrapper_8cpp_1abb2cde0e31c9f4e4c61873674591ae16>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matB);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_add_scalar<doxid-cwrapper_8cpp_1a61322c8e06d00457e92c84f7dd9c49d5>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_mul_scalar<doxid-cwrapper_8cpp_1a9475315b968b7347f046579630d91424>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_LU<doxid-cwrapper_8cpp_1a9719dd58864733d0e9c92e1f463e16d5>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* l, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* u, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_LDL<doxid-cwrapper_8cpp_1a963d3d9f4e830ab0e8389b069a0d6822>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* l, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* d, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_FFLU<doxid-cwrapper_8cpp_1adb52e1b936ce2cfde462112a9254fcc1>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* lu, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_FFLDU<doxid-cwrapper_8cpp_1a664524af9338e69745f8d43f279c66fb>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* l, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* d, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* u, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_LU_solve<doxid-cwrapper_8cpp_1af3af7124a952d79334a63249593e5d8a>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* x, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_ones<doxid-cwrapper_8cpp_1a76df2ff71252e01780ddfdf0d54e93ef>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, unsigned long int r, unsigned long int c);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_zeros<doxid-cwrapper_8cpp_1a90b1e50d7f04cc359b5b36b95e91c1db>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, unsigned long int r, unsigned long int c);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_diag<doxid-cwrapper_8cpp_1afce78cce62fb8602ca2018102df20b88>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* d, long int k);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_eye<doxid-cwrapper_8cpp_1a896d4f531c4251a03a45f5d136c3e55a>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, unsigned long int N, unsigned long int M, int k);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_diff<doxid-cwrapper_8cpp_1a2adb9eab03c9ae8354ce37343fb31b5d>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* result, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` const x);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_jacobian<doxid-cwrapper_8cpp_1aa8a1f4aa8e288bc57c46da193124fb37>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* result, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* x);
	int :ref:`is_a_DenseMatrix<doxid-cwrapper_8cpp_1ab1556312823aed287c7f6b2a689764cc>`(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* c);
	int :ref:`is_a_SparseMatrix<doxid-cwrapper_8cpp_1a5eb9da0e9c0974fd64980e6711595eb7>`(const :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* c);
	int :ref:`dense_matrix_eq<doxid-cwrapper_8cpp_1a4412707082a19a6d28ea56e870ec7ba7>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* lhs, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* rhs);
	int :ref:`sparse_matrix_eq<doxid-cwrapper_8cpp_1a1cc281bc6ca08350c355612eabd8c7e6>`(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* lhs, :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* rhs);
	:ref:`CSetBasic<doxid-struct_c_set_basic>`* :target:`setbasic_new<doxid-cwrapper_8cpp_1a1f01fdf2148f7b5c4aad7b0e2b7c9bdb>`();
	void :target:`setbasic_free<doxid-cwrapper_8cpp_1a5dba7054c5a7b04657eb9b924b5396be>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self);
	int :ref:`setbasic_insert<doxid-cwrapper_8cpp_1a563e45536600e208e0dd7b318da5de6a>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` value);
	void :target:`setbasic_get<doxid-cwrapper_8cpp_1addcabf3c2478c0d247bf27ece7d6c423>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self, int n, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` result);
	int :ref:`setbasic_find<doxid-cwrapper_8cpp_1a5a72162890f4b80a3065d7ca99bf5080>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` value);
	int :ref:`setbasic_erase<doxid-cwrapper_8cpp_1a846ffa71e778ade1895e81a780dc29ac>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` value);
	size_t :target:`setbasic_size<doxid-cwrapper_8cpp_1a4256ffaddcfa2fed1994900225b238d1>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self);
	:ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* :target:`mapbasicbasic_new<doxid-cwrapper_8cpp_1a9031c6a5352a962005294f57ff51455a>`();
	void :target:`mapbasicbasic_free<doxid-cwrapper_8cpp_1a6dbddadd895c274f8fc01dc8c78afb00>`(:ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* self);
	void :target:`mapbasicbasic_insert<doxid-cwrapper_8cpp_1ac8c4d51838451da0cfb30f98d1adc2e8>`(:ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` key, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` mapped);
	int :ref:`mapbasicbasic_get<doxid-cwrapper_8cpp_1acde3e8c5d508f54736d66d4a4c00d320>`(:ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` key, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` mapped);
	size_t :target:`mapbasicbasic_size<doxid-cwrapper_8cpp_1a2b8e6fdcabc01b0b0ba3eb519d10f32e>`(:ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* self);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_get_args<doxid-cwrapper_8cpp_1a65c9c923033024ae642b9ff33d9abb08>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* args);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_free_symbols<doxid-cwrapper_8cpp_1a3287e422282d12284e8ce38641d328fe>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self, :ref:`CSetBasic<doxid-struct_c_set_basic>`* symbols);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_function_symbols<doxid-cwrapper_8cpp_1a283840b8821277e29a717c92a06360fc>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* symbols, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self);
	size_t :ref:`basic_hash<doxid-cwrapper_8cpp_1ab19d755a1017adc4e60a52bcaf8f6ef0>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_subs<doxid-cwrapper_8cpp_1a0b465e25a14f5d2f2b3187bf596d56d3>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` e, const :ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* mapbb);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_subs2<doxid-cwrapper_8cpp_1a8588e81d6f6808602f67d2de1b49ec1c>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` e, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`function_symbol_set<doxid-cwrapper_8cpp_1a2e7a8b9c419d7db4b39f5cca255f8bf2>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* arg);
	char* :ref:`function_symbol_get_name<doxid-cwrapper_8cpp_1ac1ab6bc090aae327b681ead1a30efdab>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_coeff<doxid-cwrapper_8cpp_1ae676445d52e3c20d86e529db87e369d2>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` x, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`vecbasic_linsolve<doxid-cwrapper_8cpp_1a45323eaae8f5f1c2aa4725a81fba0087>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* sol, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* sys, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* sym);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_solve_poly<doxid-cwrapper_8cpp_1a704a9fc835d6ab08cf35d5aa6de184bf>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* r, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` f, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	char* :ref:`ascii_art_str<doxid-cwrapper_8cpp_1a96aa3a224ee194cc9d47e1098e3e0a0f>`();
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_gcd<doxid-cwrapper_8cpp_1a5e08ddbb7adb8fccfaa9d0b848dacc76>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_lcm<doxid-cwrapper_8cpp_1a020d5a41222e97dccb4e914b29452a48>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_gcd_ext<doxid-cwrapper_8cpp_1a981eacb5a5253eb8e06bd2efd6175d97>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` g, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` t, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_nextprime<doxid-cwrapper_8cpp_1a449801e2625a05b473477e14c2876068>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_mod<doxid-cwrapper_8cpp_1a0035ab01e4ee1fbc38205c370e94853c>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_quotient<doxid-cwrapper_8cpp_1a14bb44d09a45e26641554dae2b8e444a>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_quotient_mod<doxid-cwrapper_8cpp_1a6040f68917193ac99c45b95ef90ca4f1>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` q, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` r, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_mod_f<doxid-cwrapper_8cpp_1adcd15e06804fd597740d66c7f4fa1ede>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_quotient_f<doxid-cwrapper_8cpp_1af8bd21c229f70f4b1f68ce5a54c26be8>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_quotient_mod_f<doxid-cwrapper_8cpp_1abcf51dfdafdd7ff5161af1b525e56053>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` q, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` r, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d);
	int :ref:`ntheory_mod_inverse<doxid-cwrapper_8cpp_1a36614f2a82e2fcd5614ecd5175445ed9>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` m);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_fibonacci<doxid-cwrapper_8cpp_1a078c4823e6732f997654494b97c096b3>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_fibonacci2<doxid-cwrapper_8cpp_1ad9b13c5ab8c3fd31a8d78626549defd1>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` g, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_lucas<doxid-cwrapper_8cpp_1aac41f5cfa8acd87cb10a8e8ac77498c1>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_lucas2<doxid-cwrapper_8cpp_1a441ec1f04e50096d310449a072a5df38>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` g, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_binomial<doxid-cwrapper_8cpp_1a9525012e55bc3749d711663530074a9d>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, unsigned long b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_factorial<doxid-cwrapper_8cpp_1a98b34bc325f0bcd4be5c07cfcb6db170>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long n);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_evalf<doxid-cwrapper_8cpp_1a749a36ddf8111708de9630fc84d534eb>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, unsigned long bits, int real);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_as_numer_denom<doxid-cwrapper_8cpp_1aaf7ece94666c43b31773c82b8c948d8e>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` numer, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` denom, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` x);
	:ref:`CLambdaRealDoubleVisitor<doxid-struct_c_lambda_real_double_visitor>`* :target:`lambda_real_double_visitor_new<doxid-cwrapper_8cpp_1a2bb1f31ebe86b83b3a69c47fcb3edbb9>`();
	void :target:`lambda_real_double_visitor_init<doxid-cwrapper_8cpp_1a6b043ae95fdec64a2f4d255c396d8e4f>`(:ref:`CLambdaRealDoubleVisitor<doxid-struct_c_lambda_real_double_visitor>`* self, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* args, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* exprs, int perform_cse);
	void :target:`lambda_real_double_visitor_call<doxid-cwrapper_8cpp_1acbafb6c5c03eb32881600b8bfa1dc10a>`(:ref:`CLambdaRealDoubleVisitor<doxid-struct_c_lambda_real_double_visitor>`* self, double*const outs, const double*const inps);
	void :target:`lambda_real_double_visitor_free<doxid-cwrapper_8cpp_1aa4218a5c4cbb1e641b9c2d3106ffaee1>`(:ref:`CLambdaRealDoubleVisitor<doxid-struct_c_lambda_real_double_visitor>`* self);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_cse<doxid-cwrapper_8cpp_1a4ce40c59040f62c01c3ce81d976ca5e1>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* replacement_syms, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* replacement_exprs, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* reduced_exprs, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* exprs);
	void :ref:`symengine_print_stack_on_segfault<doxid-cwrapper_8cpp_1affc319585c888358b3fe5af4ab2719ba>`();
	void :ref:`basic_new_stack<doxid-cwrapper_8h_1a54196ef667ac938ca24917115541a9ad>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :ref:`basic_free_stack<doxid-cwrapper_8h_1acef99915592acc9339f4a7d7d0180f0b>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`basic_struct<doxid-cwrapper_8h_1a04b78eb6780256a3b58d734dc92e27bf>`* :target:`basic_new_heap<doxid-cwrapper_8h_1a6e226e49f16ea34a9597ba4e137bde32>`();
	void :target:`basic_free_heap<doxid-cwrapper_8h_1ab1cb5ed2bd28bb7b795d752dd5e3c0fc>`(:ref:`basic_struct<doxid-cwrapper_8h_1a04b78eb6780256a3b58d734dc92e27bf>`* s);
	const char* :target:`symengine_version<doxid-cwrapper_8h_1a02306eeb84b496d7ff94ba929014792b>`();
	void :ref:`basic_const_set<doxid-cwrapper_8h_1a58299cf6d74115a41e39696ca718f1a7>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c);
	void :target:`basic_const_zero<doxid-cwrapper_8h_1a698af3dbf2e8c16df9d2dfe7b77c7700>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_one<doxid-cwrapper_8h_1a78bf29598355651898fa30d64bb7bf2e>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_minus_one<doxid-cwrapper_8h_1a7cc33d51797dbc4153ba7ca4e5a1c712>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_I<doxid-cwrapper_8h_1aa85f344c6fab3f2158d2479602cd725a>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_pi<doxid-cwrapper_8h_1a5c36eff33e166ec8a69762209730d90a>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_E<doxid-cwrapper_8h_1ae3e50d7ffcd0236b0b2d75dde36b3665>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_EulerGamma<doxid-cwrapper_8h_1af5ec97767841b03b792709abebd31c6d>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_Catalan<doxid-cwrapper_8h_1a3dc475f8a0015991164cb94c2e169858>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_GoldenRatio<doxid-cwrapper_8h_1a4f7f255bb089653a6ddc771cb815a582>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :ref:`basic_const_infinity<doxid-cwrapper_8h_1aa1a959449d7a3f0411f162dacda55b48>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_neginfinity<doxid-cwrapper_8h_1a56c4a0a4b9596c483f4e7511860019f4>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :target:`basic_const_complex_infinity<doxid-cwrapper_8h_1a560a60c9d3b2a3dad243fc56f335a452>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :ref:`basic_const_nan<doxid-cwrapper_8h_1afe9e7a98e566edbbdb19c31383d25078>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_assign<doxid-cwrapper_8h_1a45b7ec68408478ae6767a940331a0bdd>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_parse<doxid-cwrapper_8h_1a1537bac2b0c18aae0f13875a4fa4d194>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const char* str);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_parse2<doxid-cwrapper_8h_1a99c63bd83e89fec9d8f27b440aaf2339>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const char* str, int convert_xor);
	:ref:`TypeID<doxid-cwrapper_8h_1a183c40b2ba67065929d70b3987da4cc2>` :ref:`basic_get_type<doxid-cwrapper_8h_1aa2b68725206cacb4f1d8c08bdfe70a94>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`TypeID<doxid-cwrapper_8h_1a183c40b2ba67065929d70b3987da4cc2>` :ref:`basic_get_class_id<doxid-cwrapper_8h_1a098656f21c85ce1bc26a383fedd3dd1c>`(const char* c);
	char* :ref:`basic_get_class_from_id<doxid-cwrapper_8h_1aac524b18690b75a7c03abfb97a690926>`(:ref:`TypeID<doxid-cwrapper_8h_1a183c40b2ba67065929d70b3987da4cc2>` id);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`symbol_set<doxid-cwrapper_8h_1a958b521b9147c8900fd6357beedb65a3>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c);
	int :ref:`number_is_zero<doxid-cwrapper_8h_1a79b8edf92541e11308be7efc2d6fb605>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	int :ref:`number_is_negative<doxid-cwrapper_8h_1abf2c02d93f3c92657ef412089df4182a>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	int :ref:`number_is_positive<doxid-cwrapper_8h_1ab8ed396a33c056fea750b9c903ce6614>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	int :ref:`number_is_complex<doxid-cwrapper_8h_1ae2993f8080c9922224d7fa1713c7256b>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`integer_set_si<doxid-cwrapper_8h_1a315c7dabba2a170f7107e7c826babe43>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, long i);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`integer_set_ui<doxid-cwrapper_8h_1abd422603e0e5b4c64b0a06965a18ec73>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long i);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`integer_set_str<doxid-cwrapper_8h_1af8dae1fad44168da635cb35a1dd23fda>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`real_double_set_d<doxid-cwrapper_8h_1afdbb3af4dfe786e96b56b86a2ee34ac2>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, double d);
	double :ref:`real_double_get_d<doxid-cwrapper_8h_1a2795fa1048031bf82ad1f5a4f5a14378>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`complex_base_real_part<doxid-cwrapper_8h_1aca6758f7b5895c9d052c702c8c2cf329>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` com);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`complex_base_imaginary_part<doxid-cwrapper_8h_1a36513415364a1815bab4fe5fb3f04ded>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` com);
	signed long :ref:`integer_get_si<doxid-cwrapper_8h_1afa785f759688c9dff206cd7c107d0a31>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	unsigned long :ref:`integer_get_ui<doxid-cwrapper_8h_1a0516108b5e81e74591fbf40df1d99319>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`rational_set<doxid-cwrapper_8h_1a4d49fcea586ebd380faf65a9ff55320b>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` i, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` j);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`rational_set_si<doxid-cwrapper_8h_1a0b3415a445293cf5ae1cac6d50c3153c>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, long i, long j);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`rational_set_ui<doxid-cwrapper_8h_1ab9f5aa39e01ee67f4444bc2a12cedfe7>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long i, unsigned long j);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`complex_set<doxid-cwrapper_8h_1a57d61a0dee78521414681917a83280f6>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` re, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` im);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`complex_set_rat<doxid-cwrapper_8h_1adeae8eaccdfe58c7abf98276f1a41b35>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` re, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` im);
	:ref:`dcomplex<doxid-structdcomplex>` :ref:`complex_double_get<doxid-cwrapper_8h_1a1413c9b7b7014fc6d2a9568c21c23fc7>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_add<doxid-cwrapper_8h_1a28b0371a37980ff3e6cecaea567f305a>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_sub<doxid-cwrapper_8h_1a61cf9597dfd516c4b5904ca9a6ff1f2f>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_mul<doxid-cwrapper_8h_1acd4ae951fac6c54963af263295bca9c6>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_div<doxid-cwrapper_8h_1a3c20b6b0bdf6051f0ea3285c74a78fb5>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_pow<doxid-cwrapper_8h_1a5f3f19c558f87d8664189569b0614434>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_diff<doxid-cwrapper_8h_1a4f073559f9810e628d7a00fe57b7ff51>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` expr, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` sym);
	int :ref:`basic_eq<doxid-cwrapper_8h_1ac42208d40a14e0c3e65eb457645b73f0>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	int :ref:`basic_neq<doxid-cwrapper_8h_1a54a69968f134b035c6cdb85253c593c8>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_expand<doxid-cwrapper_8h_1a80fb6bef114ccfee8166bdd80fa64208>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_neg<doxid-cwrapper_8h_1af105493e19ce233ca717219726196bd8>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_abs<doxid-cwrapper_8h_1ad6c76a0b2aec2d5c532ca7ecd98f5a92>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_erf<doxid-cwrapper_8h_1a37be5b5e8878e01f85a19a9f55d03b26>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_erfc<doxid-cwrapper_8h_1a57f188cebde22e3815b2f1e8c24ff371>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_sin<doxid-cwrapper_8h_1a9ca3def6d1b10ff4c0a0f46bcd1eccb9>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_cos<doxid-cwrapper_8h_1a42e5e9f2eed31a9f57ae95f771e1a64b>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_tan<doxid-cwrapper_8h_1a9b25185c5bd7ad508b5e52c7430a7454>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_asin<doxid-cwrapper_8h_1a4080cbf5b5ed0f5a003b7f138c4c6a07>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_acos<doxid-cwrapper_8h_1a29359055eb577e15b1f396b4acc24558>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_atan<doxid-cwrapper_8h_1af8d94e38f52376487aa84157e0f12331>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_csc<doxid-cwrapper_8h_1adabf9cc14b6ed232ad17a7fe85674fe5>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_sec<doxid-cwrapper_8h_1aa49580cde1177dd478a48f76f662dd3d>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_cot<doxid-cwrapper_8h_1a81921aeb49f053364c3b2151cbd4731f>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_acsc<doxid-cwrapper_8h_1af97e6eb64db67b50d2b2b675dd7f4766>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_asec<doxid-cwrapper_8h_1a1e993bfcad503d914843d99ce586b108>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_acot<doxid-cwrapper_8h_1ab0b7d835f1da388adc1fae1c750eb63e>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_sinh<doxid-cwrapper_8h_1adb761c0edfc8fd0cd54119f38e046300>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_cosh<doxid-cwrapper_8h_1a1141888a80bcc33d55b02f8cfa1f0913>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_tanh<doxid-cwrapper_8h_1ada2271bbcdc60efaad2349273370e0d1>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_asinh<doxid-cwrapper_8h_1abaac54cb022e548bde8591848710b104>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_acosh<doxid-cwrapper_8h_1aa1f715da94ab8f5137cdfd3e30baa344>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_atanh<doxid-cwrapper_8h_1aa49eaa21c83c67ae74f1437e1ab904b5>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_csch<doxid-cwrapper_8h_1a24f94f5cda1417e235a7b2f64e2321e9>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_sech<doxid-cwrapper_8h_1aa9937b1f4f1f388bedf014f2f8ea3e31>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_coth<doxid-cwrapper_8h_1aff5e6f9714cbc566c4be4bc7a9f4895d>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_acsch<doxid-cwrapper_8h_1a4acfae9477684eeba5cea82f3dee0f6d>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_asech<doxid-cwrapper_8h_1ae9baec319058b68e846a129de44a9d06>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_acoth<doxid-cwrapper_8h_1abced99cc2682b23da3e129b5435edc56>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_lambertw<doxid-cwrapper_8h_1a189be3593d6a35e1d21b505726d27469>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_zeta<doxid-cwrapper_8h_1a76ae83895270710eec1d1cab7352c22f>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_dirichlet_eta<doxid-cwrapper_8h_1aaa92797fe46dd8b6a6360f077b6001d2>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_gamma<doxid-cwrapper_8h_1a24513440dc9c2758c07fb8d7cae3ff09>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_loggamma<doxid-cwrapper_8h_1afb30719ce252fd251c4b6b1e907df257>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_sqrt<doxid-cwrapper_8h_1ab5c9c6b633d8978176b2b7c8650eea60>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_cbrt<doxid-cwrapper_8h_1a1c9735cd255930b8635a10ab74750bda>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_exp<doxid-cwrapper_8h_1a33bc5ddf4ca5c6e34f9c7e22fb17f86e>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_log<doxid-cwrapper_8h_1a7601a099fad4321f086ebd987e0edb67>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_atan2<doxid-cwrapper_8h_1af5344134640b4f5b0056cecc9a48ac40>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_kronecker_delta<doxid-cwrapper_8h_1ae7bc74144baec31f699fb058a6574099>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_lowergamma<doxid-cwrapper_8h_1a8d64cd0c2ba2e936e32d5e91a7515543>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_uppergamma<doxid-cwrapper_8h_1a2bfe0eb7254f853a8921ba663659cc98>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_beta<doxid-cwrapper_8h_1ae7b06c65425696563c9aea2974a3875a>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_polygamma<doxid-cwrapper_8h_1a5fecd33409a9d5f34b089afb26434226>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	char* :ref:`basic_str<doxid-cwrapper_8h_1a5fdd95d38b751e591697a31c409f5760>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	char* :ref:`basic_str_julia<doxid-cwrapper_8h_1a5c8bcc40596d1443bf91f09df8a6bdb5>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	char* :ref:`basic_str_mathml<doxid-cwrapper_8h_1a8daafffe945b2c2cf94c7ddbcff06b77>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	char* :ref:`basic_str_latex<doxid-cwrapper_8h_1a139a341ac5e3ffd14cfcc3bfe017c2ed>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	char* :ref:`basic_str_ccode<doxid-cwrapper_8h_1a4896f46a76120e7510f1e46393fc6d23>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	char* :ref:`basic_str_jscode<doxid-cwrapper_8h_1a8d5bef384dd36cef57b829b663c1a92e>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	void :ref:`basic_str_free<doxid-cwrapper_8h_1aff49667c1d7a42c4735bf6b9ff96a2db>`(char* s);
	int :ref:`symengine_have_component<doxid-cwrapper_8h_1ae01d22bd7d92e15548fac34620f80d76>`(const char* c);
	int :ref:`is_a_Number<doxid-cwrapper_8h_1a52af55d5d7b0de08ccb4b1d0a3cec37f>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	int :ref:`is_a_Integer<doxid-cwrapper_8h_1a06fef0ac644d09063d0daeafcc986744>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	int :ref:`is_a_Rational<doxid-cwrapper_8h_1a6c063aaa320f2a4c971f581207d87336>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	int :ref:`is_a_Symbol<doxid-cwrapper_8h_1a8080c599e04ed08edcb1810a882eace7>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	int :ref:`is_a_Complex<doxid-cwrapper_8h_1a071d1317fd0fcade2bdaec5c62b56596>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	int :ref:`is_a_RealDouble<doxid-cwrapper_8h_1a35e06853720a494c88caf44536804984>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c);
	int :ref:`is_a_ComplexDouble<doxid-cwrapper_8h_1ab1e31be035ee7f3ebdec6aa4c1a4fd49>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c);
	int :ref:`is_a_RealMPFR<doxid-cwrapper_8h_1a30db359e68d8816e6a9bd85d2688eda1>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c);
	int :ref:`is_a_ComplexMPC<doxid-cwrapper_8h_1a6b6b9d06bc3c726fd899a5ccee77a7ec>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c);
	:ref:`CVectorInt<doxid-struct_c_vector_int>`* :target:`vectorint_new<doxid-cwrapper_8h_1a81505cca0d276d8327ad8deb248cd1b3>`();
	int :target:`vectorint_placement_new_check<doxid-cwrapper_8h_1a1c5a8740a7b6c0fec772ffcfcd0882aa>`(void* data, size_t size);
	:ref:`CVectorInt<doxid-struct_c_vector_int>`* :target:`vectorint_placement_new<doxid-cwrapper_8h_1afc662d5123a8446bddb4ef3b0e240b8e>`(void* data);
	void :target:`vectorint_placement_free<doxid-cwrapper_8h_1a922f5c7ed357467864a3cee3e9d6a59b>`(:ref:`CVectorInt<doxid-struct_c_vector_int>`* self);
	void :target:`vectorint_free<doxid-cwrapper_8h_1a78d2b3bdb75cdb5d15421958b500f119>`(:ref:`CVectorInt<doxid-struct_c_vector_int>`* self);
	void :target:`vectorint_push_back<doxid-cwrapper_8h_1a1f7922fa5d6ba6a5cae9e665af58dd16>`(:ref:`CVectorInt<doxid-struct_c_vector_int>`* self, int value);
	int :target:`vectorint_get<doxid-cwrapper_8h_1a568784e6705f4ad0fd039fbcc557f7ef>`(:ref:`CVectorInt<doxid-struct_c_vector_int>`* self, int n);
	:ref:`CVecBasic<doxid-struct_c_vec_basic>`* :target:`vecbasic_new<doxid-cwrapper_8h_1ac93dbacd33d0749a2e94565bf98b7425>`();
	void :target:`vecbasic_free<doxid-cwrapper_8h_1afc99f895e16eaa8878ff71590bb9d5cc>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* self);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :target:`vecbasic_push_back<doxid-cwrapper_8h_1ab5324dada00ba94fd5a066194585fa97>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` value);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :target:`vecbasic_get<doxid-cwrapper_8h_1a6d548607a7a8e67b2b48aaba241f155f>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* self, size_t n, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` result);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :target:`vecbasic_set<doxid-cwrapper_8h_1a6a53a6ad6370f718877243e65dfa121d>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* self, size_t n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :target:`vecbasic_erase<doxid-cwrapper_8h_1a53dee2879c5cfdf22227aa5dd1b09d0c>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* self, size_t n);
	size_t :target:`vecbasic_size<doxid-cwrapper_8h_1a00e3385a1154127309d8b96e5a9f24e2>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* self);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_max<doxid-cwrapper_8h_1ac2b3fc3520be71aa1899f6c0c40bd274>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* d);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_min<doxid-cwrapper_8h_1a146f0113d0dd20153b46f7ab25d7eea5>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* d);
	:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* :target:`dense_matrix_new<doxid-cwrapper_8h_1a6a079a8d9d3121727c7332424b951c5a>`();
	:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* :target:`sparse_matrix_new<doxid-cwrapper_8h_1affa3d7c3b009f9e73d6a8c3c19d59167>`();
	void :target:`dense_matrix_free<doxid-cwrapper_8h_1a5763a0e06bae1402b84a436687d4bf8d>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* self);
	:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* :ref:`dense_matrix_new_vec<doxid-cwrapper_8h_1aa5fea20962120faf63f29b8aadac5439>`(unsigned rows, unsigned cols, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* l);
	:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* :ref:`dense_matrix_new_rows_cols<doxid-cwrapper_8h_1a1cf793e1e2af134c74793c1f6d4b9a49>`(unsigned r, unsigned c);
	void :target:`sparse_matrix_free<doxid-cwrapper_8h_1a46e3e069881ab39249b7fbd10ca94782>`(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* self);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_set<doxid-cwrapper_8h_1a095b062d78aac21460fcc206333a13cc>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* d);
	char* :ref:`dense_matrix_str<doxid-cwrapper_8h_1ad1e948201f86344e84e283c63370d120>`(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_rows_cols<doxid-cwrapper_8h_1aae5fbb6bb8bd0d3170f4f2eac796d175>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned r, unsigned c);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_get_basic<doxid-cwrapper_8h_1a29035d5127b66c22e59df0988e85bd00>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned long int r, unsigned long int c);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_set_basic<doxid-cwrapper_8h_1a00de5da94ee215b42892e85b847fdfdd>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned long int r, unsigned long int c, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`sparse_matrix_get_basic<doxid-cwrapper_8h_1a6d2d89c27fdaaccda997817096bdf327>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* mat, unsigned long int r, unsigned long int c);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`sparse_matrix_set_basic<doxid-cwrapper_8h_1a2b221e21057337e0ca2ad9023ec24925>`(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* mat, unsigned long int r, unsigned long int c, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_det<doxid-cwrapper_8h_1ad45328cae3d04b02cbd4d5ab8e9e39d0>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_inv<doxid-cwrapper_8h_1a62cf27ffa9a0d7c264f02f2a809062c6>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_transpose<doxid-cwrapper_8h_1af9fa0f08119b2bde9fcdf86c5c23d464>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_submatrix<doxid-cwrapper_8h_1a6236ec2d9438644ef88cf1d163a16de5>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned long int r1, unsigned long int c1, unsigned long int r2, unsigned long int c2, unsigned long int r, unsigned long int c);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_row_join<doxid-cwrapper_8h_1aaa47857df3bd6828b1bc6d0f404cf059>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* B);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_col_join<doxid-cwrapper_8h_1a039090a0079db93f39b7fa2da4135c1f>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* B);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_row_del<doxid-cwrapper_8h_1af75a84ee1456d132dc453fac807acf24>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* C, unsigned k);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_col_del<doxid-cwrapper_8h_1aaf55b509a2b4e2d047014d5c13364dd7>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* C, unsigned k);
	unsigned long int :ref:`dense_matrix_cols<doxid-cwrapper_8h_1ab870894f075d089fbfdf7634af688d71>`(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s);
	unsigned long int :ref:`dense_matrix_rows<doxid-cwrapper_8h_1a5ee5c7757bfc83593ebebf6423433970>`(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_add_matrix<doxid-cwrapper_8h_1a4771b88d88e38e131fd194683e3b567b>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matB);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_mul_matrix<doxid-cwrapper_8h_1abb2cde0e31c9f4e4c61873674591ae16>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matB);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_add_scalar<doxid-cwrapper_8h_1a61322c8e06d00457e92c84f7dd9c49d5>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_mul_scalar<doxid-cwrapper_8h_1a9475315b968b7347f046579630d91424>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_LU<doxid-cwrapper_8h_1a9719dd58864733d0e9c92e1f463e16d5>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* l, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* u, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_LDL<doxid-cwrapper_8h_1a963d3d9f4e830ab0e8389b069a0d6822>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* l, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* d, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_FFLU<doxid-cwrapper_8h_1adb52e1b936ce2cfde462112a9254fcc1>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* lu, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_FFLDU<doxid-cwrapper_8h_1a664524af9338e69745f8d43f279c66fb>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* l, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* d, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* u, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_LU_solve<doxid-cwrapper_8h_1af3af7124a952d79334a63249593e5d8a>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* x, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_ones<doxid-cwrapper_8h_1a76df2ff71252e01780ddfdf0d54e93ef>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, unsigned long int r, unsigned long int c);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_zeros<doxid-cwrapper_8h_1a90b1e50d7f04cc359b5b36b95e91c1db>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, unsigned long int r, unsigned long int c);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_diag<doxid-cwrapper_8h_1afce78cce62fb8602ca2018102df20b88>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* d, long int k);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_eye<doxid-cwrapper_8h_1a896d4f531c4251a03a45f5d136c3e55a>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, unsigned long int N, unsigned long int M, int k);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_diff<doxid-cwrapper_8h_1a2adb9eab03c9ae8354ce37343fb31b5d>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* result, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` const x);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`dense_matrix_jacobian<doxid-cwrapper_8h_1aa8a1f4aa8e288bc57c46da193124fb37>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* result, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* x);
	void :ref:`sparse_matrix_init<doxid-cwrapper_8h_1abaebe3b0dec0903cb6f8e7689d3c861c>`(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* s);
	void :ref:`sparse_matrix_rows_cols<doxid-cwrapper_8h_1a43139880bac11f30a17080c1dde83851>`(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* s, unsigned long int r, unsigned long int c);
	char* :ref:`sparse_matrix_str<doxid-cwrapper_8h_1a984f2c4499cf6f29455c6a896f3ff424>`(const :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* s);
	int :ref:`is_a_DenseMatrix<doxid-cwrapper_8h_1ab1556312823aed287c7f6b2a689764cc>`(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* c);
	int :ref:`is_a_SparseMatrix<doxid-cwrapper_8h_1a5eb9da0e9c0974fd64980e6711595eb7>`(const :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* c);
	int :ref:`dense_matrix_eq<doxid-cwrapper_8h_1a4412707082a19a6d28ea56e870ec7ba7>`(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* lhs, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* rhs);
	int :ref:`sparse_matrix_eq<doxid-cwrapper_8h_1a1cc281bc6ca08350c355612eabd8c7e6>`(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* lhs, :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* rhs);
	:ref:`CSetBasic<doxid-struct_c_set_basic>`* :target:`setbasic_new<doxid-cwrapper_8h_1a1f01fdf2148f7b5c4aad7b0e2b7c9bdb>`();
	void :target:`setbasic_free<doxid-cwrapper_8h_1a5dba7054c5a7b04657eb9b924b5396be>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self);
	int :ref:`setbasic_insert<doxid-cwrapper_8h_1a563e45536600e208e0dd7b318da5de6a>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` value);
	void :target:`setbasic_get<doxid-cwrapper_8h_1addcabf3c2478c0d247bf27ece7d6c423>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self, int n, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` result);
	int :ref:`setbasic_find<doxid-cwrapper_8h_1a5a72162890f4b80a3065d7ca99bf5080>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` value);
	int :ref:`setbasic_erase<doxid-cwrapper_8h_1a846ffa71e778ade1895e81a780dc29ac>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` value);
	size_t :target:`setbasic_size<doxid-cwrapper_8h_1a4256ffaddcfa2fed1994900225b238d1>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self);
	:ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* :target:`mapbasicbasic_new<doxid-cwrapper_8h_1a9031c6a5352a962005294f57ff51455a>`();
	void :target:`mapbasicbasic_free<doxid-cwrapper_8h_1a6dbddadd895c274f8fc01dc8c78afb00>`(:ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* self);
	void :target:`mapbasicbasic_insert<doxid-cwrapper_8h_1ac8c4d51838451da0cfb30f98d1adc2e8>`(:ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` key, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` mapped);
	int :ref:`mapbasicbasic_get<doxid-cwrapper_8h_1acde3e8c5d508f54736d66d4a4c00d320>`(:ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` key, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` mapped);
	size_t :target:`mapbasicbasic_size<doxid-cwrapper_8h_1a2b8e6fdcabc01b0b0ba3eb519d10f32e>`(:ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* self);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_get_args<doxid-cwrapper_8h_1a65c9c923033024ae642b9ff33d9abb08>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* args);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_free_symbols<doxid-cwrapper_8h_1a3287e422282d12284e8ce38641d328fe>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self, :ref:`CSetBasic<doxid-struct_c_set_basic>`* symbols);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_function_symbols<doxid-cwrapper_8h_1a283840b8821277e29a717c92a06360fc>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* symbols, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self);
	size_t :ref:`basic_hash<doxid-cwrapper_8h_1ab19d755a1017adc4e60a52bcaf8f6ef0>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_subs<doxid-cwrapper_8h_1a0b465e25a14f5d2f2b3187bf596d56d3>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` e, const :ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* mapbb);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_subs2<doxid-cwrapper_8h_1a8588e81d6f6808602f67d2de1b49ec1c>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` e, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`function_symbol_set<doxid-cwrapper_8h_1a2e7a8b9c419d7db4b39f5cca255f8bf2>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* arg);
	char* :ref:`function_symbol_get_name<doxid-cwrapper_8h_1ac1ab6bc090aae327b681ead1a30efdab>`(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_coeff<doxid-cwrapper_8h_1ae676445d52e3c20d86e529db87e369d2>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` x, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`vecbasic_linsolve<doxid-cwrapper_8h_1a45323eaae8f5f1c2aa4725a81fba0087>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* sol, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* sys, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* sym);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_solve_poly<doxid-cwrapper_8h_1a704a9fc835d6ab08cf35d5aa6de184bf>`(:ref:`CSetBasic<doxid-struct_c_set_basic>`* r, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` f, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s);
	char* :ref:`ascii_art_str<doxid-cwrapper_8h_1a96aa3a224ee194cc9d47e1098e3e0a0f>`();
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_gcd<doxid-cwrapper_8h_1a5e08ddbb7adb8fccfaa9d0b848dacc76>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_lcm<doxid-cwrapper_8h_1a020d5a41222e97dccb4e914b29452a48>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_gcd_ext<doxid-cwrapper_8h_1a981eacb5a5253eb8e06bd2efd6175d97>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` g, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` t, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_nextprime<doxid-cwrapper_8h_1a449801e2625a05b473477e14c2876068>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_mod<doxid-cwrapper_8h_1a0035ab01e4ee1fbc38205c370e94853c>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_quotient<doxid-cwrapper_8h_1a14bb44d09a45e26641554dae2b8e444a>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_quotient_mod<doxid-cwrapper_8h_1a6040f68917193ac99c45b95ef90ca4f1>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` q, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` r, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_mod_f<doxid-cwrapper_8h_1adcd15e06804fd597740d66c7f4fa1ede>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_quotient_f<doxid-cwrapper_8h_1af8bd21c229f70f4b1f68ce5a54c26be8>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_quotient_mod_f<doxid-cwrapper_8h_1abcf51dfdafdd7ff5161af1b525e56053>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` q, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` r, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d);
	int :ref:`ntheory_mod_inverse<doxid-cwrapper_8h_1a36614f2a82e2fcd5614ecd5175445ed9>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` m);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_fibonacci<doxid-cwrapper_8h_1a078c4823e6732f997654494b97c096b3>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_fibonacci2<doxid-cwrapper_8h_1ad9b13c5ab8c3fd31a8d78626549defd1>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` g, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_lucas<doxid-cwrapper_8h_1aac41f5cfa8acd87cb10a8e8ac77498c1>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_lucas2<doxid-cwrapper_8h_1a441ec1f04e50096d310449a072a5df38>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` g, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_binomial<doxid-cwrapper_8h_1a9525012e55bc3749d711663530074a9d>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, unsigned long b);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`ntheory_factorial<doxid-cwrapper_8h_1a98b34bc325f0bcd4be5c07cfcb6db170>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long n);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_evalf<doxid-cwrapper_8h_1a749a36ddf8111708de9630fc84d534eb>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, unsigned long bits, int real);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_as_numer_denom<doxid-cwrapper_8h_1aaf7ece94666c43b31773c82b8c948d8e>`(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` numer, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` denom, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` x);
	:ref:`CLambdaRealDoubleVisitor<doxid-struct_c_lambda_real_double_visitor>`* :target:`lambda_real_double_visitor_new<doxid-cwrapper_8h_1a2bb1f31ebe86b83b3a69c47fcb3edbb9>`();
	void :target:`lambda_real_double_visitor_init<doxid-cwrapper_8h_1a6b043ae95fdec64a2f4d255c396d8e4f>`(:ref:`CLambdaRealDoubleVisitor<doxid-struct_c_lambda_real_double_visitor>`* self, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* args, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* exprs, int perform_cse);
	void :target:`lambda_real_double_visitor_call<doxid-cwrapper_8h_1acbafb6c5c03eb32881600b8bfa1dc10a>`(:ref:`CLambdaRealDoubleVisitor<doxid-struct_c_lambda_real_double_visitor>`* self, double*const outs, const double*const inps);
	void :target:`lambda_real_double_visitor_free<doxid-cwrapper_8h_1aa4218a5c4cbb1e641b9c2d3106ffaee1>`(:ref:`CLambdaRealDoubleVisitor<doxid-struct_c_lambda_real_double_visitor>`* self);
	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` :ref:`basic_cse<doxid-cwrapper_8h_1a4ce40c59040f62c01c3ce81d976ca5e1>`(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* replacement_syms, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* replacement_exprs, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* reduced_exprs, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* exprs);
	void :ref:`symengine_print_stack_on_segfault<doxid-cwrapper_8h_1affc319585c888358b3fe5af4ab2719ba>`();
	std::ostream& :target:`operator<<<doxid-matrix_8h_1ae979849324e8a4143ccbefc7ceaa28a4>`(std::ostream& out, const :ref:`SymEngine::MatrixBase<doxid-class_sym_engine_1_1_matrix_base>`& A);

	// macros

	#define :target:`ACCEPT<doxid-eval__double_8cpp_1a1ebe684b3cafcf65359fc64596f9787b>`(CLASS)
	#define :target:`ACCEPT<doxid-visitor_8cpp_1a1ebe684b3cafcf65359fc64596f9787b>`(CLASS)
	#define :target:`CWRAPPER_BEGIN<doxid-cwrapper_8cpp_1ab788096748b054da6dca459f8f5601cd>`
	#define :target:`CWRAPPER_END<doxid-cwrapper_8cpp_1a4b2b4f0aee8ffa1e3b446410e834225d>`
	#define :target:`IMPLEMENT_ONE_ARG_FUNC<doxid-cwrapper_8cpp_1a6c483be031339c2123bd45f58870b013>`(func)
	#define :target:`IMPLEMENT_STR_CONVERSION<doxid-cwrapper_8cpp_1a85174e712778442b7b8c87c338f171ac>`(name, func)
	#define :target:`IMPLEMENT_TWO_ARG_FUNC<doxid-cwrapper_8cpp_1aae5722d27403f1bc2908c019b624190a>`(func)
	#define :ref:`IMPLEMENT_TYPEID<doxid-basic_8h_1a945f4a70c3ac1d14cb0637ef01a81b69>`(SYMENGINE_ID)
	#define :target:`SYMENGINE_ASSERT<doxid-symengine__assert_8h_1a2d9ae580203e7425ef9b6d4230d0ad83>`(cond)
	#define :target:`SYMENGINE_ASSERT_MSG<doxid-symengine__assert_8h_1a72212e1c77d488482277bb2983392904>`(cond, msg)
	#define :target:`SYMENGINE_ASSIGN_TYPEID<doxid-basic_8h_1a11ca585c4ad0ddf8e3ea3c13510b1bbc>`()
	#define :target:`SYMENGINE_C_ASSERT<doxid-cwrapper_8h_1a08bb410a1fa4af492bab1e5d83e12168>`(cond)
	#define :target:`SYMENGINE_ENUM<doxid-visitor_8cpp_1a4806471ed102e83b9d860be0f80fdc07>`(TypeID, Class)
	#define :target:`SYMENGINE_ENUM<doxid-eval__double_8cpp_1a4806471ed102e83b9d860be0f80fdc07>`(TypeID, Class)
	#define :target:`SYMENGINE_ENUM<doxid-cwrapper_8h_1a0f1932316136059674ea58fa58109920>`(type, Class)
	#define :target:`SYMENGINE_ENUM<doxid-visitor_8h_1a4806471ed102e83b9d860be0f80fdc07>`(TypeID, Class)
	#define :target:`SYMENGINE_ENUM<doxid-basic_8h_1a0f1932316136059674ea58fa58109920>`(type, Class)
	#define :target:`SYMENGINE_ENUM<doxid-cwrapper_8cpp_1a0f1932316136059674ea58fa58109920>`(type, Class)
	#define :target:`SYMENGINE_ERROR<doxid-symengine__assert_8h_1a2712debdb3b43be74b0471068861ec59>`(description)
	#define :target:`SYMENGINE_INCLUDE_ALL<doxid-cwrapper_8h_1a87c58cfe167897f7fed2477f8f35a2ea>`
	#define :target:`SYMENGINE_INCLUDE_ALL<doxid-basic_8h_1a87c58cfe167897f7fed2477f8f35a2ea>`
	#define :target:`SYMENGINE_INCLUDE_ALL<doxid-cwrapper_8cpp_1a87c58cfe167897f7fed2477f8f35a2ea>`
	#define :target:`SYMENGINE_LOGIC_FUNCTION<doxid-llvm__double_8cpp_1a5f328ecd803c42e6271af4005248f646>`(Class, method)
	#define :target:`SYMENGINE_MACRO_EXTERNAL_FUNCTION<doxid-llvm__double_8cpp_1a6982893cb61b7fd42f6a7600c96deb87>`(Class, ext)
	#define :target:`SYMENGINE_MPZ_WRAPPER_IMPLEMENT_COMMUTATIVE<doxid-mp__wrapper_8h_1af85735661296c2e7aa3c54f386838ad3>`(op, func, op_eq)
	#define :target:`SYMENGINE_MPZ_WRAPPER_IMPLEMENT_IN_PLACE<doxid-mp__wrapper_8h_1a5ec5c1a3feb25484309c23e4b9e898fc>`(op, func)
	#define :target:`SYMENGINE_MPZ_WRAPPER_IMPLEMENT_NON_COMMUTATIVE<doxid-mp__wrapper_8h_1a87cd4130deab4a3f8b8555b71451f934>`(op, func, op_eq)
	#define :target:`SYMENGINE_MPZ_WRAPPER_IMPLEMENT_RELATIONAL<doxid-mp__wrapper_8h_1a46cc0b1211e93934bc8aab1632ecedc3>`(op, func, val, rev_op)
	#define :target:`SYMENGINE_RELATIONAL_FUNCTION<doxid-llvm__double_8cpp_1a884df4aa94bab1bc504bbe7ed2cc42d5>`(Class, method)
	#define :target:`SYMENGINE_SI<doxid-mp__wrapper_8h_1adaf9d44c10134811c6bbdce139d5647c>`(f)
	#define :target:`SYMENGINE_UI<doxid-mp__wrapper_8h_1adc99dae05cdedae61156cb9e414f751f>`(f)
	#define :target:`_SYMENGINE_MACRO_EXTERNAL_FUNCTION<doxid-llvm__double_8cpp_1abcb8998cdda132f7c8bc21d20483bca6>`(Class, ext)
	#define :target:`debug_methods<doxid-derivative_8h_1acf0f99c55e3d3e379af34769948758dd>`
	#define :target:`str<doxid-cwrapper_8cpp_1ad8ab729381f270b100f3d05b6c6676fc>`(s)
	#define :target:`xstr<doxid-cwrapper_8cpp_1aeec40e2b433cc2844853d184006edff0>`(s)

.. _details-global:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Typedefs
--------

.. index:: pair: typedef; dcomplex
.. _doxid-cwrapper_8h_1a2b9c43f8b0058da40200f4035f60934d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct :ref:`dcomplex<doxid-structdcomplex>` dcomplex

Struct to hold the real and imaginary parts of std::complex<double> extracted from basic

.. index:: pair: typedef; basic_struct
.. _doxid-cwrapper_8h_1a04b78eb6780256a3b58d734dc92e27bf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct :ref:`CRCPBasic_C<doxid-struct_c_r_c_p_basic___c>` basic_struct

'basic' is internally implemented as a size 1 array of the type

.. index:: pair: typedef; basic
.. _doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef :ref:`basic_struct<doxid-cwrapper_8h_1a04b78eb6780256a3b58d734dc92e27bf>` basic[1]

Basic is a struct to store the symbolic expressions It is declared as an array of size 1 to force reference semantics

.. index:: pair: typedef; CVectorInt
.. _doxid-cwrapper_8h_1a75b65628d6560cb993fa6146913a9634:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct :ref:`CVectorInt<doxid-struct_c_vector_int>` CVectorInt

Wrapper for std::vector<int>

.. index:: pair: typedef; CVecBasic
.. _doxid-cwrapper_8h_1aa5e610e51a883b63153c4b06d107a459:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct :ref:`CVecBasic<doxid-struct_c_vec_basic>` CVecBasic

Wrapper for vec_basic.

.. index:: pair: typedef; CDenseMatrix
.. _doxid-cwrapper_8h_1a2832a382353b2d4578387fe5255ae2a8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>` CDenseMatrix

Wrappers for Matrices.

.. index:: pair: typedef; CSetBasic
.. _doxid-cwrapper_8h_1a22c75f3e438725c7f4a41b9097df0d58:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct :ref:`CSetBasic<doxid-struct_c_set_basic>` CSetBasic

Wrapper for set_basic.

.. index:: pair: typedef; CMapBasicBasic
.. _doxid-cwrapper_8h_1a80cf40066081c34832264b249b5020aa:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct :ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>` CMapBasicBasic

Wrapper for map_basic_basic.

.. index:: pair: typedef; CLambdaRealDoubleVisitor
.. _doxid-cwrapper_8h_1a0b8f9163ab0bb02c2e6d5b0deff96afb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct :ref:`CLambdaRealDoubleVisitor<doxid-struct_c_lambda_real_double_visitor>` CLambdaRealDoubleVisitor

Wrapper for LambdaRealDoubleVisitor.

Global Functions
----------------

.. index:: pair: function; basic_new_stack
.. _doxid-cwrapper_8cpp_1a54196ef667ac938ca24917115541a9ad:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void basic_new_stack(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Initialize a new basic instance. 's' is allocated on stack using the.

.. index:: pair: function; basic_free_stack
.. _doxid-cwrapper_8cpp_1acef99915592acc9339f4a7d7d0180f0b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void basic_free_stack(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Free the C++ class wrapped by s.

.. index:: pair: function; basic_const_set
.. _doxid-cwrapper_8cpp_1a58299cf6d74115a41e39696ca718f1a7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void basic_const_set(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c)

Use these functions to get the commonly used constants as basic.

Assigns to s a :ref:`SymEngine <doxid-namespace_sym_engine>` constant with name c This function creates a new :ref:`SymEngine::Constant <doxid-class_sym_engine_1_1_constant>` from a copy of the string in c, thus the caller is free to use c afterwards, and also the caller must free c.

.. index:: pair: function; basic_const_infinity
.. _doxid-cwrapper_8cpp_1aa1a959449d7a3f0411f162dacda55b48:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void basic_const_infinity(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Use these functions to get the use of positive, negative or unsigned infinity as basic.

.. index:: pair: function; basic_const_nan
.. _doxid-cwrapper_8cpp_1afe9e7a98e566edbbdb19c31383d25078:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void basic_const_nan(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Use this function to get the use of Nan as basic.

.. index:: pair: function; basic_get_class_id
.. _doxid-cwrapper_8cpp_1a098656f21c85ce1bc26a383fedd3dd1c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`TypeID<doxid-cwrapper_8h_1a183c40b2ba67065929d70b3987da4cc2>` basic_get_class_id(const char* c)

Returns the typeID of the class with the name c.

.. index:: pair: function; basic_get_class_from_id
.. _doxid-cwrapper_8cpp_1aac524b18690b75a7c03abfb97a690926:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* basic_get_class_from_id(:ref:`TypeID<doxid-cwrapper_8h_1a183c40b2ba67065929d70b3987da4cc2>` id)

Returns the class name of an object with the typeid ``id``. The caller is responsible to free the string with 'basic_str_free'

.. index:: pair: function; basic_get_type
.. _doxid-cwrapper_8cpp_1aa2b68725206cacb4f1d8c08bdfe70a94:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`TypeID<doxid-cwrapper_8h_1a183c40b2ba67065929d70b3987da4cc2>` basic_get_type(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns the typeID of the basic struct.

.. index:: pair: function; symbol_set
.. _doxid-cwrapper_8cpp_1a958b521b9147c8900fd6357beedb65a3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` symbol_set(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c)

Assign to s, a symbol with string representation c. This function creates a new :ref:`SymEngine::Symbol <doxid-class_sym_engine_1_1_symbol>` from a copy of the string in c, thus the caller is free to use c afterwards.

.. index:: pair: function; number_is_zero
.. _doxid-cwrapper_8cpp_1a79b8edf92541e11308be7efc2d6fb605:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int number_is_zero(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns 1 if s has value zero; 0 otherwise.

.. index:: pair: function; number_is_negative
.. _doxid-cwrapper_8cpp_1abf2c02d93f3c92657ef412089df4182a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int number_is_negative(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns 1 if s has negative value; 0 otherwise.

.. index:: pair: function; number_is_positive
.. _doxid-cwrapper_8cpp_1ab8ed396a33c056fea750b9c903ce6614:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int number_is_positive(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns 1 if s has positive value; 0 otherwise.

.. index:: pair: function; number_is_complex
.. _doxid-cwrapper_8cpp_1ae2993f8080c9922224d7fa1713c7256b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int number_is_complex(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns 1 if s is complex; 0 otherwise.

.. index:: pair: function; integer_set_si
.. _doxid-cwrapper_8cpp_1a315c7dabba2a170f7107e7c826babe43:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` integer_set_si(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, long i)

Assign to s, a long.

.. index:: pair: function; integer_set_ui
.. _doxid-cwrapper_8cpp_1abd422603e0e5b4c64b0a06965a18ec73:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` integer_set_ui(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long i)

Assign to s, a ulong.

.. index:: pair: function; integer_set_str
.. _doxid-cwrapper_8cpp_1af8dae1fad44168da635cb35a1dd23fda:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` integer_set_str(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c)

Assign to s, a mpz_t.

Assign to s, an integer that has base 10 representation c.

.. index:: pair: function; real_double_set_d
.. _doxid-cwrapper_8cpp_1afdbb3af4dfe786e96b56b86a2ee34ac2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` real_double_set_d(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, double d)

Assign to s, a real_double that has value of d.

.. index:: pair: function; real_double_get_d
.. _doxid-cwrapper_8cpp_1a2795fa1048031bf82ad1f5a4f5a14378:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	double real_double_get_d(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns double value of s.

.. index:: pair: function; complex_base_real_part
.. _doxid-cwrapper_8cpp_1aca6758f7b5895c9d052c702c8c2cf329:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` complex_base_real_part(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` com)

Assign to s, the real part of com.

.. index:: pair: function; complex_base_imaginary_part
.. _doxid-cwrapper_8cpp_1a36513415364a1815bab4fe5fb3f04ded:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` complex_base_imaginary_part(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` com)

Assign to s, the imaginary part of com.

.. index:: pair: function; integer_get_si
.. _doxid-cwrapper_8cpp_1afa785f759688c9dff206cd7c107d0a31:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	signed long integer_get_si(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns signed long value of s.

.. index:: pair: function; integer_get_ui
.. _doxid-cwrapper_8cpp_1a0516108b5e81e74591fbf40df1d99319:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	unsigned long integer_get_ui(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns unsigned long value of s.

.. index:: pair: function; rational_set_si
.. _doxid-cwrapper_8cpp_1a87a1ca17967645d45194b49f3b1a8ac2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` rational_set_si(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, long a, long b)

Assign to s, a rational i/j, where i and j are signed longs.

.. index:: pair: function; rational_set_ui
.. _doxid-cwrapper_8cpp_1a45328b1dd8754b5eb91788b2d780d81c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` rational_set_ui(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a, unsigned long b)

Assign to s, a rational i/j, where i and j are unsigned longs.

.. index:: pair: function; rational_set
.. _doxid-cwrapper_8cpp_1a04b64367e9fac8d5cf7cbd836ef8932d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` rational_set(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` i, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` j)

Returns s as a mpz_t.

Assign to s, a rational i/j. Returns SYMENGINE_RUNTIME_ERROR if either i or j is not an integer.

.. index:: pair: function; complex_set
.. _doxid-cwrapper_8cpp_1a57d61a0dee78521414681917a83280f6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` complex_set(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` re, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` im)

Assign to s, a complex re + i\*im.

.. index:: pair: function; complex_set_rat
.. _doxid-cwrapper_8cpp_1adeae8eaccdfe58c7abf98276f1a41b35:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` complex_set_rat(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` re, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` im)

Assign to s, a complex re + i\*im, where re and im are rationals.

.. index:: pair: function; complex_double_get
.. _doxid-cwrapper_8cpp_1a1413c9b7b7014fc6d2a9568c21c23fc7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`dcomplex<doxid-structdcomplex>` complex_double_get(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Extract the real and imaginary doubles from the std::complex<double> stored in basic

.. index:: pair: function; basic_diff
.. _doxid-cwrapper_8cpp_1a01574ee23014f72c47112a5ac697879b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_diff(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` expr, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` sym)

Assign to s, derivative of expr with respect to sym. Returns SYMENGINE_RUNTIME_ERROR if sym is not a symbol.

.. index:: pair: function; basic_assign
.. _doxid-cwrapper_8cpp_1a45b7ec68408478ae6767a940331a0bdd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_assign(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assign value of b to a.

.. index:: pair: function; basic_parse
.. _doxid-cwrapper_8cpp_1a1537bac2b0c18aae0f13875a4fa4d194:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_parse(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const char* str)

Parse str and assign value to b.

.. index:: pair: function; basic_parse2
.. _doxid-cwrapper_8cpp_1a99c63bd83e89fec9d8f27b440aaf2339:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_parse2(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const char* str, int convert_xor)

Parse str and assign value to b, set convert_xor to > 0 for default usage, <= 0 otherwise.

.. index:: pair: function; basic_add
.. _doxid-cwrapper_8cpp_1a28b0371a37980ff3e6cecaea567f305a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_add(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = a + b.

.. index:: pair: function; basic_sub
.. _doxid-cwrapper_8cpp_1a61cf9597dfd516c4b5904ca9a6ff1f2f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_sub(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = a - b.

.. index:: pair: function; basic_mul
.. _doxid-cwrapper_8cpp_1acd4ae951fac6c54963af263295bca9c6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_mul(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = a \* b.

.. index:: pair: function; basic_pow
.. _doxid-cwrapper_8cpp_1a5f3f19c558f87d8664189569b0614434:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_pow(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = a \*\* b.

.. index:: pair: function; basic_div
.. _doxid-cwrapper_8cpp_1a3c20b6b0bdf6051f0ea3285c74a78fb5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_div(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = a / b.

.. index:: pair: function; basic_eq
.. _doxid-cwrapper_8cpp_1ac42208d40a14e0c3e65eb457645b73f0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int basic_eq(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Returns 1 if both basic are equal, 0 if not.

.. index:: pair: function; basic_neq
.. _doxid-cwrapper_8cpp_1a54a69968f134b035c6cdb85253c593c8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int basic_neq(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Returns 1 if both basic are not equal, 0 if they are.

.. index:: pair: function; basic_str_free
.. _doxid-cwrapper_8cpp_1aff49667c1d7a42c4735bf6b9ff96a2db:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void basic_str_free(char* s)

Frees the string s.

.. index:: pair: function; symengine_have_component
.. _doxid-cwrapper_8cpp_1ae01d22bd7d92e15548fac34620f80d76:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int symengine_have_component(const char* c)

Returns 1 if a specific component is installed and 0 if not. Component can be "mpfr", "flint", "arb", "mpc", "ecm", "primesieve", "piranha", "boost", "pthread", "llvm" or "llvm_long_double" (all in lowercase). This function, using string comparison, was implemented for particular libraries that do not provide header access (i.e. SymEngine.jl and other related shared libraries). Avoid usage while having access to the headers. Instead simply use HAVE_SYMENGINE_MPFR and other related macros directly.

.. index:: pair: function; is_a_Number
.. _doxid-cwrapper_8cpp_1a52af55d5d7b0de08ccb4b1d0a3cec37f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_Number(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Return 1 if s is a Number, 0 if not.

.. index:: pair: function; is_a_Integer
.. _doxid-cwrapper_8cpp_1abb9b98e5b389b0beb6462cfb66ff37bb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_Integer(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c)

Return 1 if s is an Integer, 0 if not.

.. index:: pair: function; is_a_Rational
.. _doxid-cwrapper_8cpp_1aa9b04aeeb589ce690b9f88af2ed31a3e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_Rational(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c)

Return 1 if s is a Rational, 0 if not.

.. index:: pair: function; is_a_Symbol
.. _doxid-cwrapper_8cpp_1a226baaba7ce7dd3256c5c5a7556cad22:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_Symbol(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c)

Return 1 if s is a Symbol, 0 if not.

.. index:: pair: function; is_a_Complex
.. _doxid-cwrapper_8cpp_1a36b6cb4ef1d83b5716176335dc3b6741:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_Complex(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c)

Return 1 if s is a Complex, 0 if not.

.. index:: pair: function; is_a_RealDouble
.. _doxid-cwrapper_8cpp_1a35e06853720a494c88caf44536804984:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_RealDouble(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c)

Return 1 if c is a RealDouble, 0 if not.

.. index:: pair: function; is_a_ComplexDouble
.. _doxid-cwrapper_8cpp_1ab1e31be035ee7f3ebdec6aa4c1a4fd49:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_ComplexDouble(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c)

Return 1 if c is a ComplexDouble, 0 if not.

.. index:: pair: function; is_a_RealMPFR
.. _doxid-cwrapper_8cpp_1a30db359e68d8816e6a9bd85d2688eda1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_RealMPFR(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c)

Return 1 if c is a RealMPFR, 0 if not.

.. index:: pair: function; is_a_ComplexMPC
.. _doxid-cwrapper_8cpp_1a6b6b9d06bc3c726fd899a5ccee77a7ec:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_ComplexMPC(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c)

Return 1 if c is a ComplexMPC, 0 if not.

.. index:: pair: function; basic_max
.. _doxid-cwrapper_8cpp_1ac2b3fc3520be71aa1899f6c0c40bd274:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_max(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* d)

Assigns to s the max of the provided args.

.. index:: pair: function; basic_min
.. _doxid-cwrapper_8cpp_1a146f0113d0dd20153b46f7ab25d7eea5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_min(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* d)

Assigns to s the min of the provided args.

.. index:: pair: function; dense_matrix_new_vec
.. _doxid-cwrapper_8cpp_1aa5fea20962120faf63f29b8aadac5439:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* dense_matrix_new_vec(unsigned rows, unsigned cols, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* l)

Return a DenseMatrix with l's elements.

.. index:: pair: function; dense_matrix_new_rows_cols
.. _doxid-cwrapper_8cpp_1a31f0222f71de0732e33afce35a65dc1d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* dense_matrix_new_rows_cols(unsigned rows, unsigned cols)

Return a DenseMatrix with r rows and c columns.

.. index:: pair: function; sparse_matrix_init
.. _doxid-cwrapper_8cpp_1abaebe3b0dec0903cb6f8e7689d3c861c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void sparse_matrix_init(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* s)

Assign to s, a CSRMatrix.

.. index:: pair: function; sparse_matrix_rows_cols
.. _doxid-cwrapper_8cpp_1acfd931febeff66dcebc375c9d55f3b73:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void sparse_matrix_rows_cols(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* s, unsigned long int rows, unsigned long int cols)

Assign to s, a CSRMatrix with r rows and c columns.

.. index:: pair: function; dense_matrix_set
.. _doxid-cwrapper_8cpp_1a095b062d78aac21460fcc206333a13cc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_set(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* d)

Assign to s, a DenseMatrix with value d.

.. index:: pair: function; dense_matrix_str
.. _doxid-cwrapper_8cpp_1ad1e948201f86344e84e283c63370d120:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* dense_matrix_str(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s)

Return a string representation of s. The caller is responsible to free the string with 'basic_str_free'

.. index:: pair: function; sparse_matrix_str
.. _doxid-cwrapper_8cpp_1a984f2c4499cf6f29455c6a896f3ff424:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* sparse_matrix_str(const :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* s)

Return a string representation of s.

.. index:: pair: function; dense_matrix_rows_cols
.. _doxid-cwrapper_8cpp_1aae5fbb6bb8bd0d3170f4f2eac796d175:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_rows_cols(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned r, unsigned c)

Resize mat to rxc.

.. index:: pair: function; dense_matrix_get_basic
.. _doxid-cwrapper_8cpp_1a29035d5127b66c22e59df0988e85bd00:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_get_basic(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned long int r, unsigned long int c)

Assign to s, mat[r][c].

.. index:: pair: function; dense_matrix_set_basic
.. _doxid-cwrapper_8cpp_1a00de5da94ee215b42892e85b847fdfdd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_set_basic(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned long int r, unsigned long int c, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Assign s to mat[r][c].

.. index:: pair: function; sparse_matrix_get_basic
.. _doxid-cwrapper_8cpp_1a6d2d89c27fdaaccda997817096bdf327:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` sparse_matrix_get_basic(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* mat, unsigned long int r, unsigned long int c)

Assign to s, mat[r][c].

.. index:: pair: function; sparse_matrix_set_basic
.. _doxid-cwrapper_8cpp_1a2b221e21057337e0ca2ad9023ec24925:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` sparse_matrix_set_basic(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* mat, unsigned long int r, unsigned long int c, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Assign s to mat[r][c].

.. index:: pair: function; dense_matrix_det
.. _doxid-cwrapper_8cpp_1ad45328cae3d04b02cbd4d5ab8e9e39d0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_det(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat)

Assign to s, determinent of mat.

.. index:: pair: function; dense_matrix_inv
.. _doxid-cwrapper_8cpp_1a62cf27ffa9a0d7c264f02f2a809062c6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_inv(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat)

Assign to s, a DenseMatrix which is the inverse of mat.

.. index:: pair: function; dense_matrix_transpose
.. _doxid-cwrapper_8cpp_1af9fa0f08119b2bde9fcdf86c5c23d464:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_transpose(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat)

Assign to s, a DenseMatrix which is the transpose of mat.

.. index:: pair: function; dense_matrix_submatrix
.. _doxid-cwrapper_8cpp_1a6236ec2d9438644ef88cf1d163a16de5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_submatrix(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned long int r1, unsigned long int c1, unsigned long int r2, unsigned long int c2, unsigned long int r, unsigned long int c)

Assign to s, a SubMatrix of mat, starting with [r1, r2] until [r2, c2], with step sizes [r, c]

.. index:: pair: function; dense_matrix_row_join
.. _doxid-cwrapper_8cpp_1aaa47857df3bd6828b1bc6d0f404cf059:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_row_join(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* B)

The matrix which results from joining the rows of A and B.

.. index:: pair: function; dense_matrix_col_join
.. _doxid-cwrapper_8cpp_1a039090a0079db93f39b7fa2da4135c1f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_col_join(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* B)

The matrix which results from joining the columns of A and B.

.. index:: pair: function; dense_matrix_row_del
.. _doxid-cwrapper_8cpp_1a02c4b0b27a323a9a0ea4ab59b43cdbec:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_row_del(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, unsigned k)

Delete a specific row of the matrix.

.. index:: pair: function; dense_matrix_col_del
.. _doxid-cwrapper_8cpp_1a43e0b7103d30b054be461f8061e4c530:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_col_del(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, unsigned k)

Delete a specific column of the matrix.

.. index:: pair: function; dense_matrix_rows
.. _doxid-cwrapper_8cpp_1a5ee5c7757bfc83593ebebf6423433970:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	unsigned long int dense_matrix_rows(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s)

Return the number of rows of s.

.. index:: pair: function; dense_matrix_cols
.. _doxid-cwrapper_8cpp_1ab870894f075d089fbfdf7634af688d71:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	unsigned long int dense_matrix_cols(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s)

Return the number of columns of s.

.. index:: pair: function; dense_matrix_add_matrix
.. _doxid-cwrapper_8cpp_1a4771b88d88e38e131fd194683e3b567b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_add_matrix(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matB)

Assign to s, the addition of matA and matB.

.. index:: pair: function; dense_matrix_mul_matrix
.. _doxid-cwrapper_8cpp_1abb2cde0e31c9f4e4c61873674591ae16:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_mul_matrix(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matB)

Assign to s, the matrix multiplication of matA and matB.

.. index:: pair: function; dense_matrix_add_scalar
.. _doxid-cwrapper_8cpp_1a61322c8e06d00457e92c84f7dd9c49d5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_add_scalar(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assign to s, the addition of scalar b to matrix matA.

.. index:: pair: function; dense_matrix_mul_scalar
.. _doxid-cwrapper_8cpp_1a9475315b968b7347f046579630d91424:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_mul_scalar(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assign to s, the multiplication of scalar b to matrix matA.

.. index:: pair: function; dense_matrix_LU
.. _doxid-cwrapper_8cpp_1a9719dd58864733d0e9c92e1f463e16d5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_LU(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* l, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* u, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat)

Assign to l and u, LU factorization of mat.

.. index:: pair: function; dense_matrix_LDL
.. _doxid-cwrapper_8cpp_1a963d3d9f4e830ab0e8389b069a0d6822:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_LDL(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* l, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* d, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat)

Assign to l and d, LDL factorization of mat.

.. index:: pair: function; dense_matrix_FFLU
.. _doxid-cwrapper_8cpp_1adb52e1b936ce2cfde462112a9254fcc1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_FFLU(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* lu, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat)

Assign to lu, fraction free LU factorization of mat.

.. index:: pair: function; dense_matrix_FFLDU
.. _doxid-cwrapper_8cpp_1a664524af9338e69745f8d43f279c66fb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_FFLDU(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* l, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* d, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* u, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat)

Assign to l, d and u, FFLDU factorization of mat.

.. index:: pair: function; dense_matrix_LU_solve
.. _doxid-cwrapper_8cpp_1af3af7124a952d79334a63249593e5d8a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_LU_solve(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* x, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* b)

Assign to x, solution to A x = b.

.. index:: pair: function; dense_matrix_ones
.. _doxid-cwrapper_8cpp_1a76df2ff71252e01780ddfdf0d54e93ef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_ones(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, unsigned long int r, unsigned long int c)

Assign to s, a matrix of ones of size rxc.

.. index:: pair: function; dense_matrix_zeros
.. _doxid-cwrapper_8cpp_1a90b1e50d7f04cc359b5b36b95e91c1db:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_zeros(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, unsigned long int r, unsigned long int c)

Assign to s, a matrix of zeros of size rxc.

.. index:: pair: function; dense_matrix_diag
.. _doxid-cwrapper_8cpp_1afce78cce62fb8602ca2018102df20b88:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_diag(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* d, long int k)

Assign to s, a diagonal matrix with a diagonal at offset k, with elements in d

.. index:: pair: function; dense_matrix_eye
.. _doxid-cwrapper_8cpp_1a896d4f531c4251a03a45f5d136c3e55a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_eye(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, unsigned long int N, unsigned long int M, int k)

Assign to s, a matrix of size NxM, with diagonal of 1s at offset k.

.. index:: pair: function; dense_matrix_diff
.. _doxid-cwrapper_8cpp_1a2adb9eab03c9ae8354ce37343fb31b5d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_diff(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* result, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` const x)

Assign to result, elementwise derivative of A with respect to x. Returns 0 on success.

.. index:: pair: function; dense_matrix_jacobian
.. _doxid-cwrapper_8cpp_1aa8a1f4aa8e288bc57c46da193124fb37:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_jacobian(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* result, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* x)

Assign to result, jacobian of A with respect to x. Returns 0 on success.

.. index:: pair: function; is_a_DenseMatrix
.. _doxid-cwrapper_8cpp_1ab1556312823aed287c7f6b2a689764cc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_DenseMatrix(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* c)

Return 1 if c is a DenseMatrix, 0 if not.

.. index:: pair: function; is_a_SparseMatrix
.. _doxid-cwrapper_8cpp_1a5eb9da0e9c0974fd64980e6711595eb7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_SparseMatrix(const :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* c)

Return 1 if c is a SparseMatrix, 0 if not.

.. index:: pair: function; dense_matrix_eq
.. _doxid-cwrapper_8cpp_1a4412707082a19a6d28ea56e870ec7ba7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int dense_matrix_eq(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* lhs, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* rhs)

Return 1 if lhs == rhs, 0 if not.

.. index:: pair: function; sparse_matrix_eq
.. _doxid-cwrapper_8cpp_1a1cc281bc6ca08350c355612eabd8c7e6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int sparse_matrix_eq(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* lhs, :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* rhs)

Return 1 if lhs == rhs, 0 if not.

.. index:: pair: function; setbasic_insert
.. _doxid-cwrapper_8cpp_1a563e45536600e208e0dd7b318da5de6a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int setbasic_insert(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` value)

Returns 1 if insert is successful and 0 if set already contains the value and insertion is unsuccessful

.. index:: pair: function; setbasic_find
.. _doxid-cwrapper_8cpp_1a5a72162890f4b80a3065d7ca99bf5080:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int setbasic_find(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` value)

Returns 1 if value is found in the set and 0 if not.

.. index:: pair: function; setbasic_erase
.. _doxid-cwrapper_8cpp_1a846ffa71e778ade1895e81a780dc29ac:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int setbasic_erase(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` value)

Returns 1 if value was erased from the set and 0 if not.

.. index:: pair: function; mapbasicbasic_get
.. _doxid-cwrapper_8cpp_1acde3e8c5d508f54736d66d4a4c00d320:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int mapbasicbasic_get(:ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` key, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` mapped)

Returns 1 if such a key exists in the map and get is successful, 0 if not.

.. index:: pair: function; basic_get_args
.. _doxid-cwrapper_8cpp_1a65c9c923033024ae642b9ff33d9abb08:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_get_args(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* args)

Returns a :ref:`CVecBasic <doxid-struct_c_vec_basic>` of vec_basic given by get_args.

.. index:: pair: function; basic_free_symbols
.. _doxid-cwrapper_8cpp_1a3287e422282d12284e8ce38641d328fe:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_free_symbols(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self, :ref:`CSetBasic<doxid-struct_c_set_basic>`* symbols)

Returns a :ref:`CSetBasic <doxid-struct_c_set_basic>` of set_basic given by free_symbols.

.. index:: pair: function; basic_function_symbols
.. _doxid-cwrapper_8cpp_1a283840b8821277e29a717c92a06360fc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_function_symbols(:ref:`CSetBasic<doxid-struct_c_set_basic>`* symbols, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self)

Returns a :ref:`CSetBasic <doxid-struct_c_set_basic>` of set_basic given by function_symbols.

.. index:: pair: function; basic_hash
.. _doxid-cwrapper_8cpp_1ab19d755a1017adc4e60a52bcaf8f6ef0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t basic_hash(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self)

returns the hash of the Basic object

.. index:: pair: function; basic_subs
.. _doxid-cwrapper_8cpp_1a0b465e25a14f5d2f2b3187bf596d56d3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_subs(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` e, const :ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* mapbb)

substitutes all the keys with their mapped values in the given basic ``e`` and returns it through basic 's'

.. index:: pair: function; basic_subs2
.. _doxid-cwrapper_8cpp_1a8588e81d6f6808602f67d2de1b49ec1c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_subs2(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` e, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

substitutes a basic 'a' with another basic 'b', in the given basic 'e' and returns it through basic 's'

.. index:: pair: function; function_symbol_set
.. _doxid-cwrapper_8cpp_1a2e7a8b9c419d7db4b39f5cca255f8bf2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` function_symbol_set(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* arg)

Assigns to s a FunctionSymbol with name described by c, with dependent symbols arg

.. index:: pair: function; function_symbol_get_name
.. _doxid-cwrapper_8cpp_1ac1ab6bc090aae327b681ead1a30efdab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* function_symbol_get_name(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Returns the name of the given FunctionSymbol. The caller is responsible to free the string with 'basic_str_free'

.. index:: pair: function; basic_coeff
.. _doxid-cwrapper_8cpp_1ae676445d52e3c20d86e529db87e369d2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_coeff(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` x, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n)

Returns the coefficient of x^n in b.

.. index:: pair: function; vecbasic_linsolve
.. _doxid-cwrapper_8cpp_1a45323eaae8f5f1c2aa4725a81fba0087:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` vecbasic_linsolve(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* sol, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* sys, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* sym)

Wrapper for ``solve.h``.

Solves the system of linear equations given by sys

.. index:: pair: function; basic_solve_poly
.. _doxid-cwrapper_8cpp_1a704a9fc835d6ab08cf35d5aa6de184bf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_solve_poly(:ref:`CSetBasic<doxid-struct_c_set_basic>`* r, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` f, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Solves polynomial equation f if the set of solutions is finite.

.. index:: pair: function; ascii_art_str
.. _doxid-cwrapper_8cpp_1a96aa3a224ee194cc9d47e1098e3e0a0f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* ascii_art_str()

Wrapper for :ref:`ascii_art() <doxid-namespace_sym_engine_1a0abfe74379edd0eacdf5d82909c13b00>`

Returns a new char pointer to the ascii_art string The caller is responsible to free the pointer using 'basic_str_free'.

.. index:: pair: function; ntheory_gcd
.. _doxid-cwrapper_8cpp_1a5e08ddbb7adb8fccfaa9d0b848dacc76:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_gcd(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Wrapper for ntheory Greatest Common Divisor

.. index:: pair: function; ntheory_lcm
.. _doxid-cwrapper_8cpp_1a020d5a41222e97dccb4e914b29452a48:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_lcm(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Least Common Multiple.

.. index:: pair: function; ntheory_gcd_ext
.. _doxid-cwrapper_8cpp_1a981eacb5a5253eb8e06bd2efd6175d97:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_gcd_ext(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` g, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` t, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Extended GCD.

.. index:: pair: function; ntheory_nextprime
.. _doxid-cwrapper_8cpp_1a449801e2625a05b473477e14c2876068:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_nextprime(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)



.. rubric:: Returns:

next prime after ``a``

.. index:: pair: function; ntheory_mod
.. _doxid-cwrapper_8cpp_1a0035ab01e4ee1fbc38205c370e94853c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_mod(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d)

modulo round toward zero

.. index:: pair: function; ntheory_quotient
.. _doxid-cwrapper_8cpp_1a14bb44d09a45e26641554dae2b8e444a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_quotient(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d)



.. rubric:: Returns:

quotient round toward zero when ``n`` is divided by ``d``

.. index:: pair: function; ntheory_quotient_mod
.. _doxid-cwrapper_8cpp_1a6040f68917193ac99c45b95ef90ca4f1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_quotient_mod(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` q, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` r, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d)



.. rubric:: Returns:

modulo and quotient round toward zero

.. index:: pair: function; ntheory_mod_f
.. _doxid-cwrapper_8cpp_1adcd15e06804fd597740d66c7f4fa1ede:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_mod_f(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d)

modulo round toward -inf

.. index:: pair: function; ntheory_quotient_f
.. _doxid-cwrapper_8cpp_1af8bd21c229f70f4b1f68ce5a54c26be8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_quotient_f(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d)



.. rubric:: Returns:

quotient round toward -inf when ``n`` is divided by ``d``

.. index:: pair: function; ntheory_quotient_mod_f
.. _doxid-cwrapper_8cpp_1abcf51dfdafdd7ff5161af1b525e56053:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_quotient_mod_f(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` q, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` r, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d)



.. rubric:: Returns:

modulo and quotient round toward -inf

.. index:: pair: function; ntheory_mod_inverse
.. _doxid-cwrapper_8cpp_1a36614f2a82e2fcd5614ecd5175445ed9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int ntheory_mod_inverse(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` m)

inverse modulo

.. index:: pair: function; ntheory_fibonacci
.. _doxid-cwrapper_8cpp_1a078c4823e6732f997654494b97c096b3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_fibonacci(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a)

nth Fibonacci number // fibonacci(0) = 0 and fibonacci(1) = 1

.. index:: pair: function; ntheory_fibonacci2
.. _doxid-cwrapper_8cpp_1ad9b13c5ab8c3fd31a8d78626549defd1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_fibonacci2(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` g, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a)

Fibonacci n and n-1.

.. index:: pair: function; ntheory_lucas
.. _doxid-cwrapper_8cpp_1aac41f5cfa8acd87cb10a8e8ac77498c1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_lucas(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a)

Lucas number.

.. index:: pair: function; ntheory_lucas2
.. _doxid-cwrapper_8cpp_1a441ec1f04e50096d310449a072a5df38:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_lucas2(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` g, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a)

Lucas number n and n-1.

.. index:: pair: function; ntheory_binomial
.. _doxid-cwrapper_8cpp_1a9525012e55bc3749d711663530074a9d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_binomial(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, unsigned long b)

Binomial Coefficient.

.. index:: pair: function; ntheory_factorial
.. _doxid-cwrapper_8cpp_1a98b34bc325f0bcd4be5c07cfcb6db170:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_factorial(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long n)

Factorial.

.. index:: pair: function; basic_evalf
.. _doxid-cwrapper_8cpp_1a749a36ddf8111708de9630fc84d534eb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_evalf(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, unsigned long bits, int real)

Wrapper for evalf.

Evaluate b and assign the value to s.

.. index:: pair: function; basic_as_numer_denom
.. _doxid-cwrapper_8cpp_1aaf7ece94666c43b31773c82b8c948d8e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_as_numer_denom(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` numer, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` denom, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` x)

Wrapper for as_numer_denom.

.. index:: pair: function; basic_cse
.. _doxid-cwrapper_8cpp_1a4ce40c59040f62c01c3ce81d976ca5e1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_cse(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* replacement_syms, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* replacement_exprs, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* reduced_exprs, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* exprs)

Wrapper for LambdaRealDoubleVisitor.

.. index:: pair: function; symengine_print_stack_on_segfault
.. _doxid-cwrapper_8cpp_1affc319585c888358b3fe5af4ab2719ba:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void symengine_print_stack_on_segfault()

Print stacktrace on segfault.

.. index:: pair: function; basic_new_stack
.. _doxid-cwrapper_8h_1a54196ef667ac938ca24917115541a9ad:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void basic_new_stack(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Initialize a new basic instance. 's' is allocated on stack using the.

.. index:: pair: function; basic_free_stack
.. _doxid-cwrapper_8h_1acef99915592acc9339f4a7d7d0180f0b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void basic_free_stack(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Free the C++ class wrapped by s.

.. index:: pair: function; basic_const_set
.. _doxid-cwrapper_8h_1a58299cf6d74115a41e39696ca718f1a7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void basic_const_set(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c)

Use these functions to get the commonly used constants as basic.

Assigns to s a :ref:`SymEngine <doxid-namespace_sym_engine>` constant with name c This function creates a new :ref:`SymEngine::Constant <doxid-class_sym_engine_1_1_constant>` from a copy of the string in c, thus the caller is free to use c afterwards, and also the caller must free c.

.. index:: pair: function; basic_const_infinity
.. _doxid-cwrapper_8h_1aa1a959449d7a3f0411f162dacda55b48:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void basic_const_infinity(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Use these functions to get the use of positive, negative or unsigned infinity as basic.

.. index:: pair: function; basic_const_nan
.. _doxid-cwrapper_8h_1afe9e7a98e566edbbdb19c31383d25078:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void basic_const_nan(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Use this function to get the use of Nan as basic.

.. index:: pair: function; basic_assign
.. _doxid-cwrapper_8h_1a45b7ec68408478ae6767a940331a0bdd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_assign(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assign value of b to a.

.. index:: pair: function; basic_parse
.. _doxid-cwrapper_8h_1a1537bac2b0c18aae0f13875a4fa4d194:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_parse(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const char* str)

Parse str and assign value to b.

.. index:: pair: function; basic_parse2
.. _doxid-cwrapper_8h_1a99c63bd83e89fec9d8f27b440aaf2339:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_parse2(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const char* str, int convert_xor)

Parse str and assign value to b, set convert_xor to > 0 for default usage, <= 0 otherwise.

.. index:: pair: function; basic_get_type
.. _doxid-cwrapper_8h_1aa2b68725206cacb4f1d8c08bdfe70a94:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`TypeID<doxid-cwrapper_8h_1a183c40b2ba67065929d70b3987da4cc2>` basic_get_type(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns the typeID of the basic struct.

.. index:: pair: function; basic_get_class_id
.. _doxid-cwrapper_8h_1a098656f21c85ce1bc26a383fedd3dd1c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`TypeID<doxid-cwrapper_8h_1a183c40b2ba67065929d70b3987da4cc2>` basic_get_class_id(const char* c)

Returns the typeID of the class with the name c.

.. index:: pair: function; basic_get_class_from_id
.. _doxid-cwrapper_8h_1aac524b18690b75a7c03abfb97a690926:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* basic_get_class_from_id(:ref:`TypeID<doxid-cwrapper_8h_1a183c40b2ba67065929d70b3987da4cc2>` id)

Returns the class name of an object with the typeid ``id``. The caller is responsible to free the string with 'basic_str_free'

.. index:: pair: function; symbol_set
.. _doxid-cwrapper_8h_1a958b521b9147c8900fd6357beedb65a3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` symbol_set(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c)

Assign to s, a symbol with string representation c. This function creates a new :ref:`SymEngine::Symbol <doxid-class_sym_engine_1_1_symbol>` from a copy of the string in c, thus the caller is free to use c afterwards.

.. index:: pair: function; number_is_zero
.. _doxid-cwrapper_8h_1a79b8edf92541e11308be7efc2d6fb605:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int number_is_zero(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns 1 if s has value zero; 0 otherwise.

.. index:: pair: function; number_is_negative
.. _doxid-cwrapper_8h_1abf2c02d93f3c92657ef412089df4182a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int number_is_negative(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns 1 if s has negative value; 0 otherwise.

.. index:: pair: function; number_is_positive
.. _doxid-cwrapper_8h_1ab8ed396a33c056fea750b9c903ce6614:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int number_is_positive(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns 1 if s has positive value; 0 otherwise.

.. index:: pair: function; number_is_complex
.. _doxid-cwrapper_8h_1ae2993f8080c9922224d7fa1713c7256b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int number_is_complex(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns 1 if s is complex; 0 otherwise.

.. index:: pair: function; integer_set_si
.. _doxid-cwrapper_8h_1a315c7dabba2a170f7107e7c826babe43:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` integer_set_si(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, long i)

Assign to s, a long.

.. index:: pair: function; integer_set_ui
.. _doxid-cwrapper_8h_1abd422603e0e5b4c64b0a06965a18ec73:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` integer_set_ui(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long i)

Assign to s, a ulong.

.. index:: pair: function; integer_set_str
.. _doxid-cwrapper_8h_1af8dae1fad44168da635cb35a1dd23fda:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` integer_set_str(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c)

Assign to s, a mpz_t.

Assign to s, an integer that has base 10 representation c.

.. index:: pair: function; real_double_set_d
.. _doxid-cwrapper_8h_1afdbb3af4dfe786e96b56b86a2ee34ac2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` real_double_set_d(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, double d)

Assign to s, a real_double that has value of d.

.. index:: pair: function; real_double_get_d
.. _doxid-cwrapper_8h_1a2795fa1048031bf82ad1f5a4f5a14378:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	double real_double_get_d(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns double value of s.

.. index:: pair: function; complex_base_real_part
.. _doxid-cwrapper_8h_1aca6758f7b5895c9d052c702c8c2cf329:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` complex_base_real_part(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` com)

Assign to s, the real part of com.

.. index:: pair: function; complex_base_imaginary_part
.. _doxid-cwrapper_8h_1a36513415364a1815bab4fe5fb3f04ded:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` complex_base_imaginary_part(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` com)

Assign to s, the imaginary part of com.

.. index:: pair: function; integer_get_si
.. _doxid-cwrapper_8h_1afa785f759688c9dff206cd7c107d0a31:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	signed long integer_get_si(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns signed long value of s.

.. index:: pair: function; integer_get_ui
.. _doxid-cwrapper_8h_1a0516108b5e81e74591fbf40df1d99319:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	unsigned long integer_get_ui(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns unsigned long value of s.

.. index:: pair: function; rational_set
.. _doxid-cwrapper_8h_1a4d49fcea586ebd380faf65a9ff55320b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` rational_set(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` i, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` j)

Returns s as a mpz_t.

Assign to s, a rational i/j. Returns SYMENGINE_RUNTIME_ERROR if either i or j is not an integer.

.. index:: pair: function; rational_set_si
.. _doxid-cwrapper_8h_1a0b3415a445293cf5ae1cac6d50c3153c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` rational_set_si(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, long i, long j)

Assign to s, a rational i/j, where i and j are signed longs.

.. index:: pair: function; rational_set_ui
.. _doxid-cwrapper_8h_1ab9f5aa39e01ee67f4444bc2a12cedfe7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` rational_set_ui(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long i, unsigned long j)

Assign to s, a rational i/j, where i and j are unsigned longs.

.. index:: pair: function; complex_set
.. _doxid-cwrapper_8h_1a57d61a0dee78521414681917a83280f6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` complex_set(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` re, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` im)

Assign to s, a complex re + i\*im.

.. index:: pair: function; complex_set_rat
.. _doxid-cwrapper_8h_1adeae8eaccdfe58c7abf98276f1a41b35:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` complex_set_rat(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` re, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` im)

Assign to s, a complex re + i\*im, where re and im are rationals.

.. index:: pair: function; complex_double_get
.. _doxid-cwrapper_8h_1a1413c9b7b7014fc6d2a9568c21c23fc7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`dcomplex<doxid-structdcomplex>` complex_double_get(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Extract the real and imaginary doubles from the std::complex<double> stored in basic

.. index:: pair: function; basic_add
.. _doxid-cwrapper_8h_1a28b0371a37980ff3e6cecaea567f305a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_add(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = a + b.

.. index:: pair: function; basic_sub
.. _doxid-cwrapper_8h_1a61cf9597dfd516c4b5904ca9a6ff1f2f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_sub(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = a - b.

.. index:: pair: function; basic_mul
.. _doxid-cwrapper_8h_1acd4ae951fac6c54963af263295bca9c6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_mul(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = a \* b.

.. index:: pair: function; basic_div
.. _doxid-cwrapper_8h_1a3c20b6b0bdf6051f0ea3285c74a78fb5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_div(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = a / b.

.. index:: pair: function; basic_pow
.. _doxid-cwrapper_8h_1a5f3f19c558f87d8664189569b0614434:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_pow(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = a \*\* b.

.. index:: pair: function; basic_diff
.. _doxid-cwrapper_8h_1a4f073559f9810e628d7a00fe57b7ff51:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_diff(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` expr, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` sym)

Assign to s, derivative of expr with respect to sym. Returns SYMENGINE_RUNTIME_ERROR if sym is not a symbol.

.. index:: pair: function; basic_eq
.. _doxid-cwrapper_8h_1ac42208d40a14e0c3e65eb457645b73f0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int basic_eq(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Returns 1 if both basic are equal, 0 if not.

.. index:: pair: function; basic_neq
.. _doxid-cwrapper_8h_1a54a69968f134b035c6cdb85253c593c8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int basic_neq(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Returns 1 if both basic are not equal, 0 if they are.

.. index:: pair: function; basic_expand
.. _doxid-cwrapper_8h_1a80fb6bef114ccfee8166bdd80fa64208:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_expand(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Expands the expr a and assigns to s.

.. index:: pair: function; basic_neg
.. _doxid-cwrapper_8h_1af105493e19ce233ca717219726196bd8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_neg(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = -a.

.. index:: pair: function; basic_abs
.. _doxid-cwrapper_8h_1ad6c76a0b2aec2d5c532ca7ecd98f5a92:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_abs(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = abs(a).

.. index:: pair: function; basic_erf
.. _doxid-cwrapper_8h_1a37be5b5e8878e01f85a19a9f55d03b26:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_erf(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = erf(a).

.. index:: pair: function; basic_erfc
.. _doxid-cwrapper_8h_1a57f188cebde22e3815b2f1e8c24ff371:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_erfc(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = erfc(a).

.. index:: pair: function; basic_sin
.. _doxid-cwrapper_8h_1a9ca3def6d1b10ff4c0a0f46bcd1eccb9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_sin(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = sin(a).

.. index:: pair: function; basic_cos
.. _doxid-cwrapper_8h_1a42e5e9f2eed31a9f57ae95f771e1a64b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_cos(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = cos(a).

.. index:: pair: function; basic_tan
.. _doxid-cwrapper_8h_1a9b25185c5bd7ad508b5e52c7430a7454:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_tan(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = tan(a).

.. index:: pair: function; basic_asin
.. _doxid-cwrapper_8h_1a4080cbf5b5ed0f5a003b7f138c4c6a07:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_asin(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = asin(a).

.. index:: pair: function; basic_acos
.. _doxid-cwrapper_8h_1a29359055eb577e15b1f396b4acc24558:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_acos(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = acos(a).

.. index:: pair: function; basic_atan
.. _doxid-cwrapper_8h_1af8d94e38f52376487aa84157e0f12331:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_atan(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = atan(a).

.. index:: pair: function; basic_csc
.. _doxid-cwrapper_8h_1adabf9cc14b6ed232ad17a7fe85674fe5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_csc(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = csc(a).

.. index:: pair: function; basic_sec
.. _doxid-cwrapper_8h_1aa49580cde1177dd478a48f76f662dd3d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_sec(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = sec(a).

.. index:: pair: function; basic_cot
.. _doxid-cwrapper_8h_1a81921aeb49f053364c3b2151cbd4731f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_cot(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = cot(a).

.. index:: pair: function; basic_acsc
.. _doxid-cwrapper_8h_1af97e6eb64db67b50d2b2b675dd7f4766:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_acsc(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = acsc(a).

.. index:: pair: function; basic_asec
.. _doxid-cwrapper_8h_1a1e993bfcad503d914843d99ce586b108:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_asec(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = asec(a).

.. index:: pair: function; basic_acot
.. _doxid-cwrapper_8h_1ab0b7d835f1da388adc1fae1c750eb63e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_acot(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = acot(a).

.. index:: pair: function; basic_sinh
.. _doxid-cwrapper_8h_1adb761c0edfc8fd0cd54119f38e046300:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_sinh(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = sinh(a).

.. index:: pair: function; basic_cosh
.. _doxid-cwrapper_8h_1a1141888a80bcc33d55b02f8cfa1f0913:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_cosh(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = cosh(a).

.. index:: pair: function; basic_tanh
.. _doxid-cwrapper_8h_1ada2271bbcdc60efaad2349273370e0d1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_tanh(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = tanh(a).

.. index:: pair: function; basic_asinh
.. _doxid-cwrapper_8h_1abaac54cb022e548bde8591848710b104:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_asinh(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = asinh(a).

.. index:: pair: function; basic_acosh
.. _doxid-cwrapper_8h_1aa1f715da94ab8f5137cdfd3e30baa344:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_acosh(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = acosh(a).

.. index:: pair: function; basic_atanh
.. _doxid-cwrapper_8h_1aa49eaa21c83c67ae74f1437e1ab904b5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_atanh(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = atanh(a).

.. index:: pair: function; basic_csch
.. _doxid-cwrapper_8h_1a24f94f5cda1417e235a7b2f64e2321e9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_csch(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = csch(a).

.. index:: pair: function; basic_sech
.. _doxid-cwrapper_8h_1aa9937b1f4f1f388bedf014f2f8ea3e31:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_sech(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = sech(a).

.. index:: pair: function; basic_coth
.. _doxid-cwrapper_8h_1aff5e6f9714cbc566c4be4bc7a9f4895d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_coth(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = coth(a).

.. index:: pair: function; basic_acsch
.. _doxid-cwrapper_8h_1a4acfae9477684eeba5cea82f3dee0f6d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_acsch(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = acsch(a).

.. index:: pair: function; basic_asech
.. _doxid-cwrapper_8h_1ae9baec319058b68e846a129de44a9d06:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_asech(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = asech(a).

.. index:: pair: function; basic_acoth
.. _doxid-cwrapper_8h_1abced99cc2682b23da3e129b5435edc56:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_acoth(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = acoth(a).

.. index:: pair: function; basic_lambertw
.. _doxid-cwrapper_8h_1a189be3593d6a35e1d21b505726d27469:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_lambertw(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = lambertw(a).

.. index:: pair: function; basic_zeta
.. _doxid-cwrapper_8h_1a76ae83895270710eec1d1cab7352c22f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_zeta(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = zeta(a).

.. index:: pair: function; basic_dirichlet_eta
.. _doxid-cwrapper_8h_1aaa92797fe46dd8b6a6360f077b6001d2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_dirichlet_eta(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = dirichlet_eta(a).

.. index:: pair: function; basic_gamma
.. _doxid-cwrapper_8h_1a24513440dc9c2758c07fb8d7cae3ff09:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_gamma(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = gamma(a).

.. index:: pair: function; basic_loggamma
.. _doxid-cwrapper_8h_1afb30719ce252fd251c4b6b1e907df257:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_loggamma(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = loggamma(a).

.. index:: pair: function; basic_sqrt
.. _doxid-cwrapper_8h_1ab5c9c6b633d8978176b2b7c8650eea60:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_sqrt(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = sqrt(a).

.. index:: pair: function; basic_cbrt
.. _doxid-cwrapper_8h_1a1c9735cd255930b8635a10ab74750bda:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_cbrt(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = cbrt(a).

.. index:: pair: function; basic_exp
.. _doxid-cwrapper_8h_1a33bc5ddf4ca5c6e34f9c7e22fb17f86e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_exp(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = exp(a).

.. index:: pair: function; basic_log
.. _doxid-cwrapper_8h_1a7601a099fad4321f086ebd987e0edb67:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_log(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)

Assigns s = log(a).

.. index:: pair: function; basic_atan2
.. _doxid-cwrapper_8h_1af5344134640b4f5b0056cecc9a48ac40:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_atan2(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = atan2(a, b).

.. index:: pair: function; basic_kronecker_delta
.. _doxid-cwrapper_8h_1ae7bc74144baec31f699fb058a6574099:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_kronecker_delta(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = kronecker_delta(a, b).

.. index:: pair: function; basic_lowergamma
.. _doxid-cwrapper_8h_1a8d64cd0c2ba2e936e32d5e91a7515543:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_lowergamma(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = lowergamma(a, b).

.. index:: pair: function; basic_uppergamma
.. _doxid-cwrapper_8h_1a2bfe0eb7254f853a8921ba663659cc98:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_uppergamma(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = uppergamma(a, b).

.. index:: pair: function; basic_beta
.. _doxid-cwrapper_8h_1ae7b06c65425696563c9aea2974a3875a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_beta(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = beta(a, b).

.. index:: pair: function; basic_polygamma
.. _doxid-cwrapper_8h_1a5fecd33409a9d5f34b089afb26434226:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_polygamma(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assigns s = polygamma(a, b).

.. index:: pair: function; basic_str
.. _doxid-cwrapper_8h_1a5fdd95d38b751e591697a31c409f5760:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* basic_str(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns a new char pointer to the string representation of s.

.. index:: pair: function; basic_str_julia
.. _doxid-cwrapper_8h_1a5c8bcc40596d1443bf91f09df8a6bdb5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* basic_str_julia(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Returns a new char pointer to the string representation of s. Compatible with Julia

.. index:: pair: function; basic_str_mathml
.. _doxid-cwrapper_8h_1a8daafffe945b2c2cf94c7ddbcff06b77:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* basic_str_mathml(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Printing mathml.

.. index:: pair: function; basic_str_latex
.. _doxid-cwrapper_8h_1a139a341ac5e3ffd14cfcc3bfe017c2ed:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* basic_str_latex(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Printing latex string.

.. index:: pair: function; basic_str_ccode
.. _doxid-cwrapper_8h_1a4896f46a76120e7510f1e46393fc6d23:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* basic_str_ccode(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Printing C code.

.. index:: pair: function; basic_str_jscode
.. _doxid-cwrapper_8h_1a8d5bef384dd36cef57b829b663c1a92e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* basic_str_jscode(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Printing JavaScript code.

.. index:: pair: function; basic_str_free
.. _doxid-cwrapper_8h_1aff49667c1d7a42c4735bf6b9ff96a2db:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void basic_str_free(char* s)

Frees the string s.

.. index:: pair: function; symengine_have_component
.. _doxid-cwrapper_8h_1ae01d22bd7d92e15548fac34620f80d76:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int symengine_have_component(const char* c)

Returns 1 if a specific component is installed and 0 if not. Component can be "mpfr", "flint", "arb", "mpc", "ecm", "primesieve", "piranha", "boost", "pthread", "llvm" or "llvm_long_double" (all in lowercase). This function, using string comparison, was implemented for particular libraries that do not provide header access (i.e. SymEngine.jl and other related shared libraries). Avoid usage while having access to the headers. Instead simply use HAVE_SYMENGINE_MPFR and other related macros directly.

.. index:: pair: function; is_a_Number
.. _doxid-cwrapper_8h_1a52af55d5d7b0de08ccb4b1d0a3cec37f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_Number(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Return 1 if s is a Number, 0 if not.

.. index:: pair: function; is_a_Integer
.. _doxid-cwrapper_8h_1a06fef0ac644d09063d0daeafcc986744:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_Integer(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Return 1 if s is an Integer, 0 if not.

.. index:: pair: function; is_a_Rational
.. _doxid-cwrapper_8h_1a6c063aaa320f2a4c971f581207d87336:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_Rational(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Return 1 if s is a Rational, 0 if not.

.. index:: pair: function; is_a_Symbol
.. _doxid-cwrapper_8h_1a8080c599e04ed08edcb1810a882eace7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_Symbol(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Return 1 if s is a Symbol, 0 if not.

.. index:: pair: function; is_a_Complex
.. _doxid-cwrapper_8h_1a071d1317fd0fcade2bdaec5c62b56596:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_Complex(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Return 1 if s is a Complex, 0 if not.

.. index:: pair: function; is_a_RealDouble
.. _doxid-cwrapper_8h_1a35e06853720a494c88caf44536804984:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_RealDouble(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c)

Return 1 if c is a RealDouble, 0 if not.

.. index:: pair: function; is_a_ComplexDouble
.. _doxid-cwrapper_8h_1ab1e31be035ee7f3ebdec6aa4c1a4fd49:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_ComplexDouble(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c)

Return 1 if c is a ComplexDouble, 0 if not.

.. index:: pair: function; is_a_RealMPFR
.. _doxid-cwrapper_8h_1a30db359e68d8816e6a9bd85d2688eda1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_RealMPFR(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c)

Return 1 if c is a RealMPFR, 0 if not.

.. index:: pair: function; is_a_ComplexMPC
.. _doxid-cwrapper_8h_1a6b6b9d06bc3c726fd899a5ccee77a7ec:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_ComplexMPC(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c)

Return 1 if c is a ComplexMPC, 0 if not.

.. index:: pair: function; basic_max
.. _doxid-cwrapper_8h_1ac2b3fc3520be71aa1899f6c0c40bd274:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_max(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* d)

Assigns to s the max of the provided args.

.. index:: pair: function; basic_min
.. _doxid-cwrapper_8h_1a146f0113d0dd20153b46f7ab25d7eea5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_min(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* d)

Assigns to s the min of the provided args.

.. index:: pair: function; dense_matrix_new_vec
.. _doxid-cwrapper_8h_1aa5fea20962120faf63f29b8aadac5439:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* dense_matrix_new_vec(unsigned rows, unsigned cols, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* l)

Return a DenseMatrix with l's elements.

.. index:: pair: function; dense_matrix_new_rows_cols
.. _doxid-cwrapper_8h_1a1cf793e1e2af134c74793c1f6d4b9a49:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* dense_matrix_new_rows_cols(unsigned r, unsigned c)

Return a DenseMatrix with r rows and c columns.

.. index:: pair: function; dense_matrix_set
.. _doxid-cwrapper_8h_1a095b062d78aac21460fcc206333a13cc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_set(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* d)

Assign to s, a DenseMatrix with value d.

.. index:: pair: function; dense_matrix_str
.. _doxid-cwrapper_8h_1ad1e948201f86344e84e283c63370d120:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* dense_matrix_str(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s)

Return a string representation of s. The caller is responsible to free the string with 'basic_str_free'

.. index:: pair: function; dense_matrix_rows_cols
.. _doxid-cwrapper_8h_1aae5fbb6bb8bd0d3170f4f2eac796d175:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_rows_cols(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned r, unsigned c)

Resize mat to rxc.

.. index:: pair: function; dense_matrix_get_basic
.. _doxid-cwrapper_8h_1a29035d5127b66c22e59df0988e85bd00:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_get_basic(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned long int r, unsigned long int c)

Assign to s, mat[r][c].

.. index:: pair: function; dense_matrix_set_basic
.. _doxid-cwrapper_8h_1a00de5da94ee215b42892e85b847fdfdd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_set_basic(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned long int r, unsigned long int c, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Assign s to mat[r][c].

.. index:: pair: function; sparse_matrix_get_basic
.. _doxid-cwrapper_8h_1a6d2d89c27fdaaccda997817096bdf327:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` sparse_matrix_get_basic(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* mat, unsigned long int r, unsigned long int c)

Assign to s, mat[r][c].

.. index:: pair: function; sparse_matrix_set_basic
.. _doxid-cwrapper_8h_1a2b221e21057337e0ca2ad9023ec24925:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` sparse_matrix_set_basic(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* mat, unsigned long int r, unsigned long int c, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Assign s to mat[r][c].

.. index:: pair: function; dense_matrix_det
.. _doxid-cwrapper_8h_1ad45328cae3d04b02cbd4d5ab8e9e39d0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_det(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat)

Assign to s, determinent of mat.

.. index:: pair: function; dense_matrix_inv
.. _doxid-cwrapper_8h_1a62cf27ffa9a0d7c264f02f2a809062c6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_inv(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat)

Assign to s, a DenseMatrix which is the inverse of mat.

.. index:: pair: function; dense_matrix_transpose
.. _doxid-cwrapper_8h_1af9fa0f08119b2bde9fcdf86c5c23d464:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_transpose(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat)

Assign to s, a DenseMatrix which is the transpose of mat.

.. index:: pair: function; dense_matrix_submatrix
.. _doxid-cwrapper_8h_1a6236ec2d9438644ef88cf1d163a16de5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_submatrix(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat, unsigned long int r1, unsigned long int c1, unsigned long int r2, unsigned long int c2, unsigned long int r, unsigned long int c)

Assign to s, a SubMatrix of mat, starting with [r1, r2] until [r2, c2], with step sizes [r, c]

.. index:: pair: function; dense_matrix_row_join
.. _doxid-cwrapper_8h_1aaa47857df3bd6828b1bc6d0f404cf059:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_row_join(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* B)

The matrix which results from joining the rows of A and B.

.. index:: pair: function; dense_matrix_col_join
.. _doxid-cwrapper_8h_1a039090a0079db93f39b7fa2da4135c1f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_col_join(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* B)

The matrix which results from joining the columns of A and B.

.. index:: pair: function; dense_matrix_row_del
.. _doxid-cwrapper_8h_1af75a84ee1456d132dc453fac807acf24:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_row_del(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* C, unsigned k)

Delete a specific row of the matrix.

.. index:: pair: function; dense_matrix_col_del
.. _doxid-cwrapper_8h_1aaf55b509a2b4e2d047014d5c13364dd7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_col_del(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* C, unsigned k)

Delete a specific column of the matrix.

.. index:: pair: function; dense_matrix_cols
.. _doxid-cwrapper_8h_1ab870894f075d089fbfdf7634af688d71:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	unsigned long int dense_matrix_cols(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s)

Return the number of columns of s.

.. index:: pair: function; dense_matrix_rows
.. _doxid-cwrapper_8h_1a5ee5c7757bfc83593ebebf6423433970:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	unsigned long int dense_matrix_rows(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s)

Return the number of rows of s.

.. index:: pair: function; dense_matrix_add_matrix
.. _doxid-cwrapper_8h_1a4771b88d88e38e131fd194683e3b567b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_add_matrix(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matB)

Assign to s, the addition of matA and matB.

.. index:: pair: function; dense_matrix_mul_matrix
.. _doxid-cwrapper_8h_1abb2cde0e31c9f4e4c61873674591ae16:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_mul_matrix(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matB)

Assign to s, the matrix multiplication of matA and matB.

.. index:: pair: function; dense_matrix_add_scalar
.. _doxid-cwrapper_8h_1a61322c8e06d00457e92c84f7dd9c49d5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_add_scalar(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assign to s, the addition of scalar b to matrix matA.

.. index:: pair: function; dense_matrix_mul_scalar
.. _doxid-cwrapper_8h_1a9475315b968b7347f046579630d91424:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_mul_scalar(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* matA, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Assign to s, the multiplication of scalar b to matrix matA.

.. index:: pair: function; dense_matrix_LU
.. _doxid-cwrapper_8h_1a9719dd58864733d0e9c92e1f463e16d5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_LU(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* l, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* u, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat)

Assign to l and u, LU factorization of mat.

.. index:: pair: function; dense_matrix_LDL
.. _doxid-cwrapper_8h_1a963d3d9f4e830ab0e8389b069a0d6822:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_LDL(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* l, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* d, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat)

Assign to l and d, LDL factorization of mat.

.. index:: pair: function; dense_matrix_FFLU
.. _doxid-cwrapper_8h_1adb52e1b936ce2cfde462112a9254fcc1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_FFLU(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* lu, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat)

Assign to lu, fraction free LU factorization of mat.

.. index:: pair: function; dense_matrix_FFLDU
.. _doxid-cwrapper_8h_1a664524af9338e69745f8d43f279c66fb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_FFLDU(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* l, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* d, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* u, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* mat)

Assign to l, d and u, FFLDU factorization of mat.

.. index:: pair: function; dense_matrix_LU_solve
.. _doxid-cwrapper_8h_1af3af7124a952d79334a63249593e5d8a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_LU_solve(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* x, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* b)

Assign to x, solution to A x = b.

.. index:: pair: function; dense_matrix_ones
.. _doxid-cwrapper_8h_1a76df2ff71252e01780ddfdf0d54e93ef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_ones(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, unsigned long int r, unsigned long int c)

Assign to s, a matrix of ones of size rxc.

.. index:: pair: function; dense_matrix_zeros
.. _doxid-cwrapper_8h_1a90b1e50d7f04cc359b5b36b95e91c1db:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_zeros(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, unsigned long int r, unsigned long int c)

Assign to s, a matrix of zeros of size rxc.

.. index:: pair: function; dense_matrix_diag
.. _doxid-cwrapper_8h_1afce78cce62fb8602ca2018102df20b88:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_diag(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* d, long int k)

Assign to s, a diagonal matrix with a diagonal at offset k, with elements in d

.. index:: pair: function; dense_matrix_eye
.. _doxid-cwrapper_8h_1a896d4f531c4251a03a45f5d136c3e55a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_eye(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* s, unsigned long int N, unsigned long int M, int k)

Assign to s, a matrix of size NxM, with diagonal of 1s at offset k.

.. index:: pair: function; dense_matrix_diff
.. _doxid-cwrapper_8h_1a2adb9eab03c9ae8354ce37343fb31b5d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_diff(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* result, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` const x)

Assign to result, elementwise derivative of A with respect to x. Returns 0 on success.

.. index:: pair: function; dense_matrix_jacobian
.. _doxid-cwrapper_8h_1aa8a1f4aa8e288bc57c46da193124fb37:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` dense_matrix_jacobian(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* result, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* A, const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* x)

Assign to result, jacobian of A with respect to x. Returns 0 on success.

.. index:: pair: function; sparse_matrix_init
.. _doxid-cwrapper_8h_1abaebe3b0dec0903cb6f8e7689d3c861c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void sparse_matrix_init(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* s)

Assign to s, a CSRMatrix.

.. index:: pair: function; sparse_matrix_rows_cols
.. _doxid-cwrapper_8h_1a43139880bac11f30a17080c1dde83851:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void sparse_matrix_rows_cols(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* s, unsigned long int r, unsigned long int c)

Assign to s, a CSRMatrix with r rows and c columns.

.. index:: pair: function; sparse_matrix_str
.. _doxid-cwrapper_8h_1a984f2c4499cf6f29455c6a896f3ff424:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* sparse_matrix_str(const :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* s)

Return a string representation of s.

.. index:: pair: function; is_a_DenseMatrix
.. _doxid-cwrapper_8h_1ab1556312823aed287c7f6b2a689764cc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_DenseMatrix(const :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* c)

Return 1 if c is a DenseMatrix, 0 if not.

.. index:: pair: function; is_a_SparseMatrix
.. _doxid-cwrapper_8h_1a5eb9da0e9c0974fd64980e6711595eb7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int is_a_SparseMatrix(const :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* c)

Return 1 if c is a SparseMatrix, 0 if not.

.. index:: pair: function; dense_matrix_eq
.. _doxid-cwrapper_8h_1a4412707082a19a6d28ea56e870ec7ba7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int dense_matrix_eq(:ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* lhs, :ref:`CDenseMatrix<doxid-struct_c_dense_matrix>`* rhs)

Return 1 if lhs == rhs, 0 if not.

.. index:: pair: function; sparse_matrix_eq
.. _doxid-cwrapper_8h_1a1cc281bc6ca08350c355612eabd8c7e6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int sparse_matrix_eq(:ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* lhs, :ref:`CSparseMatrix<doxid-struct_c_sparse_matrix>`* rhs)

Return 1 if lhs == rhs, 0 if not.

.. index:: pair: function; setbasic_insert
.. _doxid-cwrapper_8h_1a563e45536600e208e0dd7b318da5de6a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int setbasic_insert(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` value)

Returns 1 if insert is successful and 0 if set already contains the value and insertion is unsuccessful

.. index:: pair: function; setbasic_find
.. _doxid-cwrapper_8h_1a5a72162890f4b80a3065d7ca99bf5080:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int setbasic_find(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` value)

Returns 1 if value is found in the set and 0 if not.

.. index:: pair: function; setbasic_erase
.. _doxid-cwrapper_8h_1a846ffa71e778ade1895e81a780dc29ac:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int setbasic_erase(:ref:`CSetBasic<doxid-struct_c_set_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` value)

Returns 1 if value was erased from the set and 0 if not.

.. index:: pair: function; mapbasicbasic_get
.. _doxid-cwrapper_8h_1acde3e8c5d508f54736d66d4a4c00d320:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int mapbasicbasic_get(:ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* self, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` key, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` mapped)

Returns 1 if such a key exists in the map and get is successful, 0 if not.

.. index:: pair: function; basic_get_args
.. _doxid-cwrapper_8h_1a65c9c923033024ae642b9ff33d9abb08:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_get_args(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* args)

Returns a :ref:`CVecBasic <doxid-struct_c_vec_basic>` of vec_basic given by get_args.

.. index:: pair: function; basic_free_symbols
.. _doxid-cwrapper_8h_1a3287e422282d12284e8ce38641d328fe:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_free_symbols(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self, :ref:`CSetBasic<doxid-struct_c_set_basic>`* symbols)

Returns a :ref:`CSetBasic <doxid-struct_c_set_basic>` of set_basic given by free_symbols.

.. index:: pair: function; basic_function_symbols
.. _doxid-cwrapper_8h_1a283840b8821277e29a717c92a06360fc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_function_symbols(:ref:`CSetBasic<doxid-struct_c_set_basic>`* symbols, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self)

Returns a :ref:`CSetBasic <doxid-struct_c_set_basic>` of set_basic given by function_symbols.

.. index:: pair: function; basic_hash
.. _doxid-cwrapper_8h_1ab19d755a1017adc4e60a52bcaf8f6ef0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	size_t basic_hash(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` self)

returns the hash of the Basic object

.. index:: pair: function; basic_subs
.. _doxid-cwrapper_8h_1a0b465e25a14f5d2f2b3187bf596d56d3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_subs(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` e, const :ref:`CMapBasicBasic<doxid-struct_c_map_basic_basic>`* mapbb)

substitutes all the keys with their mapped values in the given basic ``e`` and returns it through basic 's'

.. index:: pair: function; basic_subs2
.. _doxid-cwrapper_8h_1a8588e81d6f6808602f67d2de1b49ec1c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_subs2(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` e, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

substitutes a basic 'a' with another basic 'b', in the given basic 'e' and returns it through basic 's'

.. index:: pair: function; function_symbol_set
.. _doxid-cwrapper_8h_1a2e7a8b9c419d7db4b39f5cca255f8bf2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` function_symbol_set(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const char* c, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* arg)

Assigns to s a FunctionSymbol with name described by c, with dependent symbols arg

.. index:: pair: function; function_symbol_get_name
.. _doxid-cwrapper_8h_1ac1ab6bc090aae327b681ead1a30efdab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* function_symbol_get_name(const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Returns the name of the given FunctionSymbol. The caller is responsible to free the string with 'basic_str_free'

.. index:: pair: function; basic_coeff
.. _doxid-cwrapper_8h_1ae676445d52e3c20d86e529db87e369d2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_coeff(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` c, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` x, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n)

Returns the coefficient of x^n in b.

.. index:: pair: function; vecbasic_linsolve
.. _doxid-cwrapper_8h_1a45323eaae8f5f1c2aa4725a81fba0087:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` vecbasic_linsolve(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* sol, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* sys, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* sym)

Wrapper for ``solve.h``.

Solves the system of linear equations given by sys

.. index:: pair: function; basic_solve_poly
.. _doxid-cwrapper_8h_1a704a9fc835d6ab08cf35d5aa6de184bf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_solve_poly(:ref:`CSetBasic<doxid-struct_c_set_basic>`* r, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` f, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s)

Solves polynomial equation f if the set of solutions is finite.

.. index:: pair: function; ascii_art_str
.. _doxid-cwrapper_8h_1a96aa3a224ee194cc9d47e1098e3e0a0f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* ascii_art_str()

Wrapper for :ref:`ascii_art() <doxid-namespace_sym_engine_1a0abfe74379edd0eacdf5d82909c13b00>`

Returns a new char pointer to the ascii_art string The caller is responsible to free the pointer using 'basic_str_free'.

.. index:: pair: function; ntheory_gcd
.. _doxid-cwrapper_8h_1a5e08ddbb7adb8fccfaa9d0b848dacc76:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_gcd(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Wrapper for ntheory Greatest Common Divisor

.. index:: pair: function; ntheory_lcm
.. _doxid-cwrapper_8h_1a020d5a41222e97dccb4e914b29452a48:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_lcm(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Least Common Multiple.

.. index:: pair: function; ntheory_gcd_ext
.. _doxid-cwrapper_8h_1a981eacb5a5253eb8e06bd2efd6175d97:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_gcd_ext(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` g, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` t, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b)

Extended GCD.

.. index:: pair: function; ntheory_nextprime
.. _doxid-cwrapper_8h_1a449801e2625a05b473477e14c2876068:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_nextprime(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a)



.. rubric:: Returns:

next prime after ``a``

.. index:: pair: function; ntheory_mod
.. _doxid-cwrapper_8h_1a0035ab01e4ee1fbc38205c370e94853c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_mod(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d)

modulo round toward zero

.. index:: pair: function; ntheory_quotient
.. _doxid-cwrapper_8h_1a14bb44d09a45e26641554dae2b8e444a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_quotient(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d)



.. rubric:: Returns:

quotient round toward zero when ``n`` is divided by ``d``

.. index:: pair: function; ntheory_quotient_mod
.. _doxid-cwrapper_8h_1a6040f68917193ac99c45b95ef90ca4f1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_quotient_mod(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` q, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` r, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d)



.. rubric:: Returns:

modulo and quotient round toward zero

.. index:: pair: function; ntheory_mod_f
.. _doxid-cwrapper_8h_1adcd15e06804fd597740d66c7f4fa1ede:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_mod_f(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d)

modulo round toward -inf

.. index:: pair: function; ntheory_quotient_f
.. _doxid-cwrapper_8h_1af8bd21c229f70f4b1f68ce5a54c26be8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_quotient_f(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d)



.. rubric:: Returns:

quotient round toward -inf when ``n`` is divided by ``d``

.. index:: pair: function; ntheory_quotient_mod_f
.. _doxid-cwrapper_8h_1abcf51dfdafdd7ff5161af1b525e56053:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_quotient_mod_f(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` q, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` r, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` n, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` d)



.. rubric:: Returns:

modulo and quotient round toward -inf

.. index:: pair: function; ntheory_mod_inverse
.. _doxid-cwrapper_8h_1a36614f2a82e2fcd5614ecd5175445ed9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int ntheory_mod_inverse(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` m)

inverse modulo

.. index:: pair: function; ntheory_fibonacci
.. _doxid-cwrapper_8h_1a078c4823e6732f997654494b97c096b3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_fibonacci(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a)

nth Fibonacci number // fibonacci(0) = 0 and fibonacci(1) = 1

.. index:: pair: function; ntheory_fibonacci2
.. _doxid-cwrapper_8h_1ad9b13c5ab8c3fd31a8d78626549defd1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_fibonacci2(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` g, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a)

Fibonacci n and n-1.

.. index:: pair: function; ntheory_lucas
.. _doxid-cwrapper_8h_1aac41f5cfa8acd87cb10a8e8ac77498c1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_lucas(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a)

Lucas number.

.. index:: pair: function; ntheory_lucas2
.. _doxid-cwrapper_8h_1a441ec1f04e50096d310449a072a5df38:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_lucas2(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` g, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long a)

Lucas number n and n-1.

.. index:: pair: function; ntheory_binomial
.. _doxid-cwrapper_8h_1a9525012e55bc3749d711663530074a9d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_binomial(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` a, unsigned long b)

Binomial Coefficient.

.. index:: pair: function; ntheory_factorial
.. _doxid-cwrapper_8h_1a98b34bc325f0bcd4be5c07cfcb6db170:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` ntheory_factorial(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, unsigned long n)

Factorial.

.. index:: pair: function; basic_evalf
.. _doxid-cwrapper_8h_1a749a36ddf8111708de9630fc84d534eb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_evalf(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` s, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` b, unsigned long bits, int real)

Evaluate b and assign the value to s.

Evaluate b and assign the value to s.

.. index:: pair: function; basic_as_numer_denom
.. _doxid-cwrapper_8h_1aaf7ece94666c43b31773c82b8c948d8e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_as_numer_denom(:ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` numer, :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` denom, const :ref:`basic<doxid-cwrapper_8h_1acdcec76b58302e8957cecfccde1126ab>` x)

Wrapper for as_numer_denom.

.. index:: pair: function; basic_cse
.. _doxid-cwrapper_8h_1a4ce40c59040f62c01c3ce81d976ca5e1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CWRAPPER_OUTPUT_TYPE<doxid-symengine__exception_8h_1acde0fa05dcab0a731a82a0ffadf00dee>` basic_cse(:ref:`CVecBasic<doxid-struct_c_vec_basic>`* replacement_syms, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* replacement_exprs, :ref:`CVecBasic<doxid-struct_c_vec_basic>`* reduced_exprs, const :ref:`CVecBasic<doxid-struct_c_vec_basic>`* exprs)

Wrapper for LambdaRealDoubleVisitor.

.. index:: pair: function; symengine_print_stack_on_segfault
.. _doxid-cwrapper_8h_1affc319585c888358b3fe5af4ab2719ba:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void symengine_print_stack_on_segfault()

Print stacktrace on segfault.

Macros
------

.. index:: pair: define; IMPLEMENT_TYPEID
.. _doxid-basic_8h_1a945f4a70c3ac1d14cb0637ef01a81b69:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define IMPLEMENT_TYPEID(SYMENGINE_ID)

Inline members and functions.

